{"version":3,"sources":["util/apollo/operation/index.ts","util/apollo/operation/operation.ts","../ /^/.//.*//messages/.po$/ groupOptions: {} namespace object","locales lazy /^/.//.*//messages/.js$/ groupOptions: {} namespace object","fe/session/anon.generated.tsx","graphql/types.generated.ts","mn-constants.tsx","apollo/uploadLink.js","apollo/client.tsx","ui/themes/default.theme.ts","ui/styleguide/Wrapper.tsx","ui/themes/styled.ts","ui/elements/Layout/index.tsx","ui/elements/Loader/index.tsx","ui/elements/Button/index.tsx","ui/modules/Loadmore/index.tsx","ui/pages/discover/index.tsx","HOC/pages/discover/DiscoverPage.tsx","util/keyvaluestore/localSessionStorage.ts","context/global/localizationCtx.tsx","context/global/pageCtx.tsx","fe/lib/graphql/ctx.ts","fe/session/me.generated.tsx","fe/session/useMe.ts","HOC/context/SideBar.tsx","ui/elements/Logo/index.tsx","ui/elements/Panel/index.tsx","ui/pages/login/index.tsx","fe/session/useAnon.ts","HOC/pages/login/LoginPage.tsx","ui/templates/guest.tsx","HOC/modules/SearchBox/SearchBox.tsx","HOC/templates/Guest/Guest.tsx","routes/wrappers/RedirectBySession.tsx","routes/lib/helper.tsx","routes/LoginPageRoute.tsx","HOC/lib/notifyMustLogin.tsx","ui/elements/Avatar/index.tsx","ui/modules/Dropdown/index.tsx","ui/modules/MainHeader/dropdown.tsx","routes/CommunityPageRoute.tsx","ui/modules/MainHeader/index.tsx","ui/modules/Modal/index.tsx","HOC/lib/formik-validations.ts","ui/modules/CreateCollectionPanel/style.ts","ui/modules/EconomicEventManager/styles.ts","ui/elements/LocationPiker/index.tsx","ui/elements/Alert/index.tsx","ui/elements/Input/index.tsx","ui/elements/Map/index.tsx","ui/elements/LocationPanel/index.tsx","HOC/modules/CreateLocationPanel/CreateLocationPanelHOK.tsx","ui/elements/CustomSelect/index.tsx","ui/elements/CustomSelect/select.ts","ui/modules/DropzoneModal/index.tsx","ui/modules/CreateResourcePanel/index.tsx","ui/modules/Sidebar/index.tsx","HOC/modules/CreateResourcePanel/CreateResourcePanelHOC.tsx","HOC/modules/Header/Header.tsx","ui/pages/home/index.tsx","HOC/pages/home/HomeHoc.tsx","fe/activities/inbox/my/useMyInboxActivities.ts","ui/pages/notFound/index.tsx","HOC/pages/not-found/NotFound.tsx","routes/HomePageRoute.tsx","HOC/modules/Sidebar/Sidebar.tsx","ui/modules/Burger/index.tsx","ui/templates/withSidebar.tsx","fe/user/useUser.generated.tsx","fe/user/useUser.ts","ui/elements/Layout/comment.tsx","ui/modules/HeroUser/index.tsx","HOC/modules/HeroUser/HeroUser.tsx","ui/pages/user/index.tsx","ui/modules/Resource/PrimaryAccountablePerson/index.tsx","ui/pages/resource/index.tsx","util/constants/pagination.ts","ui/modules/SocialText/index.tsx","ui/pages/community/index.tsx","ui/pages/inventory/index.tsx","ui/modules/Filter/index.tsx","HOC/pages/resource/EconomicResource.generated.tsx","HOC/pages/inventory/InventoryPage.generated.tsx","HOC/pages/user/UserPage.tsx","HOC/pages/inventory/InventoryPage.tsx","util/main.ts","routes/UserPageRoute.tsx","HOC/templates/WithSidebar/WithSidebar.tsx","routes/DiscoverPageRoute.tsx","HOC/pages/resource/EconomicResourceHOK.tsx","routes/InventoryResourceItemRouter.tsx","ui/pages/signUp/index.tsx","HOC/pages/signUp/SignUpPage.tsx","routes/SignupPageRoute.tsx","containers/App/Router.tsx","containers/App/topMessage.tsx","containers/App/App.tsx","context/global/algolia.tsx","context/global/index.tsx","registerServiceWorker.js","index.tsx"],"names":["ApolloLink","getOpType","op","maybeOpDefNode","query","definitions","find","def","kind","name","value","operationName","operation","getOperationNameAndType","filter","reduce","found","opDefNode","maybeFieldNode","selectionSet","selections","selNode","opType","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","gql","AnonLoginDocument","ConfirmEmailDocument","AnonSignUpDocument","AgentType","TimeUnit","PHOENIX_SOCKET_ENDPOINT","process","REACT_APP_PHOENIX_SOCKET_ENDPOINT","INVITE_ONLY_TEXT","parseInt","REACT_APP_DEFAULT_PAGE_SIZE","REACT_APP_INVITE_ONLY_TEXT","logo_small_url","locales","desc","rtl","mothershipAppId","REACT_APP_MOTHERSHIP_API_ID","mothershipApiKey","REACT_APP_MOTHERSHIP_API_KEY","mothershipEnv","REACT_APP_MOTHERSHIP_ENV","mothershipCreds","appId","apiKey","indexName","searchDisabled","colors","typography","primary","s1","s2","s3","m1","m2","m3","l1","l2","l3","GraphQLError","require","Observable","selectURI","selectHttpOptionsAndBody","fallbackHttpConfig","serializeFetchParameter","createSignalIfSupported","parseAndCheckHttpResponse","extractFiles","setPath","path","i","parts","trim","split","length","createUploadLink","uri","fetchUri","fetch","linkFetch","fetchOptions","credentials","headers","includeExtensions","linkConfig","http","options","context","getContext","clientAwareness","version","contextConfig","body","clone","files","size","form","FormData","append","forEach","paths","String","JSON","stringify","variables","file","observer","abortController","signal","controller","response","setContext","result","next","complete","catch","error","errors","data","abort","initialise","a","localKVStore","appLinks","authToken","get","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","cache","InMemoryCache","cacheRedirects","Query","activity","_","args","getCacheKey","__typename","activityId","collection","collectionId","community","communityId","comment","commentId","user","userId","thread","threadId","resource","resourceId","dataIdFromObject","obj","defaultDataIdFromObject","setToken","token","set","delToken","undefined","del","setTokenLink","nextLink","console","log","resp","login","authLink","authorization","errorLink","onError","errorResponse","graphQLErrors","networkError","message","HttpStatus","getStatusText","statusCode","of","unexpectedError","err","test","respStr","clientAwarenessHeadersLinkForNonApollo3Server","ctx","ALLOWED_ANONYMOUS_MUTATIONS","alertBlockMutationsForAnonymousLink","includes","httpLink","from","Boolean","absintheSocket","createAbsintheSocketLink","AbsintheSocket","PhoenixSocket","link","hasSubscription","client","ApolloClient","defaultOptions","watchQuery","fetchPolicy","errorPolicy","mutate","theme","breakpoints","app","appInverse","secondary","tertiary","positive","negative","warning","lightest","lighter","light","mediumlight","medium","mediumdark","dark","darker","darkest","border","variants","bg","color","avatar","borderRadius","text","subhead","fontFamily","fontSize","textTransform","letterSpacing","fontWeight","suptitle","heading","buttons","height","px","backgroundColor","cursor","danger","outline","space","ThemeProvider","children","moodlenet","styled","styledComponents","List","Box","MainContainer","Flex","HomeBox","WrapperCont","Wrapper","media","lessThan","MenuItem","NavLink","MenuList","props","ObjectsList","CollectionsWrapper","ButtonIcon","Bounce","Loader","className","variant","WrapperButton","Button","transitions","isIcon","disabled","darken","lighten","MNButton","width","fullWidth","isSubmitting","isDisabled","LoadMore","p","LoadMoreFormik","onClick","submitForm","DiscoverPageTabs","Discover","ActivitiesBox","FeaturedCommunitiesBox","CollectionsBoxes","FeaturedCollectionsBox","CommunitiesBoxes","tabPaths","WrapperFeatured","exact","communities","collections","timeline","UsersIcon","default","ActivityIcon","Menu","Title","mt","to","createLocalSessionKVStorage","type","prefix","storage","localStorage","sessionStorage","pkey","key","parse","getItem","val","setItem","serialize","removeItem","str","warn","kvstore","savedLangCode","defaultLocale","available","locale","i18n","setupI18n","LocaleContext","createContext","current","ProvideLocalizationCtx","useState","setCurrent","catalogs","setCatalogs","useEffect","setHTMLDirection","loadCatalog","cat","useCallback","localeCode","Settings","localeContextValue","useMemo","language","Provider","RTL","htmlEl","document","querySelector","dir","style","direction","classList","remove","add","PageCtx","setTitle","ProvidePageCtx","useContext","subTitle","setSubTitle","subTitleToSet","values","nextSubTitle","title","Helmet","usePageTitle","discoverActivitiesPageTitle","discoverCollectionsPageTitle","discoverCommunitiesPageTitle","DiscoverPage","basePath","tab","discovberPageTitle","Collections","Communities","Activities","propsUI","m","discoverLocation","getPath","defaultErrorMsg","errorMsg","join","defaultSuccessMsg","notify","content","toast","mnCtx","opts","forward","noShowSuccess","successMsg","noShowError","notifyGqlResponse","UseMeDataFragmentDoc","MeDocument","useMe","baseOptions","meQ","ApolloReactHooks","me","loading","SideBarContext","isOpen","toggleOpen","ProvideSideBarContext","useReducer","is","LogoContainer","React","Header","isHome","Tagline","div","Logo","h5","WrapperPanel","Panel","PanelTitle","Text","Nav","NavItem","tt","i18nMark","placeholders","email","password","Login","formik","Container","LoginWrapper","FormWrapper","FormLogin","LoginForm","onSubmit","handleSubmit","placeholder","onChange","handleChange","Spacer","ResetPass","my","Or","Browse","Right","mb","Background","Infos","Info","useAnon","updateMe","proxy","writeQuery","loginMut","loginStatus","GQL","confirmEmailMut","confirmEmailStatus","signUpMut","signUpStatus","update","confirmEmail","signUp","registration","validationSchema","Yup","max","required","loginPageTitle","LoginPageHOC","history","useHistory","useFormik","initialValues","enableReinitialize","currentUser","push","Guest","HeaderBox","SearchBox","Page","SearchBar","Icon","goBack","greaterThan","GuestTemplate","withoutHeader","RedirectAuthenticated","RedirectAuthenticatedToHome","RedirectAnonymous","RedirectAnonymousToLogin","locationHelper","routeProps","routePaths","params","index","usePath","searchParams","URLSearchParams","toString","url","generatePath","matchPath","getSimpleLink","actor","internal","isLocal","internalPath","canonicalUrl","simpleLink","external","LoginPageRoute","component","match","loginLocation","defaultOpts","useNotifyMustLogin","loggedIn","sizes","s","l","Avatar","src","initials","substr","toUpperCase","Dropdown","orientation","close","onOutsideClick","DropdownItem","lined","Item","DropdownSidebar","userLink","toggleDropdown","href","target","strokeWidth","CreateDropdown","createCommunity","createIntent","createResource","communityLocation","MainHeader","location","useLocation","useParams","isCommunityPage","pathname","isCreateOpen","toggleCreate","HeaderWrapper","Left","HomeLink","Search","MapLink","CreateNav","sx","position","alignItems","HeaderName","ml","substring","icon","isOpenDropdown","Signin","Link","ellipsis","AlertWrapper","Dialog","Action","clearFix","Close","Content","Actions","CounterChars","ContainerForm","Portal","big","el","display","ReactDOM","createPortal","this","Component","_el","createElement","setAttribute","appendChild","Modal","closeModal","handleCloseModal","TestUrlOrFile","File","CollectionContainerForm","HeroInfo","Hero","FormGroup","FormLabel","LocationPiker","onSelect","WrapperSelect","selectProps","address","geocodeByAddress","label","results","formatted_address","geometry","lat","lng","classNamePrefix","onLoadFailed","Alert","CustomInput","readOnly","hint","class","FieldWrapper","htmlFor","CustomAlert","mapPin","ReactDOMServer","renderToString","fill","markerIcon","divIcon","html","iconSize","Map","center","zoom","markers","tileAttribution","mapCenter","LatLngBounds","getCenter","TileLayer","attribution","popup","Marker","Popup","LocationPanel","showLocationPanel","setShowLocationData","preventDefault","long","Input","note","CreateLocationPanelHOC","min","summary","done","SignupSchema","shape","CreateResourcePanelProps","validateOnChange","validateOnBlur","Select","CustomSelect","onInputChange","components","noChange","openMenuOnClick","setIsOpen","optionsList","displayUsername","option","isOptionDisabled","isLoading","isClearable","isRtl","isSearchable","menuIsOpen","onFocus","onBlur","setSelectOption","arr","getLabel","element","template","variable","replace","DropzoneArea","initialUrl","uploadType","onFileSelect","filePattern","fileUrl","setFileUrl","currentFile","setCurrentFile","URL","revokeObjectURL","useDropzone","accept","onDrop","acceptedFiles","localUrl","createObjectURL","getRootProps","getInputProps","isDragActive","InfoContainer","Thumb","WrapperIcon","Img","backgroundImage","indexOf","FileThumb","FileName","WrapperFile","Status","CreateResourcePanel","unitPages","actionList","spatialThings","providerList","receiverList","toggleCreateLocation","setAction","providerArr","setProviderArr","receiverArr","setReceiverArr","unitLst","setUnitLst","Date","startDate","setStartDate","onIconFileSelected","setValues","image","unit","symbol","hasPointInTime","toISOString","edges","initialIconUrl","eventNote","provider","DropdownIndicator","newList","item","toLowerCase","receiver","action","padding","selected","date","dateFormat","atLocation","LocationBlockStyle","hasUnit","hasNumericalValue","marginLeft","CreateResourcePanelHOC","notOneOf","currentLocation","MainHeaderHOC","notifiedMustLogin","showCreateLocation","toggleShowCreateLocation","showCreateCommunity","toggleShowCreateCommunity","showCreateIntent","toggleShowCreateIntent","showCreateResource","toggleShowCreateResource","CreateCommunityModal","CreateIntentModal","CreateResourceModal","toggleSideBar","headerProps","character","username","SidebarComponent","InternalWrapper","SidebarFixed","SidebarOverflow","SidebarLink","isActive","ItemTitle","ItemTitleDir","Sidebar","isSidebarOpen","status","Loading","discoverPath","homePath","Home","InboxElements","homeMyTimelinePageTitle","HomePageHOC","activitiesPage","userActivityEdge","homeProps","NotFound","textAlign","aria-label","role","notFoundPageTitle","NotFoundHOC","HomePageRoute","homeLocation","SidebarHOC","StatusUI","Loaded","Burger","open","setOpen","StyledBurger","Side","userImage","signout","StyledMenu","Profile","Username","RightMenuWrapper","Span","CreateMenuSpan","Bottom","User","span","button","nav","WithSidebar","SidebarBox","Footer","FootWrapper","Bavatar","HeroUserUserDataFragmentDoc","UserDataDocument","useUser","userQ","isMe","Comment","MDComment","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","HeroUser","ProfileBox","HeroBg","FlexProfile","WrapperHero","HeroAction","mr","following","toggleFollowFormik","More","RightDd","flag","flex","isFlagged","HeroTitle","profile","isAdmin","AdminBadge","Location","userName","isFlagging","toggleFlagging","FlagModal","userHeroProps","loadedProps","PackageIcon","userInfo","HeroUserBox","ActivityBoxes","InventoryBoxes","totalCommunities","totalCollections","totalUsers","loadMoreActivities","rel","TextLink","pt","PersonWrapper","ArrowDownIcon","ArrowUpIcon","MapIcon","BoxIcon","PenIcon","EditIcon","UserIcon","ClockIcon","RemoveIcon","EyeIcon","Calendar","QRCode","ResourceItem","openEditModal","openUpdateResourceModal","openDeleteResourceModal","window","first","second","showList","setShowList","ActionsWrapper","InventoryWrapper","LeftColWrapper","ImageWrapper","alt","QRCodeWrapper","InfoWrapper","onhandQuantity","primaryAccountable","track","trace","TrackWrapper","Badge","toResourceInventoriedAs","format","resourceQuantity","resourceInventoriedAs","containedIn","contains","lot","stage","trackingIdentifier","unitOfEffort","ASC","Textarea","ButtonWrapper","CreateItemButton","Inventory","inventory","owner","currentList","setCurrentList","currentPage","setCurrentPage","slice","WrapperLink","PaginationWrapper","totalItems","pageSize","page","maxPaginationNumbers","defaultActivePage","previousPageText","paddingBottom","ArrowUp","ArrowDown","FilterIcon","ClearIcon","Filter","filterSet","triggerOpen","onClear","handleSorting","event","buttonName","currentTarget","sort","order","FilterButton","FilterWrapper","SortButton","SortButtonInner","search","FormGroupChek","LabelCustom","checked","ClearButton","Label","OnhandQuantityFragmentDoc","ResourceQuantityFragmentDoc","EconomicResourceDocument","EconomicResourcesFilteredDocument","UserPageTab","queryString","INITIAL_FILTER","InventoryPage","triggerTab","setFilter","queryStringGetter","agent","economicResourcesFiltered","filteredInventory","setFilteredInventory","b","reverse","checkFilter","newInventory","queryStringSetter","notEmptyObj","notEmptyValue","prop","isClear","prev","UserPage","userPageProps","LikesBoxes","userActivities","verb","verbDisplay","CommunityBoxes","UserBoxes","UserPageRoute","maybeTabStr","Starred","Following","userLocation","WithSidebarTemplate","withSidebarProps","DiscoverPageRoute","EconomicResourceHOK","economicResource","showUpdateResource","toggleShowUpdateResource","showDeleteResource","toggleShowDeleteResource","PerformEventModal","EditResourceModal","DeleteResourceModal","InventoryResourceItemRouter","passwordConfirm","SignUpPage","registeredUserID","registeredEmail","submitCount","Aware","green","signUpPageTitle","SignUpPageHOC","oneOf","regInput","called","signup","SignupPageRoute","Router","TopMessage","show","setShow","AlertWrap","top","right","App","createURL","searchState","qs","searchClient","algoliasearch","ProvideAlgoliaContext","backLoc","useRef","searching","isSearchLocation","setSearchState","setUrlTO","setTimeout","EMPTY_QUERY","searchStateToUrl","clearTimeout","hash","handleSetSearchState","newSearchState","refinementList","index_type","InstantSearch","onSearchStateChange","refresh","locationPathname","ProvideContexts","isLocalhost","hostname","register","navigator","origin","addEventListener","swUrl","serviceWorker","ready","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","Global","createGlobalStyle","createLocalKVStore","getApolloClient","apolloClient","ApolloApp","hideProgressBar","transition","Slide","autoClose","newestOnTop","render","getElementById","registerServiceWorker","run"],"mappings":"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","file":"static/js/main.c5ea6fa1.chunk.js","sourcesContent":["export * from './operation';\nexport * from './types.d';\n","import { ApolloLink, FetchResult, Operation } from 'apollo-link';\nimport {\n  OperationDefinitionNode,\n  OperationTypeNode,\n  FieldNode,\n  DocumentNode\n} from 'graphql';\nimport {\n  OperationDef,\n  OpRequestHandler,\n  Result,\n  VarsOperation,\n  Name\n} from './types';\n\nexport function isOp<D extends OperationDef>(\n  operationName: Name<D>,\n  operation: Operation\n): operation is VarsOperation<D> {\n  return operation.operationName === operationName;\n}\n\nexport class ApolloLinkOp<D extends OperationDef> extends ApolloLink {\n  constructor(operationName: Name<D>, reqHandl: OpRequestHandler<D>) {\n    super((operation, nextLink) => {\n      if (isOp<D>(operationName, operation)) {\n        return reqHandl(operation, nextLink);\n      } else {\n        return nextLink(operation);\n      }\n    });\n  }\n}\n\nexport const apolloLinkOp = <D extends OperationDef>(\n  operationName: Name<D>,\n  reqHandl: OpRequestHandler<D>\n) => new ApolloLinkOp<D>(operationName, reqHandl);\n\nexport type OpFetchResult<D extends OperationDef> = FetchResult<Result<D>>;\nexport type OpResultWatcher<D extends OperationDef> = (\n  result: OpFetchResult<D>\n) => OpFetchResult<D> | undefined | void;\nexport const apolloLinkOpResult = <D extends OperationDef>(\n  operationName: Name<D>,\n  watcher: OpResultWatcher<D>\n) =>\n  apolloLinkOp<D>(operationName, (op, next) =>\n    next(op).map(resp => {\n      const watcherResp = watcher(resp);\n      return typeof watcherResp === 'undefined' ? resp : watcherResp;\n    })\n  );\n\nexport const getOpType = (op: Operation) => {\n  const maybeOpDefNode = op.query.definitions.find<OperationDefinitionNode>(\n    (def): def is OperationDefinitionNode =>\n      def.kind === 'OperationDefinition' &&\n      !!def.name &&\n      def.name.value === op.operationName\n  );\n\n  return maybeOpDefNode && maybeOpDefNode.operation;\n};\n\nexport const getOperationNameAndType = <OperationName extends string = string>(\n  query: DocumentNode\n): [OperationName, OperationTypeNode] | [] => {\n  const opDefNodes = query.definitions.filter(\n    (def): def is OperationDefinitionNode => def.kind === 'OperationDefinition'\n  );\n\n  const maybeOperationNameAndType = opDefNodes.reduce<\n    [OperationName, OperationTypeNode] | null\n  >((found, opDefNode) => {\n    if (!found) {\n      const maybeFieldNode =\n        opDefNode.selectionSet.selections.find(\n          (selNode): selNode is FieldNode => selNode.kind === 'Field'\n        ) || null;\n      const opType = opDefNode.operation;\n      found =\n        maybeFieldNode &&\n        ([maybeFieldNode.name.value, opType] as [\n          OperationName,\n          OperationTypeNode\n        ]);\n    }\n    return found;\n  }, null);\n\n  return maybeOperationNameAndType || [];\n};\n","var map = {\n\t\"./en_GB/messages.po\": [\n\t\t808,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 531;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en_GB/messages.js\": [\n\t\t809,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 532;\nmodule.exports = webpackAsyncContext;","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type AnonResetPasswordRequestMutationVariables = {\n  email: Types.Scalars['String']\n};\n\n\nexport type AnonResetPasswordRequestMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'requestResetPassword'>\n);\n\nexport type AnonLoginMutationVariables = {\n  email: Types.Scalars['String'],\n  password: Types.Scalars['String']\n};\n\n\nexport type AnonLoginMutation = (\n  { __typename: 'RootMutationType' }\n  & { login: Types.Maybe<(\n    { __typename: 'LoginResponse' }\n    & Pick<Types.LoginResponse, 'token' | 'currentUsername' | 'currentAccountId'>\n    & { currentUser: Types.Maybe<(\n      { __typename: 'User' }\n      & Pick<Types.User, 'id'>\n      & { profile: Types.Maybe<(\n        { __typename: 'Profile' }\n        & Pick<Types.Profile, 'name' | 'summary'>\n      )> }\n    )> }\n  )> }\n);\n\nexport type RequestConfirmEmailMutationVariables = {\n  email: Types.Scalars['String']\n};\n\n\nexport type RequestConfirmEmailMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'requestConfirmEmail'>\n);\n\nexport type ConfirmEmailMutationVariables = {\n  token: Types.Scalars['String']\n};\n\n\nexport type ConfirmEmailMutation = (\n  { __typename: 'RootMutationType' }\n  & { confirmEmail: Types.Maybe<(\n    { __typename: 'Me' }\n    & Pick<Types.Me, 'accountId'>\n  )> }\n);\n\nexport type AnonSignUpMutationVariables = {\n  email: Types.Scalars['String'],\n  password: Types.Scalars['String']\n};\n\n\nexport type AnonSignUpMutation = (\n  { __typename: 'RootMutationType' }\n  & Pick<Types.RootMutationType, 'signup'>\n);\n\n\nexport const AnonResetPasswordRequestDocument = gql`\n    mutation anonResetPasswordRequest($email: String!) {\n  requestResetPassword(email: $email)\n}\n    `;\nexport type AnonResetPasswordRequestMutationFn = ApolloReactCommon.MutationFunction<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>;\n\n/**\n * __useAnonResetPasswordRequestMutation__\n *\n * To run a mutation, you first call `useAnonResetPasswordRequestMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAnonResetPasswordRequestMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [anonResetPasswordRequestMutation, { data, loading, error }] = useAnonResetPasswordRequestMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useAnonResetPasswordRequestMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>) {\n        return ApolloReactHooks.useMutation<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>(AnonResetPasswordRequestDocument, baseOptions);\n      }\nexport type AnonResetPasswordRequestMutationHookResult = ReturnType<typeof useAnonResetPasswordRequestMutation>;\nexport type AnonResetPasswordRequestMutationResult = ApolloReactCommon.MutationResult<AnonResetPasswordRequestMutation>;\nexport type AnonResetPasswordRequestMutationOptions = ApolloReactCommon.BaseMutationOptions<AnonResetPasswordRequestMutation, AnonResetPasswordRequestMutationVariables>;\nexport const AnonLoginDocument = gql`\n    mutation anonLogin($email: String!, $password: String!) {\n  login(emailOrUsername: $email, password: $password) {\n    token\n    currentUsername\n    currentAccountId\n    currentUser {\n      id\n      profile {\n        name\n        summary\n      }\n    }\n  }\n}\n    `;\nexport type AnonLoginMutationFn = ApolloReactCommon.MutationFunction<AnonLoginMutation, AnonLoginMutationVariables>;\n\n/**\n * __useAnonLoginMutation__\n *\n * To run a mutation, you first call `useAnonLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAnonLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [anonLoginMutation, { data, loading, error }] = useAnonLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useAnonLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AnonLoginMutation, AnonLoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<AnonLoginMutation, AnonLoginMutationVariables>(AnonLoginDocument, baseOptions);\n      }\nexport type AnonLoginMutationHookResult = ReturnType<typeof useAnonLoginMutation>;\nexport type AnonLoginMutationResult = ApolloReactCommon.MutationResult<AnonLoginMutation>;\nexport type AnonLoginMutationOptions = ApolloReactCommon.BaseMutationOptions<AnonLoginMutation, AnonLoginMutationVariables>;\nexport const RequestConfirmEmailDocument = gql`\n    mutation requestConfirmEmail($email: String!) {\n  requestConfirmEmail(email: $email)\n}\n    `;\nexport type RequestConfirmEmailMutationFn = ApolloReactCommon.MutationFunction<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>;\n\n/**\n * __useRequestConfirmEmailMutation__\n *\n * To run a mutation, you first call `useRequestConfirmEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRequestConfirmEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [requestConfirmEmailMutation, { data, loading, error }] = useRequestConfirmEmailMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useRequestConfirmEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>) {\n        return ApolloReactHooks.useMutation<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>(RequestConfirmEmailDocument, baseOptions);\n      }\nexport type RequestConfirmEmailMutationHookResult = ReturnType<typeof useRequestConfirmEmailMutation>;\nexport type RequestConfirmEmailMutationResult = ApolloReactCommon.MutationResult<RequestConfirmEmailMutation>;\nexport type RequestConfirmEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<RequestConfirmEmailMutation, RequestConfirmEmailMutationVariables>;\nexport const ConfirmEmailDocument = gql`\n    mutation confirmEmail($token: String!) {\n  confirmEmail(token: $token) {\n    accountId\n  }\n}\n    `;\nexport type ConfirmEmailMutationFn = ApolloReactCommon.MutationFunction<ConfirmEmailMutation, ConfirmEmailMutationVariables>;\n\n/**\n * __useConfirmEmailMutation__\n *\n * To run a mutation, you first call `useConfirmEmailMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmEmailMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmEmailMutation, { data, loading, error }] = useConfirmEmailMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmEmailMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ConfirmEmailMutation, ConfirmEmailMutationVariables>) {\n        return ApolloReactHooks.useMutation<ConfirmEmailMutation, ConfirmEmailMutationVariables>(ConfirmEmailDocument, baseOptions);\n      }\nexport type ConfirmEmailMutationHookResult = ReturnType<typeof useConfirmEmailMutation>;\nexport type ConfirmEmailMutationResult = ApolloReactCommon.MutationResult<ConfirmEmailMutation>;\nexport type ConfirmEmailMutationOptions = ApolloReactCommon.BaseMutationOptions<ConfirmEmailMutation, ConfirmEmailMutationVariables>;\nexport const AnonSignUpDocument = gql`\n    mutation anonSignUp($email: String!, $password: String!) {\n  signup(email: $email, password: $password)\n}\n    `;\nexport type AnonSignUpMutationFn = ApolloReactCommon.MutationFunction<AnonSignUpMutation, AnonSignUpMutationVariables>;\n\n/**\n * __useAnonSignUpMutation__\n *\n * To run a mutation, you first call `useAnonSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAnonSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [anonSignUpMutation, { data, loading, error }] = useAnonSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useAnonSignUpMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AnonSignUpMutation, AnonSignUpMutationVariables>) {\n        return ApolloReactHooks.useMutation<AnonSignUpMutation, AnonSignUpMutationVariables>(AnonSignUpDocument, baseOptions);\n      }\nexport type AnonSignUpMutationHookResult = ReturnType<typeof useAnonSignUpMutation>;\nexport type AnonSignUpMutationResult = ApolloReactCommon.MutationResult<AnonSignUpMutation>;\nexport type AnonSignUpMutationOptions = ApolloReactCommon.BaseMutationOptions<AnonSignUpMutation, AnonSignUpMutationVariables>;\n\n\nexport interface AnonResetPasswordRequestMutationOperation {\n  operationName: 'anonResetPasswordRequest'\n  result: AnonResetPasswordRequestMutation\n  variables: AnonResetPasswordRequestMutationVariables\n  type: 'mutation'\n}\nexport const AnonResetPasswordRequestMutationName:AnonResetPasswordRequestMutationOperation['operationName'] = 'anonResetPasswordRequest'\n\nexport const AnonResetPasswordRequestMutationRefetch = (\n  variables:AnonResetPasswordRequestMutationVariables, \n  context?:any\n)=>({\n  query:AnonResetPasswordRequestDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface AnonLoginMutationOperation {\n  operationName: 'anonLogin'\n  result: AnonLoginMutation\n  variables: AnonLoginMutationVariables\n  type: 'mutation'\n}\nexport const AnonLoginMutationName:AnonLoginMutationOperation['operationName'] = 'anonLogin'\n\nexport const AnonLoginMutationRefetch = (\n  variables:AnonLoginMutationVariables, \n  context?:any\n)=>({\n  query:AnonLoginDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface RequestConfirmEmailMutationOperation {\n  operationName: 'requestConfirmEmail'\n  result: RequestConfirmEmailMutation\n  variables: RequestConfirmEmailMutationVariables\n  type: 'mutation'\n}\nexport const RequestConfirmEmailMutationName:RequestConfirmEmailMutationOperation['operationName'] = 'requestConfirmEmail'\n\nexport const RequestConfirmEmailMutationRefetch = (\n  variables:RequestConfirmEmailMutationVariables, \n  context?:any\n)=>({\n  query:RequestConfirmEmailDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface ConfirmEmailMutationOperation {\n  operationName: 'confirmEmail'\n  result: ConfirmEmailMutation\n  variables: ConfirmEmailMutationVariables\n  type: 'mutation'\n}\nexport const ConfirmEmailMutationName:ConfirmEmailMutationOperation['operationName'] = 'confirmEmail'\n\nexport const ConfirmEmailMutationRefetch = (\n  variables:ConfirmEmailMutationVariables, \n  context?:any\n)=>({\n  query:ConfirmEmailDocument,\n  variables,\n  context\n})\n      \n\n\nexport interface AnonSignUpMutationOperation {\n  operationName: 'anonSignUp'\n  result: AnonSignUpMutation\n  variables: AnonSignUpMutationVariables\n  type: 'mutation'\n}\nexport const AnonSignUpMutationName:AnonSignUpMutationOperation['operationName'] = 'anonSignUp'\n\nexport const AnonSignUpMutationRefetch = (\n  variables:AnonSignUpMutationVariables, \n  context?:any\n)=>({\n  query:AnonSignUpDocument,\n  variables,\n  context\n})\n      \n","import { GraphQLResolveInfo, GraphQLScalarType, GraphQLScalarTypeConfig } from 'graphql';\nexport type Maybe<T> = T | null;\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\nexport type RequireFields<T, K extends keyof T> = { [X in Exclude<keyof T, K>]?: T[X] } & { [P in K]-?: NonNullable<T[P]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n  /** \n * An opaque position marker for pagination. Paginated queries return\n   * a PageInfo struct with start and end cursors (which are actually\n   * lists of Cursor for ...reasons...). You can then issue queries\n   * requesting results `before` the `start` or `after` the `end`\n   * cursors to request the previous or next page respectively.\n   * \n   * Is actually a string or integer, typically an ID.\n   * Can also be include encoded data describing how a query is ordered.\n   * May be extended in future.\n **/\n  Cursor: any,\n  /** Arbitrary json stored as a string */\n  Json: any,\n  /** The `URI` type simply declares a reference to an external web URL, Holochain entry or other resource. */\n  URI: any,\n  /** \n * The `DateTime` scalar type represents a date and time in the UTC\n   * timezone. The DateTime appears in a JSON response as an ISO8601 formatted\n   * string, including UTC timezone (\"Z\"). The parsed date and time string will\n   * be converted to UTC if there is an offset.\n **/\n  DateTime: any,\n};\n\n/** \n * A boundary or context grouped around some other record- used for documenting, accounting, planning.\n * ## extended for Bonfire (default was `Person | Organization`)\n **/\nexport type AccountingScope = Category | Organization | Person | Tag;\n\n/** \n * An action verb defining the kind of event, commitment, or intent.\n * It is recommended that the lowercase action verb should be used as the record ID\n * in order that references to `Action`s elsewhere in the system are easily readable.\n **/\nexport type Action = {\n   __typename?: 'Action',\n  id: Scalars['ID'],\n  /** Denotes if a process input or output, or not related to a process. */\n  inputOutput?: Maybe<Scalars['String']>,\n  /** A unique verb which defines the action. */\n  label: Scalars['String'],\n  note?: Maybe<Scalars['String']>,\n  /** \n * The onhand effect of an economic event on a resource, increment, decrement, no\n   * effect, or decrement resource and increment 'to' resource.\n **/\n  onhandEffect?: Maybe<Scalars['String']>,\n  /** The action that should be included on the other direction of the process, for example accept with modify. */\n  pairsWith?: Maybe<Scalars['String']>,\n  /** \n * The accounting effect of an economic event on a resource, increment,\n   * decrement, no effect, or decrement resource and increment 'to' resource.\n **/\n  resourceEffect: Scalars['String'],\n};\n\nexport type Activity = {\n   __typename?: 'Activity',\n  directReplies?: Maybe<Array<Maybe<Replied>>>,\n  id?: Maybe<Scalars['ID']>,\n  object?: Maybe<AnyContext>,\n  objectId?: Maybe<Scalars['String']>,\n  subject?: Maybe<AnyCharacter>,\n  subjectId?: Maybe<Scalars['String']>,\n  verb?: Maybe<Verb>,\n};\n\n\nexport type ActivityDirectRepliesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\nexport type ActivityFilters = {\n  activityId?: Maybe<Scalars['ID']>,\n  objectId?: Maybe<Scalars['ID']>,\n};\n\n/** A person or group or organization with economic agency. */\nexport type Agent = {\n  agentType?: Maybe<AgentType>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  commitments?: Maybe<Array<Commitment>>,\n  displayUsername?: Maybe<Scalars['String']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  intents?: Maybe<Array<Intent>>,\n  inventoriedEconomicResources?: Maybe<Array<EconomicResource>>,\n  /** An informal or formal textual identifier for an agent. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  plans?: Maybe<Array<Plan>>,\n  /** \n * The main place an agent is located, often an address where activities occur\n   * and mail can be sent. This is usually a mappable geographic location.  It also\n   * could be a website address, as in the case of agents who have no physical location.\n **/\n  primaryLocation?: Maybe<SpatialThing>,\n  processes?: Maybe<Array<Process>>,\n  proposals?: Maybe<Array<Proposal>>,\n  relationships?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsObject?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsSubject?: Maybe<Array<AgentRelationship>>,\n  roles?: Maybe<Array<AgentRelationshipRole>>,\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentEconomicEventsArgs = {\n  filter?: Maybe<AgentEventSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentInventoriedEconomicResourcesArgs = {\n  filter?: Maybe<AgentResourceSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentPlansArgs = {\n  filter?: Maybe<AgentPlanSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentProcessesArgs = {\n  filter?: Maybe<AgentProcessSearchParams>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentRelationshipsArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentRelationshipsAsObjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A person or group or organization with economic agency. */\nexport type AgentRelationshipsAsSubjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n/** Query parameters for reading `Commitment`s related to an `Agent` */\nexport type AgentCommitmentSearchParams = {\n  action?: Maybe<Scalars['ID']>,\n  endDate?: Maybe<Scalars['DateTime']>,\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n  startDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type AgentCreateParams = {\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for an agent. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`SpatialThing`) The main place an agent is located, often an address where\n   * activities occur and mail can be sent. This is usually a mappable geographic\n   * location.  It also could be a website address, as in the case of agents who\n   * have no physical location.\n **/\n  primaryLocation?: Maybe<Scalars['ID']>,\n};\n\n/** Query parameters for reading `EconomicEvent`s related to an `Agent` */\nexport type AgentEventSearchParams = {\n  action?: Maybe<Scalars['ID']>,\n  endDate?: Maybe<Scalars['DateTime']>,\n  searchString?: Maybe<Scalars['String']>,\n  startDate?: Maybe<Scalars['DateTime']>,\n};\n\n/** Query parameters for reading `Plan`s related to an `Agent` */\nexport type AgentPlanSearchParams = {\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\n/** Query parameters for reading `Process`es related to an `Agent` */\nexport type AgentProcessSearchParams = {\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\n/** The role of an economic relationship that exists between 2 agents, such as member, trading partner. */\nexport type AgentRelationship = {\n   __typename?: 'AgentRelationship',\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The object of a relationship between 2 agents.  For example, if Mary is a member of a group, then the group is the object. */\n  object: Agent,\n  /** A kind of relationship that exists between 2 agents. */\n  relationship: AgentRelationshipRole,\n  /** The subject of a relationship between 2 agents.  For example, if Mary is a member of a group, then Mary is the subject. */\n  subject: Agent,\n};\n\nexport type AgentRelationshipCreateParams = {\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`Agent`) The object of a relationship between 2 agents.  For example, if Mary\n   * is a member of a group, then the group is the object.\n **/\n  object: Scalars['ID'],\n  /** \n * (`AgentRelationshipRole`) The role of an economic relationship that exists\n   * between 2 agents, such as member, trading partner.\n **/\n  relationship: Scalars['ID'],\n  /** \n * (`Agent`) The subject of a relationship between 2 agents.  For example, if\n   * Mary is a member of a group, then Mary is the subject.\n **/\n  subject: Scalars['ID'],\n};\n\nexport type AgentRelationshipResponse = {\n   __typename?: 'AgentRelationshipResponse',\n  agentRelationship: AgentRelationship,\n};\n\n/** A relationship role defining the kind of association one agent can have with another. */\nexport type AgentRelationshipRole = {\n   __typename?: 'AgentRelationshipRole',\n  id: Scalars['ID'],\n  /** The human readable name of the role, from the object to the subject. */\n  inverseRoleLabel?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The human readable name of the role, from the subject to the object. */\n  roleLabel: Scalars['String'],\n};\n\nexport type AgentRelationshipRoleCreateParams = {\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'has member'. */\n  inverseRoleLabel?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'is member of'. */\n  roleLabel: Scalars['String'],\n};\n\nexport type AgentRelationshipRoleResponse = {\n   __typename?: 'AgentRelationshipRoleResponse',\n  agentRelationshipRole?: Maybe<AgentRelationshipRole>,\n};\n\nexport type AgentRelationshipRoleUpdateParams = {\n  id: Scalars['ID'],\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'has member'. */\n  inverseRoleLabel?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The human readable name of the role, inverse from the object to the subject. For example, 'is member of'. */\n  roleLabel?: Maybe<Scalars['String']>,\n};\n\nexport type AgentRelationshipUpdateParams = {\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`Agent`) The object of a relationship between 2 agents.  For example, if Mary\n   * is a member of a group, then the group is the object.\n **/\n  object?: Maybe<Scalars['ID']>,\n  /** \n * (`AgentRelationshipRole`) The role of an economic relationship that exists\n   * between 2 agents, such as member, trading partner.\n **/\n  relationship?: Maybe<Scalars['ID']>,\n  /** \n * (`Agent`) The subject of a relationship between 2 agents.  For example, if\n   * Mary is a member of a group, then Mary is the subject.\n **/\n  subject?: Maybe<Scalars['ID']>,\n};\n\n/** Query parameters for reading `EconomicResource`s related to an `Agent` */\nexport type AgentResourceSearchParams = {\n  page?: Maybe<Scalars['Int']>,\n  resourceClassification?: Maybe<Scalars['URI']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\n/** A page of agents */\nexport type AgentsPage = {\n   __typename?: 'AgentsPage',\n  edges: Array<Agent>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport enum AgentType {\n  Organization = 'Organization',\n  Person = 'Person'\n}\n\nexport type AgentUpdateParams = {\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for an agent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * (`SpatialThing`) The main place an agent is located, often an address where\n   * activities occur and mail can be sent. This is usually a mappable geographic\n   * location.  It also could be a website address, as in the case of agents who\n   * have no physical location.\n **/\n  primaryLocation?: Maybe<Scalars['ID']>,\n};\n\n/** Any type of agreement among economic agents. */\nexport type Agreement = {\n   __typename?: 'Agreement',\n  commitments?: Maybe<Array<Commitment>>,\n  /** The date and time the agreement was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  involvedAgents?: Maybe<Array<Agent>>,\n  /** An informal or formal textual identifier for an agreement. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AgreementCreateParams = {\n  /** The date and time the agreement was created. */\n  created: Scalars['DateTime'],\n  /** An informal or formal textual identifier for an agreement. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AgreementResponse = {\n   __typename?: 'AgreementResponse',\n  agreement?: Maybe<Agreement>,\n};\n\nexport type AgreementUpdateParams = {\n  /** The date and time the agreement was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for an agreement. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** Any type of character (eg. Category, Thread, Geolocation, etc), actor (eg. User/Person), or agent (eg. Organisation) */\nexport type AnyCharacter = Category | SpatialThing | User;\n\n/** Any type of known object */\nexport type AnyContext = Activity | Category | EconomicEvent | Follow | Intent | Post | Process | SpatialThing | Tag | User;\n\n/** \n * A way to tie an economic event that is given in loose fulfilment for another\n * economic event, without commitments or expectations.\n * Supports the gift economy.\n **/\nexport type Appreciation = {\n   __typename?: 'Appreciation',\n  /** The economic event this appreciation has been given in acknowledgement of. */\n  appreciationOf: EconomicEvent,\n  /** The economic event provided as a gift in this appreciation. */\n  appreciationWith: EconomicEvent,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AppreciationCreateParams = {\n  /** (`EconomicEvent`) The economic event this appreciation has been given in acknowledgement of. */\n  appreciationOf: Scalars['ID'],\n  /** (`EconomicEvent`) The economic event provided as a gift in this appreciation. */\n  appreciationWith: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type AppreciationResponse = {\n   __typename?: 'AppreciationResponse',\n  appreciation?: Maybe<Appreciation>,\n};\n\nexport type AppreciationUpdateParams = {\n  /** (`EconomicEvent`) The economic event this appreciation has been given in acknowledgement of. */\n  appreciationOf?: Maybe<Scalars['ID']>,\n  /** (`EconomicEvent`) The economic event provided as a gift in this appreciation. */\n  appreciationWith?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type CategoriesPage = {\n   __typename?: 'CategoriesPage',\n  edges: Array<Category>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** A category (eg. tag in a taxonomy) */\nexport type Category = {\n   __typename?: 'Category',\n  /** The caretaker of this category, if any */\n  caretaker?: Maybe<AnyContext>,\n  /** A JSON document containing more info beyond the default fields */\n  extraInfo?: Maybe<Scalars['Json']>,\n  facet?: Maybe<Scalars['String']>,\n  /** The numeric primary key of the category */\n  id?: Maybe<Scalars['ID']>,\n  name?: Maybe<Scalars['String']>,\n  /** The parent category (in a tree-based taxonomy) */\n  parentCategory?: Maybe<Category>,\n  parentCategoryId?: Maybe<Scalars['String']>,\n  prefix?: Maybe<Scalars['String']>,\n  /** List of child categories (in a tree-based taxonomy) */\n  subCategories?: Maybe<Array<Maybe<CategoriesPage>>>,\n  summary?: Maybe<Scalars['String']>,\n};\n\nexport type CategoryInput = {\n  /** A JSON document containing more info beyond the default fields */\n  extraInfo?: Maybe<Scalars['Json']>,\n  facet?: Maybe<Scalars['String']>,\n  name: Scalars['String'],\n  parentCategory?: Maybe<Scalars['ID']>,\n  prefix?: Maybe<Scalars['String']>,\n  sameAsCategory?: Maybe<Scalars['ID']>,\n  summary?: Maybe<Scalars['String']>,\n};\n\nexport type Character = {\n   __typename?: 'Character',\n  username?: Maybe<Scalars['String']>,\n};\n\nexport type CharacterFilters = {\n  autocomplete?: Maybe<Scalars['String']>,\n  id?: Maybe<Scalars['ID']>,\n  username?: Maybe<Scalars['String']>,\n};\n\nexport type CharacterInput = {\n  username?: Maybe<Scalars['String']>,\n};\n\n/** \n * A claim for a future economic event(s) in reciprocity for an economic event that\n * already occurred. For example, a claim for payment for goods received.\n **/\nexport type Claim = {\n   __typename?: 'Claim',\n  /** Relates a claim to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this claim. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** Specifies if a calculation will be applied to this claim when an economic event is logged. */\n  calculatedUsing?: Maybe<ValueCalculation>,\n  /** The data on which the claim was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the claim is expected to be settled. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** \n * The claim is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The economic agent from whom the claim is initiated. */\n  provider: Agent,\n  /** The economic agent whom the claim is for. */\n  receiver: Agent,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** The economic event which already occurred which this claim has been made against. */\n  triggeredBy: EconomicEvent,\n};\n\nexport type ClaimCreateParams = {\n  /** (`Action`) Relates a claim to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['ID'],\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this claim. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The data on which the claim was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the claim is expected to be settled. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The claim is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Agent`) The economic agent from whom the claim is initiated. */\n  provider: Scalars['ID'],\n  /** (`Agent`) The economic agent whom the claim is for. */\n  receiver: Scalars['ID'],\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which already occurred which this claim has been made against. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\nexport type ClaimResponse = {\n   __typename?: 'ClaimResponse',\n  claim?: Maybe<Claim>,\n};\n\nexport type ClaimUpdateParams = {\n  /** (`Action`) Relates a claim to a verb, such as consume, produce, work, improve, etc. */\n  action?: Maybe<Scalars['ID']>,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this claim. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The data on which the claim was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the claim is expected to be settled. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The claim is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Agent`) The economic agent from whom the claim is initiated. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the claim is for. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which already occurred which this claim has been made against. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\n/** A planned economic flow that has been promised by an agent to another agent. */\nexport type Commitment = {\n   __typename?: 'Commitment',\n  /** Relates a commitment to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this commitment.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The place where a commitment occurs. Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** This commitment is part of the exchange agreement. */\n  clauseOf?: Maybe<Agreement>,\n  /** The creation time of the commitment. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The commitment can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** \n * The commitment is complete or not.  This is irrespective of if the original\n   * goal has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy?: Maybe<Array<Fulfillment>>,\n  /** The planned beginning of the commitment. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the commitment. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the commitment. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** Represents a desired deliverable expected from this plan. */\n  independentDemandOf?: Maybe<Plan>,\n  /** Defines the process to which this commitment is an input. */\n  inputOf?: Maybe<Process>,\n  involvedAgents?: Maybe<Array<Agent>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Defines the process for which this commitment is an output. */\n  outputOf?: Maybe<Process>,\n  /** The economic agent from whom the commitment is initiated. */\n  provider: Agent,\n  /** The economic agent whom the commitment is for. */\n  receiver: Agent,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** Exact economic resource involved in the commitment. */\n  resourceInventoriedAs?: Maybe<EconomicResource>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies?: Maybe<Array<Satisfaction>>,\n};\n\nexport type CommitmentCreateParams = {\n  /** (`Action`) Relates a commitment to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['ID'],\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this commitment.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an commitment occurs.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** (`Agreement`) This commitment is part of the agreement. */\n  clauseOf?: Maybe<Scalars['ID']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The commitment is complete or not.  This is irrespective of if the original\n   * goal has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the commitment. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the commitment. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the commitment. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Plan`) Represents a desired deliverable expected from this plan. */\n  independentDemandOf?: Maybe<Scalars['ID']>,\n  /** (`Process`) Defines the process to which this commitment is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process for which this commitment is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the commitment is initiated. */\n  provider: Scalars['ID'],\n  /** (`Agent`) The economic agent whom the commitment is for. */\n  receiver: Scalars['ID'],\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Exact economic resource involved in the commitment. */\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\nexport type CommitmentResponse = {\n   __typename?: 'CommitmentResponse',\n  commitment?: Maybe<Commitment>,\n};\n\nexport type CommitmentUpdateParams = {\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this commitment.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an commitment occurs.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** (`Agreement`) This commitment is part of the agreement. */\n  clauseOf?: Maybe<Scalars['ID']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The commitment is complete or not.  This is irrespective of if the original\n   * goal has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the commitment. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the commitment. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the commitment. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Plan`) Represents a desired deliverable expected from this plan. */\n  independentDemandOf?: Maybe<Scalars['ID']>,\n  /** (`Process`) Defines the process to which this commitment is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process for which this commitment is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the commitment is initiated. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the commitment is for. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Exact economic resource involved in the commitment. */\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\n\n\n/** A `Duration` represents an interval between two `DateTime` values. */\nexport type Duration = {\n   __typename?: 'Duration',\n  /** A number representing the duration, will be paired with a unit. */\n  numericDuration: Scalars['Float'],\n  /** A unit of measure. */\n  unitType: TimeUnit,\n};\n\n/** \n * An observed economic flow, as opposed to a flow planned to happen in the future.\n * This could reflect a change in the quantity of an economic resource. It is also\n * defined by its behavior in relation to the economic resource (see `Action`)\n **/\nexport type EconomicEvent = {\n   __typename?: 'EconomicEvent',\n  /** Relates an economic event to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this economic event.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  appreciatedBy?: Maybe<Array<Appreciation>>,\n  appreciationOf?: Maybe<Array<Appreciation>>,\n  /** The place where an economic event occurs.  Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** The value calculation (if any) used to generate this event. */\n  calculatedUsing?: Maybe<ValueCalculation>,\n  /** The economic event can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills?: Maybe<Array<Fulfillment>>,\n  /** The beginning of the economic event. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end of the economic event. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The date/time at which the economic event occurred. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** Defines the process to which this event is an input. */\n  inputOf?: Maybe<Process>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Defines the process for which this event is an output. */\n  outputOf?: Maybe<Process>,\n  /** The economic agent from whom the actual economic event is initiated. */\n  provider: Agent,\n  /** This economic event occurs as part of this agreement. */\n  realizationOf?: Maybe<Agreement>,\n  /** The economic agent whom the actual economic event is for. */\n  receiver: Agent,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** Economic resource involved in the economic event. */\n  resourceInventoriedAs?: Maybe<EconomicResource>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<Measure>,\n  /** An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies?: Maybe<Array<Satisfaction>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Maybe<AnyContext>>>,\n  /** \n * Additional economic resource on the economic event when needed by the\n   * receiver. Used when a transfer or move, or sometimes other actions, requires\n   * explicitly identifying an economic resource on the receiving side.\n **/\n  toResourceInventoriedAs?: Maybe<EconomicResource>,\n  trace?: Maybe<Array<ProductionFlowItem>>,\n  track?: Maybe<Array<ProductionFlowItem>>,\n  /** References another economic event that implied this economic event, often based on a prior agreement. */\n  triggeredBy?: Maybe<EconomicEvent>,\n};\n\n\n/** \n * An observed economic flow, as opposed to a flow planned to happen in the future.\n * This could reflect a change in the quantity of an economic resource. It is also\n * defined by its behavior in relation to the economic resource (see `Action`)\n **/\nexport type EconomicEventTraceArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** \n * An observed economic flow, as opposed to a flow planned to happen in the future.\n * This could reflect a change in the quantity of an economic resource. It is also\n * defined by its behavior in relation to the economic resource (see `Action`)\n **/\nexport type EconomicEventTrackArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\nexport type EconomicEventCreateParams = {\n  /** (`Action`) Relates an economic event to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['ID'],\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this economic event.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an economic event occurs.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** The beginning of the economic event. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end of the economic event. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The date/time at which the economic event occurred. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Process`) Defines the process to which this event is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process for which this event is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the actual economic event is initiated. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agreement`) This economic event occurs as part of this agreement. */\n  realizationOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the actual economic event is for. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Economic resource involved in the economic event. */\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n  /** \n * (`EconomicResource`) Additional economic resource on the economic event when\n   * needed by the receiver. Used when a transfer or move, or sometimes other\n   * actions, requires explicitly identifying an economic resource on the receiving side.\n **/\n  toResourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** (`EconomicEvent`) References another economic event that implied this economic event, often based on a prior agreement. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\n/** A page of Economic Events */\nexport type EconomicEventPage = {\n   __typename?: 'EconomicEventPage',\n  edges: Array<EconomicEvent>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type EconomicEventResponse = {\n   __typename?: 'EconomicEventResponse',\n  /** Details of the newly created event. */\n  economicEvent: EconomicEvent,\n  /** Details of any newly created `EconomicResource`, for events that create new resources. */\n  economicResource?: Maybe<EconomicResource>,\n  /** Any reciprocal events created by found value calculations. */\n  reciprocalEvents?: Maybe<Array<EconomicEvent>>,\n};\n\nexport type EconomicEventUpdateParams = {\n  /** \n * Reference to an agreement between agents which specifies the rules or policies\n   * or calculations which govern this economic event.\n **/\n  agreedIn?: Maybe<Scalars['URI']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Agreement`) This economic event occurs as part of this agreement. */\n  realizationOf?: Maybe<Scalars['ID']>,\n  /** (`EconomicEvent`) References another economic event that implied this economic event, often based on a prior agreement. */\n  triggeredBy?: Maybe<Scalars['ID']>,\n};\n\n/** A resource which is useful to people or the ecosystem. */\nexport type EconomicResource = {\n   __typename?: 'EconomicResource',\n  /** \n * The current amount and unit of the economic resource for which the agent has\n   * primary rights and responsibilities, sometimes thought of as ownership. This\n   * can be either stored or derived from economic events affecting the resource.\n **/\n  accountingQuantity?: Maybe<Measure>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  conformsTo?: Maybe<ResourceSpecification>,\n  /** Used when a stock economic resource contains items also defined as economic resources. */\n  containedIn?: Maybe<EconomicResource>,\n  /** Used when a stock economic resource contains units also defined as economic resources. */\n  contains?: Maybe<Array<EconomicResource>>,\n  /** \n * The current place an economic resource is located. Could be at any level of\n   * granularity, from a town to an address to a warehouse location. Usually mappable.\n **/\n  currentLocation?: Maybe<SpatialThing>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the resource, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** \n * Lot or batch of an economic resource, used to track forward or backwards to\n   * all occurrences of resources of that lot. Note more than one resource can be\n   * of the same lot.\n **/\n  lot?: Maybe<ProductBatch>,\n  /** An informal or formal textual identifier for an item. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * The current amount and unit of the economic resource which is under direct\n   * control of the agent.  It may be more or less than the accounting quantity.\n   * This can be either stored or derived from economic events affecting the resource.\n **/\n  onhandQuantity?: Maybe<Measure>,\n  /** \n * The agent currently with primary rights and responsibilites for the economic\n   * resource. It is the agent that is associated with the accountingQuantity of\n   * the economic resource.\n **/\n  primaryAccountable?: Maybe<Agent>,\n  /** \n * References the ProcessSpecification of the last process the desired economic\n   * resource went through. Stage is used when the last process is important for\n   * finding proper resources, such as where the publishing process wants only\n   * documents that have gone through the editing process.\n **/\n  stage?: Maybe<ProcessSpecification>,\n  /** \n * The state of the desired economic resource (pass or fail), after coming out of\n   * a test or review process. Can be derived from the last event if a pass or fail event.\n **/\n  state?: Maybe<Action>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<AnyContext>>,\n  trace?: Maybe<Array<ProductionFlowItem>>,\n  track?: Maybe<Array<ProductionFlowItem>>,\n  /** \n * Sometimes called serial number, used when each item must have a traceable\n   * identifier (like a computer). Could also be used for other unique tracking\n   * identifiers needed for resources.\n **/\n  trackingIdentifier?: Maybe<Scalars['String']>,\n  /** The unit used for use or work or cite actions for this resource. */\n  unitOfEffort?: Maybe<Unit>,\n};\n\n\n/** A resource which is useful to people or the ecosystem. */\nexport type EconomicResourceTraceArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** A resource which is useful to people or the ecosystem. */\nexport type EconomicResourceTrackArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n/** Input `EconomicResource` type used when sending events to setup initial resource recordings */\nexport type EconomicResourceCreateParams = {\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  conformsTo?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource`) Used when a stock economic resource contains items also defined as economic resources. */\n  containedIn?: Maybe<Scalars['ID']>,\n  /** \n * (`SpatialThing`) The current place an economic resource is located.  Could be\n   * at any level of granularity, from a town to an address to a warehouse\n   * location.  Usually mappable.\n **/\n  currentLocation?: Maybe<Scalars['ID']>,\n  /** The uri to an image relevant to the resource, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** \n * (`ProductBatch`) Lot or batch of an economic resource, used to track forward\n   * or backwards to all occurrences of resources of that lot. Note more than one\n   * resource can be of the same lot.\n **/\n  lot?: Maybe<Scalars['ID']>,\n  /** An informal or formal textual identifier for an item. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n  /** \n * Sometimes called serial number, used when each item must have a traceable\n   * identifier (like a computer). Could also be used for other unique tracking\n   * identifiers needed for resources.\n **/\n  trackingIdentifier?: Maybe<Scalars['String']>,\n};\n\n/** A page of Economic Resources */\nexport type EconomicResourcePage = {\n   __typename?: 'EconomicResourcePage',\n  edges: Array<EconomicResource>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type EconomicResourceResponse = {\n   __typename?: 'EconomicResourceResponse',\n  economicResource: EconomicResource,\n};\n\nexport type EconomicResourceUpdateParams = {\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** (`EconomicResource`) Used when a stock economic resource contains items also defined as economic resources. */\n  containedIn?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the resource, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Unit`) The unit used for use or work or cite actions for this resource. */\n  unitOfEffort?: Maybe<Scalars['ID']>,\n};\n\nexport type EventOrCommitment = Commitment | EconomicEvent;\n\nexport type FeedFilters = {\n  feedName?: Maybe<Scalars['String']>,\n};\n\nexport type Follow = {\n   __typename?: 'Follow',\n  followedCharacter?: Maybe<Character>,\n  followedProfile?: Maybe<Profile>,\n  followerCharacter?: Maybe<Character>,\n  followerProfile?: Maybe<Profile>,\n};\n\n/** \n * Represents many-to-many relationships between commitments and economic events\n * that fully or partially satisfy one or more commitments.\n **/\nexport type Fulfillment = {\n   __typename?: 'Fulfillment',\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy: EconomicEvent,\n  /** The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills: Commitment,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n};\n\nexport type FulfillmentCreateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy: Scalars['ID'],\n  /** (`Commitment`) The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\nexport type FulfillmentResponse = {\n   __typename?: 'FulfillmentResponse',\n  fulfillment?: Maybe<Fulfillment>,\n};\n\nexport type FulfillmentUpdateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event which completely or partially fulfills a commitment. */\n  fulfilledBy?: Maybe<Scalars['ID']>,\n  /** (`Commitment`) The commitment which is completely or partially fulfilled by an economic event. */\n  fulfills?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\nexport type GeolocationDistance = {\n  meters?: Maybe<Scalars['Int']>,\n};\n\nexport type GeolocationFilters = {\n  distance?: Maybe<GeolocationDistance>,\n  nearAddress?: Maybe<Scalars['String']>,\n  nearPoint?: Maybe<GeolocationPoint>,\n};\n\nexport type GeolocationPoint = {\n  lat?: Maybe<Scalars['Float']>,\n  long?: Maybe<Scalars['Float']>,\n};\n\n/** Mutation input structure for defining time durations. */\nexport type IDuration = {\n  /** A number representing the duration, will be paired with a unit. */\n  numericDuration: Scalars['Float'],\n  /** A unit of measure. */\n  unitType: TimeUnit,\n};\n\n/** Mutation input structure for defining measurements. Should be nulled if not present, rather than empty. */\nexport type IMeasure = {\n  /** A number representing the quantity, will be paired with a unit. */\n  hasNumericalValue: Scalars['Float'],\n  /** (`Unit`) A unit of measure. */\n  hasUnit: Scalars['ID'],\n};\n\n/** A planned economic flow which has not been committed to, which can lead to economic events (sometimes through commitments). */\nexport type Intent = {\n   __typename?: 'Intent',\n  /** Relates an intent to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this intent. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** The place where an intent would occur. Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** The total quantity of the offered resource available. */\n  availableQuantity?: Maybe<Measure>,\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  /** The intent can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  /** \n * The intent is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the intent. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the intent. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the intent. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the intent, such as a photo. */\n  image?: Maybe<Scalars['URI']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** Defines the process to which this intent is an input. */\n  inputOf?: Maybe<Process>,\n  /** An informal or formal textual identifier for an intent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Defines the process to which this intent is an output. */\n  outputOf?: Maybe<Process>,\n  /** The economic agent from whom the intent is initiated. This implies that the intent is an offer. */\n  provider?: Maybe<Agent>,\n  publishedIn?: Maybe<Array<ProposedIntent>>,\n  /** The economic agent whom the intent is for.  This implies that the intent is a request. */\n  receiver?: Maybe<Agent>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** When a specific `EconomicResource` is known which can service the `Intent`, this defines that resource. */\n  resourceInventoriedAs?: Maybe<EconomicResource>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<Measure>,\n  satisfiedBy?: Maybe<Array<Satisfaction>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Maybe<AnyContext>>>,\n};\n\nexport type IntentCreateParams = {\n  /** (`Action`) Relates an intent to a verb, such as consume, produce, work, improve, etc. */\n  action: Scalars['String'],\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this intent. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an intent occurs. Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** The total quantity of the offered resource available. */\n  availableQuantity?: Maybe<IMeasure>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The intent is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the intent. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the intent. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the intent. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  /** The uri to an image relevant to the intent, such as a photo. */\n  image?: Maybe<Scalars['URI']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Process`) Defines the process to which this intent is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** An informal or formal textual identifier for an intent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process to which this intent is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the intent is initiated. This implies that the intent is an offer. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the intent is for.  This implies that the intent is a request. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * (`EconomicResource`) When a specific `EconomicResource` is known which can\n   * service the `Intent`, this defines that resource.\n **/\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\nexport type IntentResponse = {\n   __typename?: 'IntentResponse',\n  intent: Intent,\n};\n\n/** Query parameters for reading `Intent`s related to an `Agent` */\nexport type IntentSearchParams = {\n  action?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  agent?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  atLocation?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  classifiedAs?: Maybe<Array<Maybe<Scalars['URI']>>>,\n  endDate?: Maybe<Scalars['DateTime']>,\n  finished?: Maybe<Scalars['Boolean']>,\n  geolocation?: Maybe<GeolocationFilters>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  provider?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  receiver?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  searchString?: Maybe<Scalars['String']>,\n  startDate?: Maybe<Scalars['DateTime']>,\n  status?: Maybe<Scalars['String']>,\n  tagIds?: Maybe<Array<Maybe<Scalars['ID']>>>,\n};\n\n/** A page of intents */\nexport type IntentsPage = {\n   __typename?: 'IntentsPage',\n  edges: Array<Intent>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type IntentUpdateParams = {\n  /** (`Action`) Relates an intent to a verb, such as consume, produce, work, improve, etc. */\n  action?: Maybe<Scalars['String']>,\n  /** Reference to an agreement between agents which specifies the rules or policies or calculations which govern this intent. */\n  agreedIn?: Maybe<Scalars['URI']>,\n  /** (`SpatialThing`) The place where an intent occurs. Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** The total quantity of the offered resource available. */\n  availableQuantity?: Maybe<IMeasure>,\n  /** The time something is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** \n * The intent is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the intent. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the intent. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** The planned date/time for the intent. Can be used instead of beginning and end. */\n  hasPointInTime?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the intent, such as a photo. */\n  image?: Maybe<Scalars['URI']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** (`Process`) Defines the process to which this intent is an input. */\n  inputOf?: Maybe<Scalars['ID']>,\n  /** An informal or formal textual identifier for an intent. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Defines the process to which this intent is an output. */\n  outputOf?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent from whom the intent is initiated. This implies that the intent is an offer. */\n  provider?: Maybe<Scalars['ID']>,\n  /** (`Agent`) The economic agent whom the intent is for.  This implies that the intent is a request. */\n  receiver?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * (`EconomicResource`) When a specific `EconomicResource` is known which can\n   * service the `Intent`, this defines that resource.\n **/\n  resourceInventoriedAs?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the economic resource counted or inventoried. This is\n   * the quantity that could be used to increment or decrement a resource,\n   * depending on the type of resource and resource effect of action.\n **/\n  resourceQuantity?: Maybe<IMeasure>,\n};\n\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  currentAccountId?: Maybe<Scalars['String']>,\n  currentUser?: Maybe<User>,\n  currentUsername?: Maybe<Scalars['String']>,\n  token?: Maybe<Scalars['String']>,\n};\n\nexport type Me = {\n   __typename?: 'Me',\n  accountId?: Maybe<Scalars['ID']>,\n  flagsForModeration?: Maybe<Array<Maybe<Activity>>>,\n  followed?: Maybe<Array<Maybe<Follow>>>,\n  followers?: Maybe<Array<Maybe<Follow>>>,\n  likeActivities?: Maybe<Array<Maybe<Activity>>>,\n  user?: Maybe<User>,\n  userFeed?: Maybe<Array<Maybe<Activity>>>,\n  userNotifications?: Maybe<Array<Maybe<Activity>>>,\n  users?: Maybe<Array<Maybe<User>>>,\n};\n\n\nexport type MeFlagsForModerationArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeFollowedArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeFollowersArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeLikeActivitiesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeUserFeedArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type MeUserNotificationsArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n/** \n * Semantic meaning for measurements: binds a quantity to its measurement unit.\n * See http://www.qudt.org/pages/QUDToverviewPage.html\n **/\nexport type Measure = {\n   __typename?: 'Measure',\n  /** Added for CommonsPub */\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  /** A number representing the quantity, will be paired with a unit. */\n  hasNumericalValue: Scalars['Float'],\n  /** A unit of measure. */\n  hasUnit: Unit,\n  id: Scalars['ID'],\n};\n\nexport type MeasuresPage = {\n   __typename?: 'MeasuresPage',\n  edges?: Maybe<Array<Measure>>,\n  pageInfo?: Maybe<PageInfo>,\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\n/** Things that can be observed. */\nexport type ObservableObject = EconomicResource | Organization | Person;\n\n/** \n * Possible qualitative assessment of an `ObservableProperty`.\n * (eg. property \"contamination\" may have phenomenon like \"high\", \"some\", \"none\")\n **/\nexport type ObservablePhenomenon = {\n   __typename?: 'ObservablePhenomenon',\n  /** What observable property does this assessment apply to? */\n  choiceOf?: Maybe<ObservableProperty>,\n  /** \n * A numerical representation of this phenomenon, to be used when automatic\n   * analysis is needed (like value calculation formulas).\n **/\n  formulaQuantifier?: Maybe<Scalars['Float']>,\n  id: Scalars['ID'],\n  /** A name for this phenomenon (eg. high, ripe, organic). Unique to each ObservableProperty. */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** \n * Possible qualitative assessment of an `ObservableProperty`.\n * (eg. property \"contamination\" may have phenomenon like \"high\", \"some\", \"none\")\n **/\nexport type ObservablePhenomenonInputParams = {\n  /** What observable property does this assessment apply to? */\n  choiceOf: Scalars['ID'],\n  /** \n * A numerical representation of this phenomenon, to be used when automatic\n   * analysis is needed (like value calculation formulas). For example, a series of\n   * phenomenon of high, medium, low, or none could be assigned formula quantifiers\n   * of 100, 50, 10, or 0.\n **/\n  formulaQuantifier?: Maybe<Scalars['Float']>,\n  id?: Maybe<Scalars['ID']>,\n  /** A name for this phenomenon (eg. high, ripe, organic). Unique to each ObservableProperty. */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ObservablePhenomenonPage = {\n   __typename?: 'ObservablePhenomenonPage',\n  edges: Array<ObservablePhenomenon>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** Types of things that can be observed or measured as part of `Observation`. */\nexport type ObservableProperty = {\n   __typename?: 'ObservableProperty',\n  hasChoices?: Maybe<Array<ObservablePhenomenon>>,\n  id: Scalars['ID'],\n  /** A name for something that can be observed (eg, temperature, weight, contamination...) */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** Types of things that can be observed or measured as part of `Observation`. */\nexport type ObservablePropertyInputParams = {\n  id?: Maybe<Scalars['ID']>,\n  /** A name for something that can be observed (eg, temperature, weight, contamination...) */\n  label: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ObservablePropertyPage = {\n   __typename?: 'ObservablePropertyPage',\n  edges: Array<ObservableProperty>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** Can contain either a unit+measure or a qualitative assessment. */\nexport type ObservableResult = Measure | ObservablePhenomenon;\n\n/** An observation event that records the measurement or assessement of an economic resource. */\nexport type Observation = {\n   __typename?: 'Observation',\n  /** The place where an observation occured. Usually mappable. */\n  atLocation?: Maybe<SpatialThing>,\n  /** Thing that was observed (like `EconomicResource` or `Agent`) */\n  hasFeatureOfInterest: ObservableObject,\n  /** \n * The result of the observation, which can be one of:\n   * - Unit and measurement of what was observed (in the case of quantitative measurements)\n   * - Name and other information (using `ObservablePhenomenon`) about what was\n   * observed (in the case of qualitative measurements)\n **/\n  hasResult: ObservableResult,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** \n * The person (`Agent`) or a machine like a sensor (`EconomicResource` or\n   * `ResourceSpecification`) who actually conducted the observation\n **/\n  madeBySensor: Observer,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Optionally defines the economic process during which this event occured */\n  observedDuring?: Maybe<Process>,\n  /** Type of measurement (eg, temperature, weight...). */\n  observedProperty: ObservableProperty,\n  /** The agent who is providing the observation */\n  provider: Agent,\n  /** The date and time at which the observation event. */\n  resultTime: Scalars['DateTime'],\n};\n\nexport type ObservationInputParams = {\n  /** (`SpatialThing`) The place where an observation occured.  Usually mappable. */\n  atLocation?: Maybe<Scalars['ID']>,\n  /** (`EconomicResource` or `Agent`) Thing that was observed */\n  hasFeatureOfInterest: Scalars['ID'],\n  id?: Maybe<Scalars['ID']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** \n * (`Person` or `EconomicResource` or `ResourceSpecification`) The person or\n   * machine or sensor who actually conducted the observation\n **/\n  madeBySensor?: Maybe<Scalars['ID']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Process`) Optionally defines the economic process during which this event occured */\n  observedDuring?: Maybe<Scalars['ID']>,\n  /** (`ObservableProperty`) Type of measurement (eg, temperature, weight...). */\n  observedProperty: Scalars['ID'],\n  /** (`Person` or `Organization`) The agent who is providing the observation */\n  provider?: Maybe<Scalars['ID']>,\n  /** \n * Alternatively to `resultPhenomenon`: Unit and measurement of what was observed\n   * (only in the case of quantitative measurements)\n **/\n  resultMeasure?: Maybe<IMeasure>,\n  /** \n * Alternatively to `resultMeasure`: (`ObservablePhenomenon`) Name and other\n   * information about what was observed (only in the case of qualitative measurements)\n **/\n  resultPhenomenon?: Maybe<Scalars['ID']>,\n  /** The date and time at which the observation occurred. */\n  resultTime?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ObservationPage = {\n   __typename?: 'ObservationPage',\n  edges: Array<Observation>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\n/** Agent (usually a person) or machine like a sensor that conducts observations. */\nexport type Observer = EconomicResource | Organization | Person | ResourceSpecification;\n\n/** A formal or informal group, or legal organization. */\nexport type Organization = {\n   __typename?: 'Organization',\n  agentType?: Maybe<AgentType>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  commitments?: Maybe<Array<Commitment>>,\n  displayUsername?: Maybe<Scalars['String']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  intents?: Maybe<Array<Intent>>,\n  inventoriedEconomicResources?: Maybe<Array<EconomicResource>>,\n  /** The name that this agent will be referred to by. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  plans?: Maybe<Array<Plan>>,\n  /** \n * The main place an agent is located, often an address where activities occur\n   * and mail can be sent. This is usually a mappable geographic location.  It also\n   * could be a website address, as in the case of agents who have no physical location.\n **/\n  primaryLocation?: Maybe<SpatialThing>,\n  processes?: Maybe<Array<Process>>,\n  proposals?: Maybe<Array<Proposal>>,\n  relationships?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsObject?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsSubject?: Maybe<Array<AgentRelationship>>,\n  roles?: Maybe<Array<AgentRelationshipRole>>,\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationEconomicEventsArgs = {\n  filter?: Maybe<AgentEventSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationInventoriedEconomicResourcesArgs = {\n  filter?: Maybe<AgentResourceSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationPlansArgs = {\n  filter?: Maybe<AgentPlanSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationProcessesArgs = {\n  filter?: Maybe<AgentProcessSearchParams>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationRelationshipsArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationRelationshipsAsObjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A formal or informal group, or legal organization. */\nexport type OrganizationRelationshipsAsSubjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\nexport type OrganizationResponse = {\n   __typename?: 'OrganizationResponse',\n  agent: Organization,\n};\n\n/** Cursors for pagination */\nexport type PageInfo = {\n   __typename?: 'PageInfo',\n  /** \n * Cursor pointing to the last of the results returned, to be used with `after`\n   * query parameter if the backend supports forward pagination.\n **/\n  endCursor?: Maybe<Array<Scalars['Cursor']>>,\n  /** \n * True if there are more results after `endCursor`. If unable to be determined,\n   * implementations should return `true` to allow for requerying.\n **/\n  hasNextPage?: Maybe<Scalars['Boolean']>,\n  /** \n * True if there are more results before `startCursor`. If unable to be\n   * determined, implementations should return `true` to allow for requerying.\n **/\n  hasPreviousPage?: Maybe<Scalars['Boolean']>,\n  /** \n * Cursor pointing to the first of the results returned, to be used with `before`\n   * query parameter if the backend supports reverse pagination.\n **/\n  startCursor?: Maybe<Array<Scalars['Cursor']>>,\n  /** Returns the total result count, if it can be determined. */\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\nexport type Paginate = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>,\n};\n\n/** A natural person. */\nexport type Person = {\n   __typename?: 'Person',\n  agentType?: Maybe<AgentType>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  commitments?: Maybe<Array<Commitment>>,\n  displayUsername?: Maybe<Scalars['String']>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the agent, such as a logo, avatar, photo, etc. */\n  image?: Maybe<Scalars['URI']>,\n  intents?: Maybe<Array<Intent>>,\n  inventoriedEconomicResources?: Maybe<Array<EconomicResource>>,\n  /** The name that this agent will be referred to by. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  plans?: Maybe<Array<Plan>>,\n  /** \n * The main place an agent is located, often an address where activities occur\n   * and mail can be sent. This is usually a mappable geographic location.  It also\n   * could be a website address, as in the case of agents who have no physical location.\n **/\n  primaryLocation?: Maybe<SpatialThing>,\n  processes?: Maybe<Array<Process>>,\n  proposals?: Maybe<Array<Proposal>>,\n  relationships?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsObject?: Maybe<Array<AgentRelationship>>,\n  relationshipsAsSubject?: Maybe<Array<AgentRelationship>>,\n  roles?: Maybe<Array<AgentRelationshipRole>>,\n};\n\n\n/** A natural person. */\nexport type PersonCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonEconomicEventsArgs = {\n  filter?: Maybe<AgentEventSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonInventoriedEconomicResourcesArgs = {\n  filter?: Maybe<AgentResourceSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonPlansArgs = {\n  filter?: Maybe<AgentPlanSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonProcessesArgs = {\n  filter?: Maybe<AgentProcessSearchParams>\n};\n\n\n/** A natural person. */\nexport type PersonRelationshipsArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A natural person. */\nexport type PersonRelationshipsAsObjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\n\n/** A natural person. */\nexport type PersonRelationshipsAsSubjectArgs = {\n  roleId?: Maybe<Scalars['ID']>\n};\n\nexport type PersonResponse = {\n   __typename?: 'PersonResponse',\n  agent: Person,\n};\n\n/** A logical collection of processes that constitute a body of planned work with defined deliverable(s). */\nexport type Plan = {\n   __typename?: 'Plan',\n  /** The time the plan was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The plan is able to be deleted or not. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** The time the plan is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  independentDemands?: Maybe<Array<Commitment>>,\n  /** An informal or formal textual identifier for a plan. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  processes?: Maybe<Array<Process>>,\n  /** This plan refines a scenario, making it operational. */\n  refinementOf?: Maybe<Scenario>,\n};\n\n\n/** A logical collection of processes that constitute a body of planned work with defined deliverable(s). */\nexport type PlanProcessesArgs = {\n  filter?: Maybe<PlanProcessSearchParams>\n};\n\nexport type PlanCreateParams = {\n  /** The time the plan was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the plan is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  /** An informal or formal textual identifier for a plan. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This plan refines a scenario, making it operational. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\n/** Query parameters for reading `Process`es related to a `Plan` */\nexport type PlanProcessSearchParams = {\n  after?: Maybe<Scalars['DateTime']>,\n  before?: Maybe<Scalars['DateTime']>,\n  finished?: Maybe<Scalars['Boolean']>,\n  searchString?: Maybe<Scalars['String']>,\n};\n\nexport type PlanResponse = {\n   __typename?: 'PlanResponse',\n  plan?: Maybe<Plan>,\n};\n\nexport type PlanUpdateParams = {\n  /** The time the plan was made. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** The time the plan is expected to be complete. */\n  due?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a plan. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This plan refines a scenario, making it operational. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\nexport type Post = {\n   __typename?: 'Post',\n  activity?: Maybe<Activity>,\n  id?: Maybe<Scalars['ID']>,\n  postContent?: Maybe<PostContent>,\n};\n\nexport type PostContent = {\n   __typename?: 'PostContent',\n  htmlBody?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n  title?: Maybe<Scalars['String']>,\n};\n\nexport type PostContentInput = {\n  htmlBody?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n  title?: Maybe<Scalars['String']>,\n};\n\nexport type PostFilters = {\n  id?: Maybe<Scalars['ID']>,\n};\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type Process = {\n   __typename?: 'Process',\n  /** The definition or specification for a process. */\n  basedOn?: Maybe<ProcessSpecification>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  committedInputs?: Maybe<Array<Commitment>>,\n  committedOutputs?: Maybe<Array<Commitment>>,\n  /** The process can be safely deleted, has no dependent information. */\n  deletable?: Maybe<Scalars['Boolean']>,\n  /** \n * The process is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the process. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the process. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  inputs?: Maybe<Array<EconomicEvent>>,\n  intendedInputs?: Maybe<Array<Intent>>,\n  intendedOutputs?: Maybe<Array<Intent>>,\n  /** An informal or formal textual identifier for a process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** The process with its inputs and outputs is part of the scenario. */\n  nestedIn?: Maybe<Scenario>,\n  nextProcesses?: Maybe<Array<Process>>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  outputs?: Maybe<Array<EconomicEvent>>,\n  /** The process with its inputs and outputs is part of the plan. */\n  plannedWithin?: Maybe<Plan>,\n  previousProcesses?: Maybe<Array<Process>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<AnyContext>>,\n  trace?: Maybe<Array<ProductionFlowItem>>,\n  track?: Maybe<Array<ProductionFlowItem>>,\n  unplannedEconomicEvents?: Maybe<Array<EconomicEvent>>,\n  workingAgents?: Maybe<Array<Agent>>,\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessCommittedInputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessCommittedOutputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessInputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessIntendedInputsArgs = {\n  action?: Maybe<Scalars['ID']>,\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessIntendedOutputsArgs = {\n  action?: Maybe<Scalars['ID']>,\n  filter?: Maybe<IntentSearchParams>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessOutputsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessTraceArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessTrackArgs = {\n  recurseLimit?: Maybe<Scalars['Int']>\n};\n\n\n/** An activity that changes inputs into outputs.  It could transform or transport economic resource(s). */\nexport type ProcessUnplannedEconomicEventsArgs = {\n  action?: Maybe<Scalars['ID']>\n};\n\nexport type ProcessCreateParams = {\n  /** (`ProcessSpecification`) The definition or specification for a process. */\n  basedOn?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The process is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the process. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the process. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Plan`) The process with its inputs and outputs is part of the plan. */\n  plannedWithin?: Maybe<Scalars['ID']>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\n/** A page of Processes */\nexport type ProcessPage = {\n   __typename?: 'ProcessPage',\n  edges: Array<Process>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ProcessResponse = {\n   __typename?: 'ProcessResponse',\n  process?: Maybe<Process>,\n};\n\n/** Specifies the kind of process. */\nexport type ProcessSpecification = {\n   __typename?: 'ProcessSpecification',\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for the process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ProcessSpecificationCreateParams = {\n  /** An informal or formal textual identifier for the process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ProcessSpecificationResponse = {\n   __typename?: 'ProcessSpecificationResponse',\n  processSpecification?: Maybe<ProcessSpecification>,\n};\n\nexport type ProcessSpecificationUpdateParams = {\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for the process. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ProcessUpdateParams = {\n  /** (`ProcessSpecification`) The definition or specification for a process. */\n  basedOn?: Maybe<Scalars['ID']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  classifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The process is complete or not.  This is irrespective of if the original goal\n   * has been met, and indicates that no more will be done.\n **/\n  finished?: Maybe<Scalars['Boolean']>,\n  /** The planned beginning of the process. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The planned end of the process. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a process. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Plan`) The process with its inputs and outputs is part of the plan. */\n  plannedWithin?: Maybe<Scalars['ID']>,\n};\n\n/** \n * A lot or batch, defining a resource produced at the same time in the same way.\n * From DataFoodConsortium vocabulary https://datafoodconsortium.gitbook.io/dfc-standard-documentation/.\n **/\nexport type ProductBatch = {\n   __typename?: 'ProductBatch',\n  /** The standard unique identifier of the batch. */\n  batchNumber: Scalars['String'],\n  /** Expiration date of the batch, commonly used for food. */\n  expiryDate?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Date the batch was produced.  Can be derived from the economic event of production. */\n  productionDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ProductBatchCreateParams = {\n  /** The standard unique identifier of the batch. */\n  batchNumber: Scalars['String'],\n  /** Expiration date of the batch, commonly used for food. */\n  expiryDate?: Maybe<Scalars['DateTime']>,\n  /** Date the batch was produced.  Can be derived from the economic event of production. */\n  productionDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ProductBatchResponse = {\n   __typename?: 'ProductBatchResponse',\n  productBatch: ProductBatch,\n};\n\nexport type ProductBatchUpdateParams = {\n  /** The standard unique identifier of the batch. */\n  batchNumber?: Maybe<Scalars['String']>,\n  /** Expiration date of the batch, commonly used for food. */\n  expiryDate?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Date the batch was produced.  Can be derived from the economic event of production. */\n  productionDate?: Maybe<Scalars['DateTime']>,\n};\n\nexport type ProductionFlowItem = EconomicEvent | EconomicResource | Process;\n\nexport type Profile = {\n   __typename?: 'Profile',\n  name?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n};\n\nexport type ProfileInput = {\n  name?: Maybe<Scalars['String']>,\n  summary?: Maybe<Scalars['String']>,\n};\n\n/** Published requests or offers, sometimes with what is expected in return. */\nexport type Proposal = {\n   __typename?: 'Proposal',\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  /** The date and time the proposal was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  creator?: Maybe<Agent>,\n  /** Location or area where the proposal is valid. */\n  eligibleLocation?: Maybe<SpatialThing>,\n  /** The beginning time of proposal publication. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end time of proposal publication. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** An informal or formal textual identifier for a proposal. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** Which Agent(s) (if any were specified) was this proposed to? */\n  publishedTo?: Maybe<Array<ProposedTo>>,\n  /** Intent(s) published as part of to this proposal */\n  publishes?: Maybe<Array<ProposedIntent>>,\n  /** \n * This proposal contains unit based quantities, which can be multipied to create\n   * commitments; commonly seen in a price list or e-commerce.\n **/\n  unitBased?: Maybe<Scalars['Boolean']>,\n};\n\nexport type ProposalCreateParams = {\n  /** The date and time the proposal was created. */\n  created?: Maybe<Scalars['DateTime']>,\n  /** (`SpatialThing`) The location at which this proposal is eligible. */\n  eligibleLocation?: Maybe<Scalars['ID']>,\n  /** The beginning time of proposal publication. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end time of proposal publication. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a proposal. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * This proposal contains unit based quantities, which can be multipied to create\n   * commitments; commonly seen in a price list or e-commerce.\n **/\n  unitBased?: Maybe<Scalars['Boolean']>,\n};\n\nexport type ProposalResponse = {\n   __typename?: 'ProposalResponse',\n  proposal?: Maybe<Proposal>,\n};\n\n/** A page of proposals */\nexport type ProposalsPage = {\n   __typename?: 'ProposalsPage',\n  edges: Array<Proposal>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ProposalUpdateParams = {\n  /** (`SpatialThing`) The location at which this proposal is eligible. */\n  eligibleLocation?: Maybe<Scalars['ID']>,\n  /** The beginning date/time of proposal publication. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The end time of proposal publication. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a proposal. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * This proposal contains unit based quantities, which can be multipied to create\n   * commitments; commonly seen in a price list or e-commerce.\n **/\n  unitBased?: Maybe<Scalars['Boolean']>,\n};\n\n/** \n * Represents many-to-many relationships between Proposals and Intents, supporting\n * including intents in multiple proposals, as well as a proposal including\n * multiple intents.\n **/\nexport type ProposedIntent = {\n   __typename?: 'ProposedIntent',\n  id: Scalars['ID'],\n  /** The published proposal which this intent is part of. */\n  publishedIn: Proposal,\n  /** The intent which is part of this published proposal. */\n  publishes: Intent,\n  /** This is a reciprocal intent of this proposal, not primary. Not meant to be used for intent matching. */\n  reciprocal?: Maybe<Scalars['Boolean']>,\n};\n\nexport type ProposedIntentResponse = {\n   __typename?: 'ProposedIntentResponse',\n  proposedIntent?: Maybe<ProposedIntent>,\n};\n\n/** An agent to which the proposal is to be published.  A proposal can be published to many agents. */\nexport type ProposedTo = {\n   __typename?: 'ProposedTo',\n  id: Scalars['ID'],\n  /** The proposal that is published to a specific agent. */\n  proposed: Proposal,\n  /** The agent to which the proposal is published. */\n  proposedTo: Agent,\n};\n\nexport type ProposedToResponse = {\n   __typename?: 'ProposedToResponse',\n  proposedTo?: Maybe<ProposedTo>,\n};\n\n/** Specifies an exchange agreement as part of a recipe. */\nexport type RecipeExchange = {\n   __typename?: 'RecipeExchange',\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe exchange. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type RecipeExchangeCreateParams = {\n  /** An informal or formal textual identifier for a recipe exchange. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type RecipeExchangeResponse = {\n   __typename?: 'RecipeExchangeResponse',\n  recipeExchange?: Maybe<RecipeExchange>,\n};\n\nexport type RecipeExchangeUpdateParams = {\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe exchange. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** The specification of a resource inflow to, or outflow from, a recipe process. */\nexport type RecipeFlow = {\n   __typename?: 'RecipeFlow',\n  /** Relates a process input or output to a verb, such as consume, produce, work, modify, etc. */\n  action: Action,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The resource definition referenced by this flow in the recipe. */\n  recipeFlowResource?: Maybe<RecipeResource>,\n  /** Relates an input flow to its process in a recipe. */\n  recipeInputOf?: Maybe<RecipeProcess>,\n  /** Relates an output flow to its process in a recipe. */\n  recipeOutputOf?: Maybe<RecipeProcess>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n};\n\nexport type RecipeFlowCreateParams = {\n  /** (`Action`) Relates a process input or output to a verb, such as consume, produce, work, modify, etc. */\n  action: Scalars['ID'],\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`RecipeExchange`) Relates a flow to its exchange agreement in a recipe. */\n  recipeClauseOf?: Maybe<Scalars['ID']>,\n  /** (`RecipeResource`) The resource definition referenced by this flow in the recipe. */\n  recipeFlowResource: Scalars['ID'],\n  /** (`RecipeProcess`) Relates an input flow to its process in a recipe. */\n  recipeInputOf?: Maybe<Scalars['ID']>,\n  /** (`RecipeProcess`) Relates an output flow to its process in a recipe. */\n  recipeOutputOf?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * (`ProcessSpecification`) References the ProcessSpecification of the last\n   * process the economic resource went through. Stage is used when the last\n   * process is important for finding proper resources, such as where the\n   * publishing process wants only documents that have gone through the editing process.\n **/\n  stage?: Maybe<Scalars['ID']>,\n  /** The state of the desired economic resource (pass or fail), after coming out of a test or review process. */\n  state?: Maybe<Scalars['String']>,\n};\n\nexport type RecipeFlowResponse = {\n   __typename?: 'RecipeFlowResponse',\n  recipeFlow?: Maybe<RecipeFlow>,\n};\n\nexport type RecipeFlowUpdateParams = {\n  /** (`Action`) Relates a process input or output to a verb, such as consume, produce, work, modify, etc. */\n  action?: Maybe<Scalars['ID']>,\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`RecipeResource`) The resource definition referenced by this flow in the recipe. */\n  recipeFlowResource?: Maybe<Scalars['ID']>,\n  /** (`RecipeProcess`) Relates an input flow to its process in a recipe. */\n  recipeInputOf?: Maybe<Scalars['ID']>,\n  /** (`RecipeProcess`) Relates an output flow to its process in a recipe. */\n  recipeOutputOf?: Maybe<Scalars['ID']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** \n * (`ProcessSpecification`) References the ProcessSpecification of the last\n   * process the economic resource went through. Stage is used when the last\n   * process is important for finding proper resources, such as where the\n   * publishing process wants only documents that have gone through the editing process.\n **/\n  stage?: Maybe<Scalars['ID']>,\n  /** The state of the desired economic resource (pass or fail), after coming out of a test or review process. */\n  state?: Maybe<Scalars['String']>,\n};\n\n/** Specifies a process in a recipe for use in planning from recipe. */\nexport type RecipeProcess = {\n   __typename?: 'RecipeProcess',\n  /** The planned calendar duration of the process as defined for the recipe batch. */\n  hasDuration?: Maybe<Duration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization. */\n  processClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** The standard specification or definition of a process. */\n  processConformsTo?: Maybe<ProcessSpecification>,\n};\n\nexport type RecipeProcessCreateParams = {\n  /** The planned calendar duration of the process as defined for the recipe batch. */\n  hasDuration?: Maybe<IDuration>,\n  /** An informal or formal textual identifier for a recipe process. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization. */\n  processClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** (`ProcessSpecification`) The standard specification or definition of a process. */\n  processConformsTo: Scalars['ID'],\n};\n\nexport type RecipeProcessResponse = {\n   __typename?: 'RecipeProcessResponse',\n  recipeProcess?: Maybe<RecipeProcess>,\n};\n\nexport type RecipeProcessUpdateParams = {\n  /** The planned calendar duration of the process as defined for the recipe batch. */\n  hasDuration?: Maybe<IDuration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a recipe process. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization. */\n  processClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** (`ProcessSpecification`) The standard specification or definition of a process. */\n  processConformsTo: Scalars['ID'],\n};\n\n/** Specifies the resource as part of a recipe, for use in planning from recipe. */\nexport type RecipeResource = {\n   __typename?: 'RecipeResource',\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a recipe resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * The primary resource specification or definition of an existing or potential\n   * economic resource. A resource will have only one, as this specifies exactly\n   * what the resource is.\n **/\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** \n * Defines if any resource of that type can be freely substituted for any other\n   * resource of that type when used, consumed, traded, etc.\n **/\n  substitutable?: Maybe<Scalars['Boolean']>,\n  /** The unit used for use action on this resource or work action in the recipe. */\n  unitOfEffort?: Maybe<Unit>,\n  /** The unit of inventory used for this resource in the recipe. */\n  unitOfResource?: Maybe<Unit>,\n};\n\nexport type RecipeResourceCreateParams = {\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a recipe resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * Defines if any resource of that type can be freely substituted for any other\n   * resource of that type when used, consumed, traded, etc.\n **/\n  substitutable?: Maybe<Scalars['Boolean']>,\n  /** (`Unit`) The unit used for use action on this resource or work action in the recipe. */\n  unitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The unit of inventory used for this resource in the recipe. */\n  unitOfResource?: Maybe<Scalars['ID']>,\n};\n\nexport type RecipeResourceResponse = {\n   __typename?: 'RecipeResourceResponse',\n  recipeResource?: Maybe<RecipeResource>,\n};\n\nexport type RecipeResourceUpdateParams = {\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a recipe resource. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * (`ResourceSpecification`) The primary resource specification or definition of\n   * an existing or potential economic resource. A resource will have only one, as\n   * this specifies exactly what the resource is.\n **/\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  /** \n * Defines if any resource of that type can be freely substituted for any other\n   * resource of that type when used, consumed, traded, etc.\n **/\n  substitutable?: Maybe<Scalars['Boolean']>,\n  /** (`Unit`) The unit used for use action on this resource or work action in the recipe. */\n  unitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The unit of inventory used for this resource in the recipe. */\n  unitOfResource?: Maybe<Scalars['ID']>,\n};\n\nexport type Replied = {\n   __typename?: 'Replied',\n  activity?: Maybe<Activity>,\n  directReplies?: Maybe<Array<Maybe<Replied>>>,\n  post?: Maybe<Post>,\n  postContent?: Maybe<PostContent>,\n  replyToId?: Maybe<Scalars['ID']>,\n  threadId?: Maybe<Scalars['ID']>,\n};\n\n\nexport type RepliedDirectRepliesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n/** \n * Specification of a kind of resource. Could define a material item, service, digital item, currency account, etc.\n * Used instead of a classification when more information is needed, particularly for recipes.\n **/\nexport type ResourceSpecification = {\n   __typename?: 'ResourceSpecification',\n  conformingResources?: Maybe<Array<EconomicResource>>,\n  /** The default unit used for use or work. */\n  defaultUnitOfEffort?: Maybe<Unit>,\n  /** The default unit used for the resource itself. */\n  defaultUnitOfResource?: Maybe<Unit>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a type of resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<AnyContext>>,\n};\n\nexport type ResourceSpecificationCreateParams = {\n  /** (`Unit`) The default unit used for use or work. */\n  defaultUnitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The default unit used for the resource itself. */\n  defaultUnitOfResource?: Maybe<Scalars['ID']>,\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a type of resource. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\nexport type ResourceSpecificationPage = {\n   __typename?: 'ResourceSpecificationPage',\n  edges: Array<ResourceSpecification>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ResourceSpecificationResponse = {\n   __typename?: 'ResourceSpecificationResponse',\n  resourceSpecification?: Maybe<ResourceSpecification>,\n};\n\nexport type ResourceSpecificationUpdateParams = {\n  /** (`Unit`) The default unit used for use or work. */\n  defaultUnitOfEffort?: Maybe<Scalars['ID']>,\n  /** (`Unit`) The default unit used for the resource itself. */\n  defaultUnitOfResource?: Maybe<Scalars['ID']>,\n  id: Scalars['ID'],\n  /** The uri to an image relevant to the entity, such as a photo, diagram, etc. */\n  image?: Maybe<Scalars['URI']>,\n  /** An informal or formal textual identifier for a type of resource. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** \n * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** \n * Tags/Categories in a taxonomy, linked to resourceClassifiedAs:\n   * References one or more concepts in a common taxonomy or other classification\n   * scheme for purposes of categorization or grouping.\n **/\n  tags?: Maybe<Array<Scalars['ID']>>,\n};\n\nexport type RootMutationType = {\n   __typename?: 'RootMutationType',\n  /** \n * Share the current user identity with a team member. This will give them full\n   * access to the currently authenticated user identity. Warning: anyone you add\n   * will have admin-level access over this user identity, meaning they can post as\n   * this user, read private messages, etc.\n **/\n  addTeamMember?: Maybe<Scalars['String']>,\n  boost?: Maybe<Activity>,\n  /** Change account password */\n  changePassword?: Maybe<Me>,\n  /** Confirm email address using a token generated upon `signup` or with `request_confirm_email` and emailed to the user. */\n  confirmEmail?: Maybe<Me>,\n  createAgentRelationship?: Maybe<AgentRelationshipResponse>,\n  createAgentRelationshipRole?: Maybe<AgentRelationshipRoleResponse>,\n  createAgreement?: Maybe<AgreementResponse>,\n  createAppreciation?: Maybe<AppreciationResponse>,\n  /** Create a new Category */\n  createCategory?: Maybe<Category>,\n  createClaim?: Maybe<ClaimResponse>,\n  createCommitment?: Maybe<CommitmentResponse>,\n  createEconomicEvent?: Maybe<EconomicEventResponse>,\n  createFulfillment?: Maybe<FulfillmentResponse>,\n  createIntent?: Maybe<IntentResponse>,\n  /** Creates a new need for the logged in user, will ignore any receiver specified. */\n  createNeed?: Maybe<IntentResponse>,\n  createObservablePhenomenon?: Maybe<ObservablePhenomenon>,\n  createObservableProperty?: Maybe<ObservableProperty>,\n  createObservation: Observation,\n  /** Creates a new offer for the logged in user, will ignore any provider specified. */\n  createOffer?: Maybe<IntentResponse>,\n  /** Registers a new organization (group agent) with the collaboration space */\n  createOrganization?: Maybe<OrganizationResponse>,\n  /** Registers a new (human) person with the collaboration space */\n  createPerson?: Maybe<PersonResponse>,\n  createPlan?: Maybe<PlanResponse>,\n  createPost?: Maybe<Post>,\n  createProcess?: Maybe<ProcessResponse>,\n  createProcessSpecification?: Maybe<ProcessSpecificationResponse>,\n  createProductBatch?: Maybe<ProductBatchResponse>,\n  createProposal?: Maybe<ProposalResponse>,\n  createRecipeExchange?: Maybe<RecipeExchangeResponse>,\n  createRecipeFlow?: Maybe<RecipeFlowResponse>,\n  createRecipeProcess?: Maybe<RecipeProcessResponse>,\n  createRecipeResource?: Maybe<RecipeResourceResponse>,\n  createResourceSpecification?: Maybe<ResourceSpecificationResponse>,\n  createSatisfaction?: Maybe<SatisfactionResponse>,\n  createScenario?: Maybe<ScenarioResponse>,\n  createScenarioDefinition?: Maybe<ScenarioDefinitionResponse>,\n  createSettlement?: Maybe<SettlementResponse>,\n  createSpatialThing?: Maybe<SpatialThingResponse>,\n  createUnit?: Maybe<UnitResponse>,\n  /** Request a new user identity for the authenticated account */\n  createUser?: Maybe<Me>,\n  createValueCalculation?: Maybe<ValueCalculationResponse>,\n  /** Delete more or less anything */\n  delete?: Maybe<AnyContext>,\n  deleteAgentRelationship?: Maybe<Scalars['Boolean']>,\n  deleteAgentRelationshipRole?: Maybe<Scalars['Boolean']>,\n  deleteAgreement?: Maybe<Scalars['Boolean']>,\n  deleteAppreciation?: Maybe<Scalars['Boolean']>,\n  deleteClaim?: Maybe<Scalars['Boolean']>,\n  deleteCommitment?: Maybe<Scalars['Boolean']>,\n  deleteEconomicEvent?: Maybe<Scalars['Boolean']>,\n  deleteEconomicResource?: Maybe<Scalars['Boolean']>,\n  deleteFulfillment?: Maybe<Scalars['Boolean']>,\n  deleteIntent?: Maybe<Scalars['Boolean']>,\n  deleteObservablePhenomenon?: Maybe<Scalars['Boolean']>,\n  deleteObservableProperty?: Maybe<Scalars['Boolean']>,\n  deleteObservation?: Maybe<Scalars['Boolean']>,\n  /** Erase record of an organization and thus remove it from the collaboration space */\n  deleteOrganization?: Maybe<Scalars['Boolean']>,\n  /** Erase record of a person and thus remove them from the collaboration space */\n  deletePerson?: Maybe<Scalars['Boolean']>,\n  deletePlan?: Maybe<Scalars['Boolean']>,\n  deleteProcess?: Maybe<Scalars['Boolean']>,\n  deleteProcessSpecification?: Maybe<Scalars['Boolean']>,\n  deleteProductBatch?: Maybe<Scalars['Boolean']>,\n  deleteProposal?: Maybe<Scalars['Boolean']>,\n  deleteProposedIntent?: Maybe<Scalars['Boolean']>,\n  deleteProposedTo?: Maybe<Scalars['Boolean']>,\n  deleteRecipeExchange?: Maybe<Scalars['Boolean']>,\n  deleteRecipeFlow?: Maybe<Scalars['Boolean']>,\n  deleteRecipeProcess?: Maybe<Scalars['Boolean']>,\n  deleteRecipeResource?: Maybe<Scalars['Boolean']>,\n  deleteResourceSpecification?: Maybe<Scalars['Boolean']>,\n  deleteSatisfaction?: Maybe<Scalars['Boolean']>,\n  deleteScenario?: Maybe<Scalars['Boolean']>,\n  deleteScenarioDefinition?: Maybe<Scalars['Boolean']>,\n  deleteSettlement?: Maybe<Scalars['Boolean']>,\n  deleteSpatialThing?: Maybe<Scalars['Boolean']>,\n  deleteUnit?: Maybe<Scalars['Boolean']>,\n  deleteValueCalculation?: Maybe<Scalars['Boolean']>,\n  flag?: Maybe<Activity>,\n  follow?: Maybe<Activity>,\n  like?: Maybe<Activity>,\n  /** Authenticate an account and/or user */\n  login?: Maybe<LoginResponse>,\n  /** Create a Tag out of something else. You can also directly use the tag() mutation with a pointer ID instead. */\n  makeTag?: Maybe<Tag>,\n  /** \n * Include an existing intent as part of a proposal.\n   * @param publishedIn the (`Proposal`) to include the intent in\n   * @param publishes the (`Intent`) to include as part of the proposal\n **/\n  proposeIntent?: Maybe<ProposedIntentResponse>,\n  /** \n * Send a proposal to another agent.\n   * @param proposed the (`Proposal`) to send to an involved agent\n   * @param proposedTo the (`Agent`) to include in the proposal\n **/\n  proposeTo?: Maybe<ProposedToResponse>,\n  /** Request a new confirmation email */\n  requestConfirmEmail?: Maybe<Scalars['String']>,\n  /** Request an email to be sent to reset a forgotten password */\n  requestResetPassword?: Maybe<Scalars['String']>,\n  /** Switch to a user (among those from the authenticated account) */\n  selectUser?: Maybe<LoginResponse>,\n  /** Register a new account. Returns the created `account_id` */\n  signup?: Maybe<Scalars['String']>,\n  /** Tag a thing (using a Pointer) with one or more Tags (or Categories, or even Pointers to anything that can become tag) */\n  tag?: Maybe<Scalars['Boolean']>,\n  updateAgentRelationship?: Maybe<AgentRelationshipResponse>,\n  updateAgentRelationshipRole?: Maybe<AgentRelationshipRoleResponse>,\n  updateAgreement?: Maybe<AgreementResponse>,\n  updateAppreciation?: Maybe<AppreciationResponse>,\n  /** Update a category */\n  updateCategory?: Maybe<Category>,\n  updateClaim?: Maybe<ClaimResponse>,\n  updateCommitment?: Maybe<CommitmentResponse>,\n  updateEconomicEvent?: Maybe<EconomicEventResponse>,\n  updateEconomicResource?: Maybe<EconomicResourceResponse>,\n  updateFulfillment?: Maybe<FulfillmentResponse>,\n  updateIntent?: Maybe<IntentResponse>,\n  updateObservablePhenomenon?: Maybe<ObservablePhenomenon>,\n  updateObservableProperty?: Maybe<ObservableProperty>,\n  updateObservation: Observation,\n  /** Update organization profile details */\n  updateOrganization?: Maybe<OrganizationResponse>,\n  /** Update profile details */\n  updatePerson?: Maybe<PersonResponse>,\n  updatePlan?: Maybe<PlanResponse>,\n  updateProcess?: Maybe<ProcessResponse>,\n  updateProcessSpecification?: Maybe<ProcessSpecificationResponse>,\n  updateProductBatch?: Maybe<ProductBatchResponse>,\n  updateProposal?: Maybe<ProposalResponse>,\n  updateRecipeExchange?: Maybe<RecipeExchangeResponse>,\n  updateRecipeFlow?: Maybe<RecipeFlowResponse>,\n  updateRecipeProcess?: Maybe<RecipeProcessResponse>,\n  updateRecipeResource?: Maybe<RecipeResourceResponse>,\n  updateResourceSpecification?: Maybe<ResourceSpecificationResponse>,\n  updateSatisfaction?: Maybe<SatisfactionResponse>,\n  updateScenario?: Maybe<ScenarioResponse>,\n  updateScenarioDefinition?: Maybe<ScenarioDefinitionResponse>,\n  updateSettlement?: Maybe<SettlementResponse>,\n  updateSpatialThing?: Maybe<SpatialThingResponse>,\n  updateUnit?: Maybe<UnitResponse>,\n  /** Edit user profile */\n  updateUser?: Maybe<Me>,\n  updateValueCalculation?: Maybe<ValueCalculationResponse>,\n};\n\n\nexport type RootMutationTypeAddTeamMemberArgs = {\n  label: Scalars['String'],\n  usernameOrEmail: Scalars['String']\n};\n\n\nexport type RootMutationTypeBoostArgs = {\n  id: Scalars['String']\n};\n\n\nexport type RootMutationTypeChangePasswordArgs = {\n  oldPassword: Scalars['String'],\n  password: Scalars['String'],\n  passwordConfirmation: Scalars['String']\n};\n\n\nexport type RootMutationTypeConfirmEmailArgs = {\n  token: Scalars['String']\n};\n\n\nexport type RootMutationTypeCreateAgentRelationshipArgs = {\n  relationship: AgentRelationshipCreateParams\n};\n\n\nexport type RootMutationTypeCreateAgentRelationshipRoleArgs = {\n  agentRelationshipRole?: Maybe<AgentRelationshipRoleCreateParams>\n};\n\n\nexport type RootMutationTypeCreateAgreementArgs = {\n  agreement?: Maybe<AgreementCreateParams>\n};\n\n\nexport type RootMutationTypeCreateAppreciationArgs = {\n  appreciation: AppreciationCreateParams\n};\n\n\nexport type RootMutationTypeCreateCategoryArgs = {\n  category?: Maybe<CategoryInput>\n};\n\n\nexport type RootMutationTypeCreateClaimArgs = {\n  claim: ClaimCreateParams\n};\n\n\nexport type RootMutationTypeCreateCommitmentArgs = {\n  commitment?: Maybe<CommitmentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateEconomicEventArgs = {\n  event: EconomicEventCreateParams,\n  newInventoriedResource?: Maybe<EconomicResourceCreateParams>\n};\n\n\nexport type RootMutationTypeCreateFulfillmentArgs = {\n  fulfillment: FulfillmentCreateParams\n};\n\n\nexport type RootMutationTypeCreateIntentArgs = {\n  intent?: Maybe<IntentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateNeedArgs = {\n  intent?: Maybe<IntentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateObservablePhenomenonArgs = {\n  observablePhenomenon: ObservablePhenomenonInputParams\n};\n\n\nexport type RootMutationTypeCreateObservablePropertyArgs = {\n  observableProperty: ObservablePropertyInputParams\n};\n\n\nexport type RootMutationTypeCreateObservationArgs = {\n  observation: ObservationInputParams\n};\n\n\nexport type RootMutationTypeCreateOfferArgs = {\n  intent?: Maybe<IntentCreateParams>\n};\n\n\nexport type RootMutationTypeCreateOrganizationArgs = {\n  organization: AgentCreateParams\n};\n\n\nexport type RootMutationTypeCreatePersonArgs = {\n  person: AgentCreateParams\n};\n\n\nexport type RootMutationTypeCreatePlanArgs = {\n  plan: PlanCreateParams\n};\n\n\nexport type RootMutationTypeCreatePostArgs = {\n  postContent: PostContentInput,\n  replyTo?: Maybe<Scalars['ID']>,\n  toCircles?: Maybe<Array<Maybe<Scalars['ID']>>>\n};\n\n\nexport type RootMutationTypeCreateProcessArgs = {\n  process: ProcessCreateParams\n};\n\n\nexport type RootMutationTypeCreateProcessSpecificationArgs = {\n  processSpecification?: Maybe<ProcessSpecificationCreateParams>\n};\n\n\nexport type RootMutationTypeCreateProductBatchArgs = {\n  productBatch: ProductBatchCreateParams\n};\n\n\nexport type RootMutationTypeCreateProposalArgs = {\n  proposal?: Maybe<ProposalCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeExchangeArgs = {\n  recipeExchange?: Maybe<RecipeExchangeCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeFlowArgs = {\n  recipeFlow?: Maybe<RecipeFlowCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeProcessArgs = {\n  recipeProcess?: Maybe<RecipeProcessCreateParams>\n};\n\n\nexport type RootMutationTypeCreateRecipeResourceArgs = {\n  recipeResource?: Maybe<RecipeResourceCreateParams>\n};\n\n\nexport type RootMutationTypeCreateResourceSpecificationArgs = {\n  resourceSpecification?: Maybe<ResourceSpecificationCreateParams>\n};\n\n\nexport type RootMutationTypeCreateSatisfactionArgs = {\n  satisfaction?: Maybe<SatisfactionCreateParams>\n};\n\n\nexport type RootMutationTypeCreateScenarioArgs = {\n  plan: ScenarioCreateParams\n};\n\n\nexport type RootMutationTypeCreateScenarioDefinitionArgs = {\n  plan: ScenarioDefinitionCreateParams\n};\n\n\nexport type RootMutationTypeCreateSettlementArgs = {\n  settlement: SettlementCreateParams\n};\n\n\nexport type RootMutationTypeCreateSpatialThingArgs = {\n  inScopeOf?: Maybe<Scalars['ID']>,\n  spatialThing: SpatialThingCreateParams\n};\n\n\nexport type RootMutationTypeCreateUnitArgs = {\n  unit: UnitCreateParams\n};\n\n\nexport type RootMutationTypeCreateUserArgs = {\n  character: CharacterInput,\n  profile: ProfileInput\n};\n\n\nexport type RootMutationTypeCreateValueCalculationArgs = {\n  valueCalculation: ValueCalculationCreateParams\n};\n\n\nexport type RootMutationTypeDeleteArgs = {\n  contextId: Scalars['String']\n};\n\n\nexport type RootMutationTypeDeleteAgentRelationshipArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteAgentRelationshipRoleArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteAgreementArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteAppreciationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteClaimArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteCommitmentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteEconomicEventArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteEconomicResourceArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteFulfillmentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteIntentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteObservablePhenomenonArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteObservablePropertyArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteObservationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteOrganizationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeletePersonArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeletePlanArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProcessArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProcessSpecificationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProductBatchArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProposalArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProposedIntentArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteProposedToArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeExchangeArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeFlowArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeProcessArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteRecipeResourceArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteResourceSpecificationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteSatisfactionArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteScenarioArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteScenarioDefinitionArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteSettlementArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteSpatialThingArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteUnitArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeDeleteValueCalculationArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type RootMutationTypeFlagArgs = {\n  id: Scalars['String']\n};\n\n\nexport type RootMutationTypeFollowArgs = {\n  id: Scalars['String'],\n  username: Scalars['String']\n};\n\n\nexport type RootMutationTypeLikeArgs = {\n  id: Scalars['String']\n};\n\n\nexport type RootMutationTypeLoginArgs = {\n  emailOrUsername: Scalars['String'],\n  password: Scalars['String']\n};\n\n\nexport type RootMutationTypeMakeTagArgs = {\n  contextId?: Maybe<Scalars['String']>\n};\n\n\nexport type RootMutationTypeProposeIntentArgs = {\n  publishedIn: Scalars['ID'],\n  publishes: Scalars['ID'],\n  reciprocal?: Maybe<Scalars['Boolean']>\n};\n\n\nexport type RootMutationTypeProposeToArgs = {\n  proposed: Scalars['ID'],\n  proposedTo: Scalars['ID']\n};\n\n\nexport type RootMutationTypeRequestConfirmEmailArgs = {\n  email: Scalars['String']\n};\n\n\nexport type RootMutationTypeRequestResetPasswordArgs = {\n  email: Scalars['String']\n};\n\n\nexport type RootMutationTypeSelectUserArgs = {\n  username: Scalars['String']\n};\n\n\nexport type RootMutationTypeSignupArgs = {\n  email: Scalars['String'],\n  inviteCode?: Maybe<Scalars['String']>,\n  password: Scalars['String']\n};\n\n\nexport type RootMutationTypeTagArgs = {\n  tags: Array<Maybe<Scalars['String']>>,\n  thing: Scalars['String']\n};\n\n\nexport type RootMutationTypeUpdateAgentRelationshipArgs = {\n  relationship: AgentRelationshipUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateAgentRelationshipRoleArgs = {\n  agentRelationshipRole?: Maybe<AgentRelationshipRoleUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateAgreementArgs = {\n  agreement?: Maybe<AgreementUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateAppreciationArgs = {\n  appreciation: AppreciationUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateCategoryArgs = {\n  category?: Maybe<CategoryInput>,\n  categoryId?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootMutationTypeUpdateClaimArgs = {\n  claim: ClaimUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateCommitmentArgs = {\n  commitment?: Maybe<CommitmentUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateEconomicEventArgs = {\n  event: EconomicEventUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateEconomicResourceArgs = {\n  resource: EconomicResourceUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateFulfillmentArgs = {\n  fulfillment: FulfillmentUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateIntentArgs = {\n  intent?: Maybe<IntentUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateObservablePhenomenonArgs = {\n  observablePhenomenon: ObservablePhenomenonInputParams\n};\n\n\nexport type RootMutationTypeUpdateObservablePropertyArgs = {\n  observableProperty: ObservablePropertyInputParams\n};\n\n\nexport type RootMutationTypeUpdateObservationArgs = {\n  observation: ObservationInputParams\n};\n\n\nexport type RootMutationTypeUpdateOrganizationArgs = {\n  organization: AgentUpdateParams\n};\n\n\nexport type RootMutationTypeUpdatePersonArgs = {\n  person: AgentUpdateParams\n};\n\n\nexport type RootMutationTypeUpdatePlanArgs = {\n  plan: PlanUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateProcessArgs = {\n  process: ProcessUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateProcessSpecificationArgs = {\n  processSpecification?: Maybe<ProcessSpecificationUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateProductBatchArgs = {\n  productBatch: ProductBatchUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateProposalArgs = {\n  proposal?: Maybe<ProposalUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeExchangeArgs = {\n  recipeExchange?: Maybe<RecipeExchangeUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeFlowArgs = {\n  recipeFlow?: Maybe<RecipeFlowUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeProcessArgs = {\n  recipeProcess?: Maybe<RecipeProcessUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateRecipeResourceArgs = {\n  recipeResource?: Maybe<RecipeResourceUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateResourceSpecificationArgs = {\n  resourceSpecification?: Maybe<ResourceSpecificationUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateSatisfactionArgs = {\n  satisfaction?: Maybe<SatisfactionUpdateParams>\n};\n\n\nexport type RootMutationTypeUpdateScenarioArgs = {\n  plan: ScenarioUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateScenarioDefinitionArgs = {\n  plan: ScenarioDefinitionUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateSettlementArgs = {\n  s0ettlement: SettlementUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateSpatialThingArgs = {\n  spatialThing: SpatialThingUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateUnitArgs = {\n  unit: UnitUpdateParams\n};\n\n\nexport type RootMutationTypeUpdateUserArgs = {\n  profile: ProfileInput\n};\n\n\nexport type RootMutationTypeUpdateValueCalculationArgs = {\n  valueCalculation: ValueCalculationUpdateParams\n};\n\nexport type RootQueryType = {\n   __typename?: 'RootQueryType',\n  action?: Maybe<Action>,\n  actions?: Maybe<Array<Action>>,\n  /** Get an activity */\n  activity?: Maybe<Activity>,\n  /** Find an agent (person or organization) by their ID */\n  agent?: Maybe<Agent>,\n  /** Retrieve details of an agent relationship by its ID */\n  agentRelationship?: Maybe<AgentRelationship>,\n  /** Retrieve details of an agent relationship role by its ID */\n  agentRelationshipRole?: Maybe<AgentRelationshipRole>,\n  /** Retrieve all possible kinds of associations that agents may have with one another in this collaboration space */\n  agentRelationshipRoles?: Maybe<Array<AgentRelationshipRole>>,\n  /** Retrieve details of all the relationships between all agents registered in this collaboration space */\n  agentRelationships?: Maybe<Array<AgentRelationship>>,\n  /** Loads all agents publicly registered within this collaboration space */\n  agents?: Maybe<Array<Agent>>,\n  agreement?: Maybe<Agreement>,\n  agreements?: Maybe<Array<Agreement>>,\n  /** Get list of categories we know about */\n  categories: CategoriesPage,\n  /** Get a category by ID */\n  category?: Maybe<Category>,\n  claim?: Maybe<Claim>,\n  claims?: Maybe<Array<Claim>>,\n  commitment?: Maybe<Commitment>,\n  commitments?: Maybe<Array<Commitment>>,\n  economicEvent?: Maybe<EconomicEvent>,\n  economicEvents?: Maybe<Array<EconomicEvent>>,\n  economicEventsFiltered?: Maybe<Array<EconomicEvent>>,\n  /** Get paginated list of economic events */\n  economicEventsPages: EconomicEventPage,\n  economicResource?: Maybe<EconomicResource>,\n  economicResources?: Maybe<Array<EconomicResource>>,\n  /** TEMPORARY - get filtered but non-paginated list of resources */\n  economicResourcesFiltered?: Maybe<Array<Maybe<EconomicResource>>>,\n  /** Get paginated list of economic resources */\n  economicResourcesPages: EconomicResourcePage,\n  /** Get activities in a feed */\n  feed?: Maybe<Array<Maybe<Activity>>>,\n  fulfillment?: Maybe<Fulfillment>,\n  fulfillments?: Maybe<Array<Fulfillment>>,\n  intent?: Maybe<Intent>,\n  intents?: Maybe<Array<Intent>>,\n  /** Get paginated list of intents */\n  intentsPages: IntentsPage,\n  /** Get information about and for the current user */\n  me?: Maybe<Me>,\n  measure?: Maybe<Measure>,\n  measures?: Maybe<Array<Measure>>,\n  measuresPages: MeasuresPage,\n  /** Loads details of the currently authenticated REA agent */\n  myAgent?: Maybe<Agent>,\n  /** Get paginated list of active needs (intents with no provider) */\n  needsPages: IntentsPage,\n  observablePhenomenon?: Maybe<ObservablePhenomenon>,\n  /** Get paginated list of observable phenomenon */\n  observablePhenomenonPages: ObservablePhenomenonPage,\n  observablePhenomenons?: Maybe<Array<ObservablePhenomenon>>,\n  observableProperties?: Maybe<Array<ObservableProperty>>,\n  /** Get paginated list of observable properties */\n  observablePropertiesPages: ObservablePropertyPage,\n  observableProperty?: Maybe<ObservableProperty>,\n  observation?: Maybe<Observation>,\n  observations?: Maybe<Array<Observation>>,\n  /** Get paginated list of observations */\n  observationsPages: ObservationPage,\n  /** Get paginated list of active offers (intents with no receiver) */\n  offersPages: IntentsPage,\n  /** Find an organization (group) agent by its ID */\n  organization?: Maybe<Organization>,\n  /** Loads all organizations publicly registered within this collaboration space */\n  organizations?: Maybe<Array<Organization>>,\n  /** Get paginated list of organizations */\n  organizationsPages: AgentsPage,\n  /** Loads all people who have publicly registered with this collaboration space. */\n  people?: Maybe<Array<Person>>,\n  /** Get paginated list of people */\n  peoplePages: AgentsPage,\n  /** Find a person by their ID */\n  person?: Maybe<Person>,\n  plan?: Maybe<Plan>,\n  plans?: Maybe<Array<Plan>>,\n  /** Get a post */\n  post?: Maybe<Post>,\n  /** Get all posts */\n  posts?: Maybe<Array<Maybe<Post>>>,\n  process?: Maybe<Process>,\n  processSpecification?: Maybe<ProcessSpecification>,\n  processSpecifications?: Maybe<Array<ProcessSpecification>>,\n  processes?: Maybe<Array<Process>>,\n  /** Get paginated list of processes */\n  processesPages: ProcessPage,\n  productBatch?: Maybe<ProductBatch>,\n  productBatches?: Maybe<Array<ProductBatch>>,\n  proposal?: Maybe<Proposal>,\n  proposals?: Maybe<Array<Proposal>>,\n  /** TEMPORARY - get filtered but non-paginated list of proposals */\n  proposalsFiltered?: Maybe<Array<Maybe<Proposal>>>,\n  /** Get paginated list of proposals */\n  proposalsPages: ProposalsPage,\n  recipeExchange?: Maybe<RecipeExchange>,\n  recipeExchanges?: Maybe<Array<RecipeExchange>>,\n  recipeFlow?: Maybe<RecipeFlow>,\n  recipeFlows?: Maybe<Array<RecipeFlow>>,\n  recipeProcess?: Maybe<RecipeProcess>,\n  recipeProcesses?: Maybe<Array<RecipeProcess>>,\n  recipeResource?: Maybe<RecipeResource>,\n  recipeResources?: Maybe<Array<RecipeResource>>,\n  resourceSpecification?: Maybe<ResourceSpecification>,\n  resourceSpecifications?: Maybe<Array<ResourceSpecification>>,\n  /** Get paginated list of resource specifications */\n  resourceSpecificationsPages: ResourceSpecificationPage,\n  satisfaction?: Maybe<Satisfaction>,\n  satisfactions?: Maybe<Array<Satisfaction>>,\n  scenario?: Maybe<Scenario>,\n  scenarioDefinition?: Maybe<ScenarioDefinition>,\n  scenarioDefinitions?: Maybe<Array<ScenarioDefinition>>,\n  scenarios?: Maybe<Array<Scenario>>,\n  settlement?: Maybe<Settlement>,\n  settlements?: Maybe<Array<Settlement>>,\n  spatialThing?: Maybe<SpatialThing>,\n  spatialThings?: Maybe<Array<SpatialThing>>,\n  spatialThingsPages: SpatialThingsPage,\n  /** Get a tag by ID */\n  tag?: Maybe<Tag>,\n  unit?: Maybe<Unit>,\n  units?: Maybe<Array<Unit>>,\n  unitsPages: UnitsPage,\n  /** Get a user */\n  user?: Maybe<User>,\n  valueCalculation?: Maybe<ValueCalculation>,\n  valueCalculationsPages: ValueCalculationPage,\n};\n\n\nexport type RootQueryTypeActionArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeActivityArgs = {\n  filter?: Maybe<ActivityFilters>\n};\n\n\nexport type RootQueryTypeAgentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipRoleArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipRolesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentRelationshipsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgentsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgreementArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeAgreementsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeCategoriesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeCategoryArgs = {\n  categoryId?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeClaimArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeClaimsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeCommitmentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeCommitmentsArgs = {\n  filter?: Maybe<AgentCommitmentSearchParams>,\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicEventArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicEventsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicEventsFilteredArgs = {\n  action?: Maybe<Scalars['ID']>,\n  endDate?: Maybe<Scalars['String']>,\n  providerId?: Maybe<Scalars['ID']>,\n  receiverId?: Maybe<Scalars['ID']>,\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  startDate?: Maybe<Scalars['String']>\n};\n\n\nexport type RootQueryTypeEconomicEventsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeEconomicResourceArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicResourcesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeEconomicResourcesFilteredArgs = {\n  agent?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  currentLocation?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  geolocation?: Maybe<GeolocationFilters>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  state?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  tagIds?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  trackingIdentifier?: Maybe<Array<Maybe<Scalars['String']>>>\n};\n\n\nexport type RootQueryTypeEconomicResourcesPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeFeedArgs = {\n  filter?: Maybe<FeedFilters>,\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type RootQueryTypeFulfillmentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeFulfillmentsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeIntentArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeIntentsArgs = {\n  filter?: Maybe<IntentSearchParams>,\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeIntentsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeMeasureArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeMeasuresArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeMeasuresPagesArgs = {\n  after?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  before?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeNeedsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeObservablePhenomenonArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservablePhenomenonPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeObservablePhenomenonsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservablePropertiesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservablePropertiesPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeObservablePropertyArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeObservationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  agent?: Maybe<Array<Scalars['ID']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  hasFeatureOfInterest?: Maybe<Array<Scalars['ID']>>,\n  limit?: Maybe<Scalars['Int']>,\n  madeBySensor?: Maybe<Array<Scalars['ID']>>,\n  observedDuring?: Maybe<Array<Scalars['ID']>>,\n  observedProperty?: Maybe<Array<Scalars['ID']>>,\n  provider?: Maybe<Array<Scalars['ID']>>\n};\n\n\nexport type RootQueryTypeOffersPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeOrganizationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeOrganizationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeOrganizationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypePeopleArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePeoplePagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypePersonArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePlanArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePlansArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypePostArgs = {\n  filter?: Maybe<PostFilters>\n};\n\n\nexport type RootQueryTypeProcessArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessSpecificationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessSpecificationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProcessesPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeProductBatchArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProductBatchesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProposalArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProposalsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeProposalsFilteredArgs = {\n  agent?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  atLocation?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  geolocation?: Maybe<GeolocationFilters>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>\n};\n\n\nexport type RootQueryTypeProposalsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeRecipeExchangeArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeExchangesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeFlowArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeFlowsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeProcessArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeProcessesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeResourceArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeRecipeResourcesArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeResourceSpecificationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeResourceSpecificationsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeResourceSpecificationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  inScopeOf?: Maybe<Array<Maybe<Scalars['ID']>>>,\n  limit?: Maybe<Scalars['Int']>,\n  tagIds?: Maybe<Array<Maybe<Scalars['ID']>>>\n};\n\n\nexport type RootQueryTypeSatisfactionArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSatisfactionsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenarioArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenarioDefinitionArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenarioDefinitionsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeScenariosArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSettlementArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSettlementsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSpatialThingArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSpatialThingsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeSpatialThingsPagesArgs = {\n  after?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  before?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeTagArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeUnitArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeUnitsArgs = {\n  limit?: Maybe<Scalars['Int']>,\n  start?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeUnitsPagesArgs = {\n  after?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  before?: Maybe<Array<Maybe<Scalars['Cursor']>>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\n\nexport type RootQueryTypeUserArgs = {\n  filter?: Maybe<CharacterFilters>\n};\n\n\nexport type RootQueryTypeValueCalculationArgs = {\n  id?: Maybe<Scalars['ID']>\n};\n\n\nexport type RootQueryTypeValueCalculationsPagesArgs = {\n  after?: Maybe<Array<Scalars['Cursor']>>,\n  before?: Maybe<Array<Scalars['Cursor']>>,\n  limit?: Maybe<Scalars['Int']>\n};\n\nexport type RootSubscriptionType = {\n   __typename?: 'RootSubscriptionType',\n  intentCreated?: Maybe<Intent>,\n};\n\n\nexport type RootSubscriptionTypeIntentCreatedArgs = {\n  context?: Maybe<Scalars['String']>\n};\n\n/** \n * Represents many-to-many relationships between intents and commitments or events\n * that partially or full satisfy one or more intents.\n **/\nexport type Satisfaction = {\n   __typename?: 'Satisfaction',\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** A commitment or economic event fully or partially satisfying an intent. */\n  satisfiedBy: EventOrCommitment,\n  /** An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies: Intent,\n};\n\nexport type SatisfactionCreateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`Commitment`|`EconomicEvent`) A commitment or economic event fully or partially satisfying an intent. */\n  satisfiedBy: Scalars['ID'],\n  /** (`Intent`) An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies: Scalars['ID'],\n};\n\nexport type SatisfactionResponse = {\n   __typename?: 'SatisfactionResponse',\n  satisfaction?: Maybe<Satisfaction>,\n};\n\nexport type SatisfactionUpdateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`Commitment`|`EconomicEvent`) A commitment or economic event fully or partially satisfying an intent. */\n  satisfiedBy?: Maybe<Scalars['ID']>,\n  /** (`Intent`) An intent satisfied fully or partially by an economic event or commitment. */\n  satisfies?: Maybe<Scalars['ID']>,\n};\n\n/** An estimated or analytical logical collection of higher level processes used for budgeting, analysis, plan refinement, etc. */\nexport type Scenario = {\n   __typename?: 'Scenario',\n  /** The scenario definition for this scenario, for example yearly budget. */\n  definedAs?: Maybe<ScenarioDefinition>,\n  /** The beginning date/time of the scenario, often the beginning of an accounting period. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The ending date/time of the scenario, often the end of an accounting period. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** An informal or formal textual identifier for a scenario. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** This scenario refines another scenario, often as time moves closer or for more detail. */\n  refinementOf?: Maybe<Scenario>,\n};\n\nexport type ScenarioCreateParams = {\n  /** (`ScenarioDefinition`) The scenario definition for this scenario, for example yearly budget. */\n  definedAs: Scalars['ID'],\n  /** The beginning date/time of the scenario, often the beginning of an accounting period. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The ending date/time of the scenario, often the end of an accounting period. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a scenario. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This scenario refines another scenario, often as time moves closer or for more detail. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\n/** The type definition of one or more scenarios, such as Yearly Budget. */\nexport type ScenarioDefinition = {\n   __typename?: 'ScenarioDefinition',\n  /** The duration of the scenario, often an accounting period. */\n  hasDuration?: Maybe<Duration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a scenario definition. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ScenarioDefinitionCreateParams = {\n  /** The duration of the scenario, often an accounting period. */\n  hasDuration?: Maybe<IDuration>,\n  /** An informal or formal textual identifier for a scenario definition. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ScenarioDefinitionResponse = {\n   __typename?: 'ScenarioDefinitionResponse',\n  scenarioDefinition?: Maybe<ScenarioDefinition>,\n};\n\nexport type ScenarioDefinitionUpdateParams = {\n  /** The duration of the scenario, often an accounting period. */\n  hasDuration?: Maybe<IDuration>,\n  id: Scalars['ID'],\n  /** An informal or formal textual identifier for a scenario definition. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type ScenarioResponse = {\n   __typename?: 'ScenarioResponse',\n  scenario?: Maybe<Scenario>,\n};\n\nexport type ScenarioUpdateParams = {\n  /** (`ScenarioDefinition`) The scenario definition for this scenario, for example yearly budget. */\n  definedAs: Scalars['ID'],\n  /** The beginning date/time of the scenario, often the beginning of an accounting period. */\n  hasBeginning?: Maybe<Scalars['DateTime']>,\n  /** The ending date/time of the scenario, often the end of an accounting period. */\n  hasEnd?: Maybe<Scalars['DateTime']>,\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  /** An informal or formal textual identifier for a scenario. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** (`Scenario`) This scenario refines another scenario, often as time moves closer or for more detail. */\n  refinementOf?: Maybe<Scalars['ID']>,\n};\n\n/** Represents many-to-many relationships between claim and economic events that fully or partially settle one or more claims. */\nexport type Settlement = {\n   __typename?: 'Settlement',\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<Measure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<Measure>,\n  /** The economic event fully or partially settling a claim. */\n  settledBy: EconomicEvent,\n  /** A claim which is fully or partially settled by an economic event. */\n  settles: Claim,\n};\n\nexport type SettlementCreateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event fully or partially settling a claim. */\n  settledBy: Scalars['ID'],\n  /** (`Claim`) A claim which is fully or partially settled by an economic event. */\n  settles: Scalars['ID'],\n};\n\nexport type SettlementResponse = {\n   __typename?: 'SettlementResponse',\n  settlement?: Maybe<Settlement>,\n};\n\nexport type SettlementUpdateParams = {\n  /** \n * The amount and unit of the work or use or citation effort-based action. This\n   * is often a time duration, but also could be cycle counts or other measures of\n   * effort or usefulness.\n **/\n  effortQuantity?: Maybe<IMeasure>,\n  id: Scalars['ID'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** The amount and unit of the economic resource counted or inventoried. */\n  resourceQuantity?: Maybe<IMeasure>,\n  /** (`EconomicEvent`) The economic event fully or partially settling a claim. */\n  settledBy?: Maybe<Scalars['ID']>,\n  /** (`Claim`) A claim which is fully or partially settled by an economic event. */\n  settles?: Maybe<Scalars['ID']>,\n};\n\n/** A physical mappable location. */\nexport type SpatialThing = {\n   __typename?: 'SpatialThing',\n  /** Altitude. */\n  alt?: Maybe<Scalars['Float']>,\n  canonicalUrl?: Maybe<Scalars['String']>,\n  displayUsername?: Maybe<Scalars['String']>,\n  geom?: Maybe<Scalars['Json']>,\n  id: Scalars['ID'],\n  inScopeOf?: Maybe<AnyContext>,\n  /** Latitude. */\n  lat?: Maybe<Scalars['Float']>,\n  /** Longitude. */\n  long?: Maybe<Scalars['Float']>,\n  /** An address that will be recognized as mappable by mapping software. */\n  mappableAddress?: Maybe<Scalars['String']>,\n  /** An informal or formal textual identifier for a location. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type SpatialThingCreateParams = {\n  /** Altitude. */\n  alt?: Maybe<Scalars['Float']>,\n  /** Latitude. */\n  lat?: Maybe<Scalars['Float']>,\n  /** Longitude. */\n  long?: Maybe<Scalars['Float']>,\n  /** An address that will be recognized as mappable by mapping software. */\n  mappableAddress?: Maybe<Scalars['String']>,\n  /** An informal or formal textual identifier for a location. Does not imply uniqueness. */\n  name: Scalars['String'],\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\nexport type SpatialThingResponse = {\n   __typename?: 'SpatialThingResponse',\n  spatialThing?: Maybe<SpatialThing>,\n};\n\nexport type SpatialThingsPage = {\n   __typename?: 'SpatialThingsPage',\n  edges?: Maybe<Array<Maybe<SpatialThing>>>,\n  pageInfo?: Maybe<PageInfo>,\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\nexport type SpatialThingUpdateParams = {\n  /** Altitude. */\n  alt?: Maybe<Scalars['Float']>,\n  id: Scalars['ID'],\n  /** Latitude. */\n  lat?: Maybe<Scalars['Float']>,\n  /** Longitude. */\n  long?: Maybe<Scalars['Float']>,\n  /** An address that will be recognized as mappable by mapping software. */\n  mappableAddress?: Maybe<Scalars['String']>,\n  /** An informal or formal textual identifier for a location. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n};\n\n/** A tag could be a category or hashtag or user or community or etc */\nexport type Tag = {\n   __typename?: 'Tag',\n  /** Unique URL (on original instance) */\n  canonicalUrl?: Maybe<Scalars['String']>,\n  /** The object used as a tag (eg. Category, Geolocation, Hashtag, User...) */\n  context?: Maybe<AnyContext>,\n  /** Unique URL (on original instance) */\n  displayUsername?: Maybe<Scalars['String']>,\n  /** Type of tag (i.e. context) */\n  facet?: Maybe<Scalars['String']>,\n  /** The primary key of the tag */\n  id?: Maybe<Scalars['ID']>,\n  /** Name of the tag (derived from its context) */\n  name?: Maybe<Scalars['String']>,\n  /** What character is used to trigger this tag (eg. @, #, +) */\n  prefix?: Maybe<Scalars['String']>,\n  /** Description of the tag (derived from its context) */\n  summary?: Maybe<Scalars['String']>,\n  /** Objects that were tagged with this tag */\n  tagged?: Maybe<Array<Maybe<AnyContext>>>,\n};\n\n/** Defines the unit of time measured in a temporal `Duration`. */\nexport enum TimeUnit {\n  Day = 'day',\n  Hour = 'hour',\n  Minute = 'minute',\n  Month = 'month',\n  Second = 'second',\n  Week = 'week',\n  Year = 'year'\n}\n\n/** \n * Defines a unit of measurement, along with its display symbol.\n * From OM2 vocabulary.\n **/\nexport type Unit = {\n   __typename?: 'Unit',\n  /** Added for CommonsPub */\n  canonicalUrl?: Maybe<Scalars['URI']>,\n  id: Scalars['ID'],\n  inScopeOf?: Maybe<AnyContext>,\n  /** A human readable label for the unit, can be language specific. */\n  label: Scalars['String'],\n  /** A standard display symbol for a unit of measure. */\n  symbol: Scalars['String'],\n};\n\nexport type UnitCreateParams = {\n  inScopeOf?: Maybe<Scalars['ID']>,\n  /** A human readable label for the unit, can be language specific. */\n  label: Scalars['String'],\n  /** A standard display symbol for a unit of measure. */\n  symbol: Scalars['String'],\n};\n\nexport type UnitResponse = {\n   __typename?: 'UnitResponse',\n  unit?: Maybe<Unit>,\n};\n\nexport type UnitsPage = {\n   __typename?: 'UnitsPage',\n  edges?: Maybe<Array<Unit>>,\n  pageInfo?: Maybe<PageInfo>,\n  totalCount?: Maybe<Scalars['Int']>,\n};\n\nexport type UnitUpdateParams = {\n  /** The primary key of the unit to update. */\n  id: Scalars['ID'],\n  /** A human readable label for the unit, can be language specific. */\n  label?: Maybe<Scalars['String']>,\n  /** A standard display symbol for a unit of measure. */\n  symbol?: Maybe<Scalars['String']>,\n};\n\n\nexport type User = {\n   __typename?: 'User',\n  boostActivities?: Maybe<Array<Maybe<Activity>>>,\n  character?: Maybe<Character>,\n  id?: Maybe<Scalars['ID']>,\n  posts?: Maybe<Array<Maybe<Post>>>,\n  profile?: Maybe<Profile>,\n  userActivities?: Maybe<Array<Maybe<Activity>>>,\n};\n\n\nexport type UserBoostActivitiesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type UserPostsArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n\nexport type UserUserActivitiesArgs = {\n  paginate?: Maybe<Paginate>\n};\n\n/** A calculation performed using custom formulas for a certain context. */\nexport type ValueCalculation = {\n   __typename?: 'ValueCalculation',\n  /** Relates a value calculation to a verb, such as consume, produce, work, improve, etc. */\n  action: Action,\n  formula: Scalars['String'],\n  id: Scalars['ID'],\n  /** Grouping around something to create a boundary or context, used for documenting, accounting, planning. */\n  inScopeOf?: Maybe<Array<AccountingScope>>,\n  /** An informal or formal textual identifier for an item. Does not imply uniqueness. */\n  name?: Maybe<Scalars['String']>,\n  /** A textual description or comment. */\n  note?: Maybe<Scalars['String']>,\n  /** References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping. */\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  /** Used to filter valueCalculations to find the one that matches the event. */\n  resourceConformsTo?: Maybe<ResourceSpecification>,\n  /** Relates a value calculation to a verb, like action, but for the related event. */\n  valueAction: Action,\n  /** The resource specification the event will apply to. */\n  valueResourceConformsTo?: Maybe<ResourceSpecification>,\n  /** References the unit used for the event. */\n  valueUnit: Unit,\n};\n\nexport type ValueCalculationCreateParams = {\n  action: Scalars['ID'],\n  formula: Scalars['String'],\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  name?: Maybe<Scalars['String']>,\n  note?: Maybe<Scalars['String']>,\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  valueAction: Scalars['ID'],\n  valueResourceConformsTo?: Maybe<Scalars['ID']>,\n  valueUnit: Scalars['ID'],\n};\n\nexport type ValueCalculationPage = {\n   __typename?: 'ValueCalculationPage',\n  edges: Array<ValueCalculation>,\n  pageInfo: PageInfo,\n  totalCount: Scalars['Int'],\n};\n\nexport type ValueCalculationResponse = {\n   __typename?: 'ValueCalculationResponse',\n  valueCalculation?: Maybe<ValueCalculation>,\n};\n\nexport type ValueCalculationUpdateParams = {\n  action?: Maybe<Scalars['ID']>,\n  formula?: Maybe<Scalars['String']>,\n  id: Scalars['ID'],\n  inScopeOf?: Maybe<Array<Scalars['ID']>>,\n  name?: Maybe<Scalars['String']>,\n  note?: Maybe<Scalars['String']>,\n  resourceClassifiedAs?: Maybe<Array<Scalars['URI']>>,\n  resourceConformsTo?: Maybe<Scalars['ID']>,\n  valueAction?: Maybe<Scalars['ID']>,\n  valueResourceConformsTo?: Maybe<Scalars['ID']>,\n  valueUnit?: Maybe<Scalars['ID']>,\n};\n\nexport type Verb = {\n   __typename?: 'Verb',\n  verb?: Maybe<Scalars['String']>,\n  verbDisplay?: Maybe<Scalars['String']>,\n};\n\n\n      export interface IntrospectionResultData {\n        __schema: {\n          types: {\n            kind: string;\n            name: string;\n            possibleTypes: {\n              name: string;\n            }[];\n          }[];\n        };\n      }\n\n      const result: IntrospectionResultData = {\n  \"__schema\": {\n    \"types\": [\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"AnyContext\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Activity\"\n          },\n          {\n            \"name\": \"Category\"\n          },\n          {\n            \"name\": \"EconomicEvent\"\n          },\n          {\n            \"name\": \"Follow\"\n          },\n          {\n            \"name\": \"Intent\"\n          },\n          {\n            \"name\": \"Post\"\n          },\n          {\n            \"name\": \"Process\"\n          },\n          {\n            \"name\": \"SpatialThing\"\n          },\n          {\n            \"name\": \"Tag\"\n          },\n          {\n            \"name\": \"User\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"AccountingScope\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Category\"\n          },\n          {\n            \"name\": \"Organization\"\n          },\n          {\n            \"name\": \"Person\"\n          },\n          {\n            \"name\": \"Tag\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"INTERFACE\",\n        \"name\": \"Agent\",\n        \"possibleTypes\": []\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"ProductionFlowItem\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"EconomicEvent\"\n          },\n          {\n            \"name\": \"EconomicResource\"\n          },\n          {\n            \"name\": \"Process\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"EventOrCommitment\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Commitment\"\n          },\n          {\n            \"name\": \"EconomicEvent\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"AnyCharacter\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Category\"\n          },\n          {\n            \"name\": \"SpatialThing\"\n          },\n          {\n            \"name\": \"User\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"ObservableObject\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"EconomicResource\"\n          },\n          {\n            \"name\": \"Organization\"\n          },\n          {\n            \"name\": \"Person\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"ObservableResult\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"Measure\"\n          },\n          {\n            \"name\": \"ObservablePhenomenon\"\n          }\n        ]\n      },\n      {\n        \"kind\": \"UNION\",\n        \"name\": \"Observer\",\n        \"possibleTypes\": [\n          {\n            \"name\": \"EconomicResource\"\n          },\n          {\n            \"name\": \"Organization\"\n          },\n          {\n            \"name\": \"Person\"\n          },\n          {\n            \"name\": \"ResourceSpecification\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\n      export default result;\n    \n\n\nexport type ResolverTypeWrapper<T> = Promise<T> | T;\n\nexport type ResolverFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Promise<TResult> | TResult;\n\n\nexport type StitchingResolver<TResult, TParent, TContext, TArgs> = {\n  fragment: string;\n  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\n\nexport type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> =\n  | ResolverFn<TResult, TParent, TContext, TArgs>\n  | StitchingResolver<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => AsyncIterator<TResult> | Promise<AsyncIterator<TResult>>;\n\nexport type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\nexport interface SubscriptionSubscriberObject<TResult, TKey extends string, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<{ [key in TKey]: TResult }, TParent, TContext, TArgs>;\n  resolve?: SubscriptionResolveFn<TResult, { [key in TKey]: TResult }, TContext, TArgs>;\n}\n\nexport interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;\n  resolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;\n}\n\nexport type SubscriptionObject<TResult, TKey extends string, TParent, TContext, TArgs> =\n  | SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>\n  | SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionResolver<TResult, TKey extends string, TParent = {}, TContext = {}, TArgs = {}> =\n  | ((...args: any[]) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)\n  | SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;\n\nexport type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (\n  parent: TParent,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Maybe<TTypes>;\n\nexport type NextResolverFn<T> = () => Promise<T>;\n\nexport type DirectiveResolverFn<TResult = {}, TParent = {}, TContext = {}, TArgs = {}> = (\n  next: NextResolverFn<TResult>,\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\n/** Mapping between all available schema types and the resolvers types */\nexport type ResolversTypes = {\n  RootQueryType: ResolverTypeWrapper<{}>,\n  ID: ResolverTypeWrapper<Scalars['ID']>,\n  Action: ResolverTypeWrapper<Action>,\n  String: ResolverTypeWrapper<Scalars['String']>,\n  ActivityFilters: ActivityFilters,\n  Activity: ResolverTypeWrapper<Omit<Activity, 'object' | 'subject'> & { object?: Maybe<ResolversTypes['AnyContext']>, subject?: Maybe<ResolversTypes['AnyCharacter']> }>,\n  Paginate: Paginate,\n  Cursor: ResolverTypeWrapper<Scalars['Cursor']>,\n  Int: ResolverTypeWrapper<Scalars['Int']>,\n  Replied: ResolverTypeWrapper<Replied>,\n  Post: ResolverTypeWrapper<Post>,\n  PostContent: ResolverTypeWrapper<PostContent>,\n  AnyContext: ResolversTypes['Activity'] | ResolversTypes['Category'] | ResolversTypes['EconomicEvent'] | ResolversTypes['Follow'] | ResolversTypes['Intent'] | ResolversTypes['Post'] | ResolversTypes['Process'] | ResolversTypes['SpatialThing'] | ResolversTypes['Tag'] | ResolversTypes['User'],\n  Category: ResolverTypeWrapper<Omit<Category, 'caretaker'> & { caretaker?: Maybe<ResolversTypes['AnyContext']> }>,\n  Json: ResolverTypeWrapper<Scalars['Json']>,\n  CategoriesPage: ResolverTypeWrapper<CategoriesPage>,\n  PageInfo: ResolverTypeWrapper<PageInfo>,\n  Boolean: ResolverTypeWrapper<Scalars['Boolean']>,\n  EconomicEvent: ResolverTypeWrapper<Omit<EconomicEvent, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, trace?: Maybe<Array<ResolversTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversTypes['ProductionFlowItem']>> }>,\n  URI: ResolverTypeWrapper<Scalars['URI']>,\n  Appreciation: ResolverTypeWrapper<Appreciation>,\n  SpatialThing: ResolverTypeWrapper<Omit<SpatialThing, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversTypes['AnyContext']> }>,\n  Float: ResolverTypeWrapper<Scalars['Float']>,\n  ValueCalculation: ResolverTypeWrapper<Omit<ValueCalculation, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  AccountingScope: ResolversTypes['Category'] | ResolversTypes['Organization'] | ResolversTypes['Person'] | ResolversTypes['Tag'],\n  Organization: ResolverTypeWrapper<Omit<Organization, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  AgentType: AgentType,\n  agentCommitmentSearchParams: AgentCommitmentSearchParams,\n  DateTime: ResolverTypeWrapper<Scalars['DateTime']>,\n  Commitment: ResolverTypeWrapper<Omit<Commitment, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  Agreement: ResolverTypeWrapper<Agreement>,\n  Agent: ResolverTypeWrapper<Agent>,\n  agentEventSearchParams: AgentEventSearchParams,\n  IntentSearchParams: IntentSearchParams,\n  GeolocationFilters: GeolocationFilters,\n  GeolocationDistance: GeolocationDistance,\n  GeolocationPoint: GeolocationPoint,\n  Intent: ResolverTypeWrapper<Omit<Intent, 'inScopeOf' | 'tags'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversTypes['AnyContext']>>> }>,\n  Measure: ResolverTypeWrapper<Measure>,\n  Unit: ResolverTypeWrapper<Omit<Unit, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversTypes['AnyContext']> }>,\n  Process: ResolverTypeWrapper<Omit<Process, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, tags?: Maybe<Array<ResolversTypes['AnyContext']>>, trace?: Maybe<Array<ResolversTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversTypes['ProductionFlowItem']>> }>,\n  ProcessSpecification: ResolverTypeWrapper<ProcessSpecification>,\n  Scenario: ResolverTypeWrapper<Omit<Scenario, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  ScenarioDefinition: ResolverTypeWrapper<ScenarioDefinition>,\n  Duration: ResolverTypeWrapper<Duration>,\n  TimeUnit: TimeUnit,\n  Plan: ResolverTypeWrapper<Omit<Plan, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  planProcessSearchParams: PlanProcessSearchParams,\n  ProductionFlowItem: ResolversTypes['EconomicEvent'] | ResolversTypes['EconomicResource'] | ResolversTypes['Process'],\n  EconomicResource: ResolverTypeWrapper<Omit<EconomicResource, 'tags' | 'trace' | 'track'> & { tags?: Maybe<Array<ResolversTypes['AnyContext']>>, trace?: Maybe<Array<ResolversTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversTypes['ProductionFlowItem']>> }>,\n  ResourceSpecification: ResolverTypeWrapper<Omit<ResourceSpecification, 'tags'> & { tags?: Maybe<Array<ResolversTypes['AnyContext']>> }>,\n  ProductBatch: ResolverTypeWrapper<ProductBatch>,\n  ProposedIntent: ResolverTypeWrapper<ProposedIntent>,\n  Proposal: ResolverTypeWrapper<Omit<Proposal, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  ProposedTo: ResolverTypeWrapper<ProposedTo>,\n  Satisfaction: ResolverTypeWrapper<Omit<Satisfaction, 'satisfiedBy'> & { satisfiedBy: ResolversTypes['EventOrCommitment'] }>,\n  EventOrCommitment: ResolversTypes['Commitment'] | ResolversTypes['EconomicEvent'],\n  agentResourceSearchParams: AgentResourceSearchParams,\n  agentPlanSearchParams: AgentPlanSearchParams,\n  agentProcessSearchParams: AgentProcessSearchParams,\n  AgentRelationship: ResolverTypeWrapper<Omit<AgentRelationship, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  AgentRelationshipRole: ResolverTypeWrapper<AgentRelationshipRole>,\n  Fulfillment: ResolverTypeWrapper<Fulfillment>,\n  Person: ResolverTypeWrapper<Person>,\n  Tag: ResolverTypeWrapper<Omit<Tag, 'context' | 'tagged'> & { context?: Maybe<ResolversTypes['AnyContext']>, tagged?: Maybe<Array<Maybe<ResolversTypes['AnyContext']>>> }>,\n  Follow: ResolverTypeWrapper<Follow>,\n  Character: ResolverTypeWrapper<Character>,\n  Profile: ResolverTypeWrapper<Profile>,\n  User: ResolverTypeWrapper<User>,\n  AnyCharacter: ResolversTypes['Category'] | ResolversTypes['SpatialThing'] | ResolversTypes['User'],\n  Verb: ResolverTypeWrapper<Verb>,\n  Claim: ResolverTypeWrapper<Omit<Claim, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>> }>,\n  EconomicEventPage: ResolverTypeWrapper<EconomicEventPage>,\n  EconomicResourcePage: ResolverTypeWrapper<EconomicResourcePage>,\n  FeedFilters: FeedFilters,\n  IntentsPage: ResolverTypeWrapper<IntentsPage>,\n  Me: ResolverTypeWrapper<Me>,\n  MeasuresPage: ResolverTypeWrapper<MeasuresPage>,\n  ObservablePhenomenon: ResolverTypeWrapper<ObservablePhenomenon>,\n  ObservableProperty: ResolverTypeWrapper<ObservableProperty>,\n  ObservablePhenomenonPage: ResolverTypeWrapper<ObservablePhenomenonPage>,\n  ObservablePropertyPage: ResolverTypeWrapper<ObservablePropertyPage>,\n  Observation: ResolverTypeWrapper<Omit<Observation, 'hasFeatureOfInterest' | 'hasResult' | 'inScopeOf' | 'madeBySensor'> & { hasFeatureOfInterest: ResolversTypes['ObservableObject'], hasResult: ResolversTypes['ObservableResult'], inScopeOf?: Maybe<Array<ResolversTypes['AccountingScope']>>, madeBySensor: ResolversTypes['Observer'] }>,\n  ObservableObject: ResolversTypes['EconomicResource'] | ResolversTypes['Organization'] | ResolversTypes['Person'],\n  ObservableResult: ResolversTypes['Measure'] | ResolversTypes['ObservablePhenomenon'],\n  Observer: ResolversTypes['EconomicResource'] | ResolversTypes['Organization'] | ResolversTypes['Person'] | ResolversTypes['ResourceSpecification'],\n  ObservationPage: ResolverTypeWrapper<ObservationPage>,\n  AgentsPage: ResolverTypeWrapper<AgentsPage>,\n  PostFilters: PostFilters,\n  ProcessPage: ResolverTypeWrapper<ProcessPage>,\n  ProposalsPage: ResolverTypeWrapper<ProposalsPage>,\n  RecipeExchange: ResolverTypeWrapper<RecipeExchange>,\n  RecipeFlow: ResolverTypeWrapper<RecipeFlow>,\n  RecipeResource: ResolverTypeWrapper<RecipeResource>,\n  RecipeProcess: ResolverTypeWrapper<RecipeProcess>,\n  ResourceSpecificationPage: ResolverTypeWrapper<ResourceSpecificationPage>,\n  Settlement: ResolverTypeWrapper<Settlement>,\n  SpatialThingsPage: ResolverTypeWrapper<SpatialThingsPage>,\n  UnitsPage: ResolverTypeWrapper<UnitsPage>,\n  CharacterFilters: CharacterFilters,\n  ValueCalculationPage: ResolverTypeWrapper<ValueCalculationPage>,\n  RootMutationType: ResolverTypeWrapper<{}>,\n  AgentRelationshipCreateParams: AgentRelationshipCreateParams,\n  AgentRelationshipResponse: ResolverTypeWrapper<AgentRelationshipResponse>,\n  AgentRelationshipRoleCreateParams: AgentRelationshipRoleCreateParams,\n  AgentRelationshipRoleResponse: ResolverTypeWrapper<AgentRelationshipRoleResponse>,\n  AgreementCreateParams: AgreementCreateParams,\n  AgreementResponse: ResolverTypeWrapper<AgreementResponse>,\n  AppreciationCreateParams: AppreciationCreateParams,\n  AppreciationResponse: ResolverTypeWrapper<AppreciationResponse>,\n  CategoryInput: CategoryInput,\n  ClaimCreateParams: ClaimCreateParams,\n  IMeasure: IMeasure,\n  ClaimResponse: ResolverTypeWrapper<ClaimResponse>,\n  CommitmentCreateParams: CommitmentCreateParams,\n  CommitmentResponse: ResolverTypeWrapper<CommitmentResponse>,\n  EconomicEventCreateParams: EconomicEventCreateParams,\n  EconomicResourceCreateParams: EconomicResourceCreateParams,\n  EconomicEventResponse: ResolverTypeWrapper<EconomicEventResponse>,\n  FulfillmentCreateParams: FulfillmentCreateParams,\n  FulfillmentResponse: ResolverTypeWrapper<FulfillmentResponse>,\n  IntentCreateParams: IntentCreateParams,\n  IntentResponse: ResolverTypeWrapper<IntentResponse>,\n  ObservablePhenomenonInputParams: ObservablePhenomenonInputParams,\n  ObservablePropertyInputParams: ObservablePropertyInputParams,\n  ObservationInputParams: ObservationInputParams,\n  AgentCreateParams: AgentCreateParams,\n  OrganizationResponse: ResolverTypeWrapper<OrganizationResponse>,\n  PersonResponse: ResolverTypeWrapper<PersonResponse>,\n  PlanCreateParams: PlanCreateParams,\n  PlanResponse: ResolverTypeWrapper<PlanResponse>,\n  PostContentInput: PostContentInput,\n  ProcessCreateParams: ProcessCreateParams,\n  ProcessResponse: ResolverTypeWrapper<ProcessResponse>,\n  ProcessSpecificationCreateParams: ProcessSpecificationCreateParams,\n  ProcessSpecificationResponse: ResolverTypeWrapper<ProcessSpecificationResponse>,\n  ProductBatchCreateParams: ProductBatchCreateParams,\n  ProductBatchResponse: ResolverTypeWrapper<ProductBatchResponse>,\n  ProposalCreateParams: ProposalCreateParams,\n  ProposalResponse: ResolverTypeWrapper<ProposalResponse>,\n  RecipeExchangeCreateParams: RecipeExchangeCreateParams,\n  RecipeExchangeResponse: ResolverTypeWrapper<RecipeExchangeResponse>,\n  RecipeFlowCreateParams: RecipeFlowCreateParams,\n  RecipeFlowResponse: ResolverTypeWrapper<RecipeFlowResponse>,\n  RecipeProcessCreateParams: RecipeProcessCreateParams,\n  IDuration: IDuration,\n  RecipeProcessResponse: ResolverTypeWrapper<RecipeProcessResponse>,\n  RecipeResourceCreateParams: RecipeResourceCreateParams,\n  RecipeResourceResponse: ResolverTypeWrapper<RecipeResourceResponse>,\n  ResourceSpecificationCreateParams: ResourceSpecificationCreateParams,\n  ResourceSpecificationResponse: ResolverTypeWrapper<ResourceSpecificationResponse>,\n  SatisfactionCreateParams: SatisfactionCreateParams,\n  SatisfactionResponse: ResolverTypeWrapper<SatisfactionResponse>,\n  ScenarioCreateParams: ScenarioCreateParams,\n  ScenarioResponse: ResolverTypeWrapper<ScenarioResponse>,\n  ScenarioDefinitionCreateParams: ScenarioDefinitionCreateParams,\n  ScenarioDefinitionResponse: ResolverTypeWrapper<ScenarioDefinitionResponse>,\n  SettlementCreateParams: SettlementCreateParams,\n  SettlementResponse: ResolverTypeWrapper<SettlementResponse>,\n  SpatialThingCreateParams: SpatialThingCreateParams,\n  SpatialThingResponse: ResolverTypeWrapper<SpatialThingResponse>,\n  UnitCreateParams: UnitCreateParams,\n  UnitResponse: ResolverTypeWrapper<UnitResponse>,\n  CharacterInput: CharacterInput,\n  ProfileInput: ProfileInput,\n  ValueCalculationCreateParams: ValueCalculationCreateParams,\n  ValueCalculationResponse: ResolverTypeWrapper<ValueCalculationResponse>,\n  LoginResponse: ResolverTypeWrapper<LoginResponse>,\n  ProposedIntentResponse: ResolverTypeWrapper<ProposedIntentResponse>,\n  ProposedToResponse: ResolverTypeWrapper<ProposedToResponse>,\n  AgentRelationshipUpdateParams: AgentRelationshipUpdateParams,\n  AgentRelationshipRoleUpdateParams: AgentRelationshipRoleUpdateParams,\n  AgreementUpdateParams: AgreementUpdateParams,\n  AppreciationUpdateParams: AppreciationUpdateParams,\n  ClaimUpdateParams: ClaimUpdateParams,\n  CommitmentUpdateParams: CommitmentUpdateParams,\n  EconomicEventUpdateParams: EconomicEventUpdateParams,\n  EconomicResourceUpdateParams: EconomicResourceUpdateParams,\n  EconomicResourceResponse: ResolverTypeWrapper<EconomicResourceResponse>,\n  FulfillmentUpdateParams: FulfillmentUpdateParams,\n  IntentUpdateParams: IntentUpdateParams,\n  AgentUpdateParams: AgentUpdateParams,\n  PlanUpdateParams: PlanUpdateParams,\n  ProcessUpdateParams: ProcessUpdateParams,\n  ProcessSpecificationUpdateParams: ProcessSpecificationUpdateParams,\n  ProductBatchUpdateParams: ProductBatchUpdateParams,\n  ProposalUpdateParams: ProposalUpdateParams,\n  RecipeExchangeUpdateParams: RecipeExchangeUpdateParams,\n  RecipeFlowUpdateParams: RecipeFlowUpdateParams,\n  RecipeProcessUpdateParams: RecipeProcessUpdateParams,\n  RecipeResourceUpdateParams: RecipeResourceUpdateParams,\n  ResourceSpecificationUpdateParams: ResourceSpecificationUpdateParams,\n  SatisfactionUpdateParams: SatisfactionUpdateParams,\n  ScenarioUpdateParams: ScenarioUpdateParams,\n  ScenarioDefinitionUpdateParams: ScenarioDefinitionUpdateParams,\n  SettlementUpdateParams: SettlementUpdateParams,\n  SpatialThingUpdateParams: SpatialThingUpdateParams,\n  UnitUpdateParams: UnitUpdateParams,\n  ValueCalculationUpdateParams: ValueCalculationUpdateParams,\n  RootSubscriptionType: ResolverTypeWrapper<{}>,\n};\n\n/** Mapping between all available schema types and the resolvers parents */\nexport type ResolversParentTypes = {\n  RootQueryType: {},\n  ID: Scalars['ID'],\n  Action: Action,\n  String: Scalars['String'],\n  ActivityFilters: ActivityFilters,\n  Activity: Omit<Activity, 'object' | 'subject'> & { object?: Maybe<ResolversParentTypes['AnyContext']>, subject?: Maybe<ResolversParentTypes['AnyCharacter']> },\n  Paginate: Paginate,\n  Cursor: Scalars['Cursor'],\n  Int: Scalars['Int'],\n  Replied: Replied,\n  Post: Post,\n  PostContent: PostContent,\n  AnyContext: ResolversParentTypes['Activity'] | ResolversParentTypes['Category'] | ResolversParentTypes['EconomicEvent'] | ResolversParentTypes['Follow'] | ResolversParentTypes['Intent'] | ResolversParentTypes['Post'] | ResolversParentTypes['Process'] | ResolversParentTypes['SpatialThing'] | ResolversParentTypes['Tag'] | ResolversParentTypes['User'],\n  Category: Omit<Category, 'caretaker'> & { caretaker?: Maybe<ResolversParentTypes['AnyContext']> },\n  Json: Scalars['Json'],\n  CategoriesPage: CategoriesPage,\n  PageInfo: PageInfo,\n  Boolean: Scalars['Boolean'],\n  EconomicEvent: Omit<EconomicEvent, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversParentTypes['AnyContext']>>>, trace?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>> },\n  URI: Scalars['URI'],\n  Appreciation: Appreciation,\n  SpatialThing: Omit<SpatialThing, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversParentTypes['AnyContext']> },\n  Float: Scalars['Float'],\n  ValueCalculation: Omit<ValueCalculation, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  AccountingScope: ResolversParentTypes['Category'] | ResolversParentTypes['Organization'] | ResolversParentTypes['Person'] | ResolversParentTypes['Tag'],\n  Organization: Omit<Organization, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  AgentType: AgentType,\n  agentCommitmentSearchParams: AgentCommitmentSearchParams,\n  DateTime: Scalars['DateTime'],\n  Commitment: Omit<Commitment, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  Agreement: Agreement,\n  Agent: Agent,\n  agentEventSearchParams: AgentEventSearchParams,\n  IntentSearchParams: IntentSearchParams,\n  GeolocationFilters: GeolocationFilters,\n  GeolocationDistance: GeolocationDistance,\n  GeolocationPoint: GeolocationPoint,\n  Intent: Omit<Intent, 'inScopeOf' | 'tags'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, tags?: Maybe<Array<Maybe<ResolversParentTypes['AnyContext']>>> },\n  Measure: Measure,\n  Unit: Omit<Unit, 'inScopeOf'> & { inScopeOf?: Maybe<ResolversParentTypes['AnyContext']> },\n  Process: Omit<Process, 'inScopeOf' | 'tags' | 'trace' | 'track'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, tags?: Maybe<Array<ResolversParentTypes['AnyContext']>>, trace?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>> },\n  ProcessSpecification: ProcessSpecification,\n  Scenario: Omit<Scenario, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  ScenarioDefinition: ScenarioDefinition,\n  Duration: Duration,\n  TimeUnit: TimeUnit,\n  Plan: Omit<Plan, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  planProcessSearchParams: PlanProcessSearchParams,\n  ProductionFlowItem: ResolversParentTypes['EconomicEvent'] | ResolversParentTypes['EconomicResource'] | ResolversParentTypes['Process'],\n  EconomicResource: Omit<EconomicResource, 'tags' | 'trace' | 'track'> & { tags?: Maybe<Array<ResolversParentTypes['AnyContext']>>, trace?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>>, track?: Maybe<Array<ResolversParentTypes['ProductionFlowItem']>> },\n  ResourceSpecification: Omit<ResourceSpecification, 'tags'> & { tags?: Maybe<Array<ResolversParentTypes['AnyContext']>> },\n  ProductBatch: ProductBatch,\n  ProposedIntent: ProposedIntent,\n  Proposal: Omit<Proposal, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  ProposedTo: ProposedTo,\n  Satisfaction: Omit<Satisfaction, 'satisfiedBy'> & { satisfiedBy: ResolversParentTypes['EventOrCommitment'] },\n  EventOrCommitment: ResolversParentTypes['Commitment'] | ResolversParentTypes['EconomicEvent'],\n  agentResourceSearchParams: AgentResourceSearchParams,\n  agentPlanSearchParams: AgentPlanSearchParams,\n  agentProcessSearchParams: AgentProcessSearchParams,\n  AgentRelationship: Omit<AgentRelationship, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  AgentRelationshipRole: AgentRelationshipRole,\n  Fulfillment: Fulfillment,\n  Person: Person,\n  Tag: Omit<Tag, 'context' | 'tagged'> & { context?: Maybe<ResolversParentTypes['AnyContext']>, tagged?: Maybe<Array<Maybe<ResolversParentTypes['AnyContext']>>> },\n  Follow: Follow,\n  Character: Character,\n  Profile: Profile,\n  User: User,\n  AnyCharacter: ResolversParentTypes['Category'] | ResolversParentTypes['SpatialThing'] | ResolversParentTypes['User'],\n  Verb: Verb,\n  Claim: Omit<Claim, 'inScopeOf'> & { inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>> },\n  EconomicEventPage: EconomicEventPage,\n  EconomicResourcePage: EconomicResourcePage,\n  FeedFilters: FeedFilters,\n  IntentsPage: IntentsPage,\n  Me: Me,\n  MeasuresPage: MeasuresPage,\n  ObservablePhenomenon: ObservablePhenomenon,\n  ObservableProperty: ObservableProperty,\n  ObservablePhenomenonPage: ObservablePhenomenonPage,\n  ObservablePropertyPage: ObservablePropertyPage,\n  Observation: Omit<Observation, 'hasFeatureOfInterest' | 'hasResult' | 'inScopeOf' | 'madeBySensor'> & { hasFeatureOfInterest: ResolversParentTypes['ObservableObject'], hasResult: ResolversParentTypes['ObservableResult'], inScopeOf?: Maybe<Array<ResolversParentTypes['AccountingScope']>>, madeBySensor: ResolversParentTypes['Observer'] },\n  ObservableObject: ResolversParentTypes['EconomicResource'] | ResolversParentTypes['Organization'] | ResolversParentTypes['Person'],\n  ObservableResult: ResolversParentTypes['Measure'] | ResolversParentTypes['ObservablePhenomenon'],\n  Observer: ResolversParentTypes['EconomicResource'] | ResolversParentTypes['Organization'] | ResolversParentTypes['Person'] | ResolversParentTypes['ResourceSpecification'],\n  ObservationPage: ObservationPage,\n  AgentsPage: AgentsPage,\n  PostFilters: PostFilters,\n  ProcessPage: ProcessPage,\n  ProposalsPage: ProposalsPage,\n  RecipeExchange: RecipeExchange,\n  RecipeFlow: RecipeFlow,\n  RecipeResource: RecipeResource,\n  RecipeProcess: RecipeProcess,\n  ResourceSpecificationPage: ResourceSpecificationPage,\n  Settlement: Settlement,\n  SpatialThingsPage: SpatialThingsPage,\n  UnitsPage: UnitsPage,\n  CharacterFilters: CharacterFilters,\n  ValueCalculationPage: ValueCalculationPage,\n  RootMutationType: {},\n  AgentRelationshipCreateParams: AgentRelationshipCreateParams,\n  AgentRelationshipResponse: AgentRelationshipResponse,\n  AgentRelationshipRoleCreateParams: AgentRelationshipRoleCreateParams,\n  AgentRelationshipRoleResponse: AgentRelationshipRoleResponse,\n  AgreementCreateParams: AgreementCreateParams,\n  AgreementResponse: AgreementResponse,\n  AppreciationCreateParams: AppreciationCreateParams,\n  AppreciationResponse: AppreciationResponse,\n  CategoryInput: CategoryInput,\n  ClaimCreateParams: ClaimCreateParams,\n  IMeasure: IMeasure,\n  ClaimResponse: ClaimResponse,\n  CommitmentCreateParams: CommitmentCreateParams,\n  CommitmentResponse: CommitmentResponse,\n  EconomicEventCreateParams: EconomicEventCreateParams,\n  EconomicResourceCreateParams: EconomicResourceCreateParams,\n  EconomicEventResponse: EconomicEventResponse,\n  FulfillmentCreateParams: FulfillmentCreateParams,\n  FulfillmentResponse: FulfillmentResponse,\n  IntentCreateParams: IntentCreateParams,\n  IntentResponse: IntentResponse,\n  ObservablePhenomenonInputParams: ObservablePhenomenonInputParams,\n  ObservablePropertyInputParams: ObservablePropertyInputParams,\n  ObservationInputParams: ObservationInputParams,\n  AgentCreateParams: AgentCreateParams,\n  OrganizationResponse: OrganizationResponse,\n  PersonResponse: PersonResponse,\n  PlanCreateParams: PlanCreateParams,\n  PlanResponse: PlanResponse,\n  PostContentInput: PostContentInput,\n  ProcessCreateParams: ProcessCreateParams,\n  ProcessResponse: ProcessResponse,\n  ProcessSpecificationCreateParams: ProcessSpecificationCreateParams,\n  ProcessSpecificationResponse: ProcessSpecificationResponse,\n  ProductBatchCreateParams: ProductBatchCreateParams,\n  ProductBatchResponse: ProductBatchResponse,\n  ProposalCreateParams: ProposalCreateParams,\n  ProposalResponse: ProposalResponse,\n  RecipeExchangeCreateParams: RecipeExchangeCreateParams,\n  RecipeExchangeResponse: RecipeExchangeResponse,\n  RecipeFlowCreateParams: RecipeFlowCreateParams,\n  RecipeFlowResponse: RecipeFlowResponse,\n  RecipeProcessCreateParams: RecipeProcessCreateParams,\n  IDuration: IDuration,\n  RecipeProcessResponse: RecipeProcessResponse,\n  RecipeResourceCreateParams: RecipeResourceCreateParams,\n  RecipeResourceResponse: RecipeResourceResponse,\n  ResourceSpecificationCreateParams: ResourceSpecificationCreateParams,\n  ResourceSpecificationResponse: ResourceSpecificationResponse,\n  SatisfactionCreateParams: SatisfactionCreateParams,\n  SatisfactionResponse: SatisfactionResponse,\n  ScenarioCreateParams: ScenarioCreateParams,\n  ScenarioResponse: ScenarioResponse,\n  ScenarioDefinitionCreateParams: ScenarioDefinitionCreateParams,\n  ScenarioDefinitionResponse: ScenarioDefinitionResponse,\n  SettlementCreateParams: SettlementCreateParams,\n  SettlementResponse: SettlementResponse,\n  SpatialThingCreateParams: SpatialThingCreateParams,\n  SpatialThingResponse: SpatialThingResponse,\n  UnitCreateParams: UnitCreateParams,\n  UnitResponse: UnitResponse,\n  CharacterInput: CharacterInput,\n  ProfileInput: ProfileInput,\n  ValueCalculationCreateParams: ValueCalculationCreateParams,\n  ValueCalculationResponse: ValueCalculationResponse,\n  LoginResponse: LoginResponse,\n  ProposedIntentResponse: ProposedIntentResponse,\n  ProposedToResponse: ProposedToResponse,\n  AgentRelationshipUpdateParams: AgentRelationshipUpdateParams,\n  AgentRelationshipRoleUpdateParams: AgentRelationshipRoleUpdateParams,\n  AgreementUpdateParams: AgreementUpdateParams,\n  AppreciationUpdateParams: AppreciationUpdateParams,\n  ClaimUpdateParams: ClaimUpdateParams,\n  CommitmentUpdateParams: CommitmentUpdateParams,\n  EconomicEventUpdateParams: EconomicEventUpdateParams,\n  EconomicResourceUpdateParams: EconomicResourceUpdateParams,\n  EconomicResourceResponse: EconomicResourceResponse,\n  FulfillmentUpdateParams: FulfillmentUpdateParams,\n  IntentUpdateParams: IntentUpdateParams,\n  AgentUpdateParams: AgentUpdateParams,\n  PlanUpdateParams: PlanUpdateParams,\n  ProcessUpdateParams: ProcessUpdateParams,\n  ProcessSpecificationUpdateParams: ProcessSpecificationUpdateParams,\n  ProductBatchUpdateParams: ProductBatchUpdateParams,\n  ProposalUpdateParams: ProposalUpdateParams,\n  RecipeExchangeUpdateParams: RecipeExchangeUpdateParams,\n  RecipeFlowUpdateParams: RecipeFlowUpdateParams,\n  RecipeProcessUpdateParams: RecipeProcessUpdateParams,\n  RecipeResourceUpdateParams: RecipeResourceUpdateParams,\n  ResourceSpecificationUpdateParams: ResourceSpecificationUpdateParams,\n  SatisfactionUpdateParams: SatisfactionUpdateParams,\n  ScenarioUpdateParams: ScenarioUpdateParams,\n  ScenarioDefinitionUpdateParams: ScenarioDefinitionUpdateParams,\n  SettlementUpdateParams: SettlementUpdateParams,\n  SpatialThingUpdateParams: SpatialThingUpdateParams,\n  UnitUpdateParams: UnitUpdateParams,\n  ValueCalculationUpdateParams: ValueCalculationUpdateParams,\n  RootSubscriptionType: {},\n};\n\nexport type AccountingScopeResolvers<ContextType = any, ParentType extends ResolversParentTypes['AccountingScope'] = ResolversParentTypes['AccountingScope']> = {\n  __resolveType: TypeResolveFn<'Category' | 'Organization' | 'Person' | 'Tag', ParentType, ContextType>\n};\n\nexport type ActionResolvers<ContextType = any, ParentType extends ResolversParentTypes['Action'] = ResolversParentTypes['Action']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inputOutput?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  onhandEffect?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  pairsWith?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceEffect?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n};\n\nexport type ActivityResolvers<ContextType = any, ParentType extends ResolversParentTypes['Activity'] = ResolversParentTypes['Activity']> = {\n  directReplies?: Resolver<Maybe<Array<Maybe<ResolversTypes['Replied']>>>, ParentType, ContextType, ActivityDirectRepliesArgs>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  object?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  objectId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  subject?: Resolver<Maybe<ResolversTypes['AnyCharacter']>, ParentType, ContextType>,\n  subjectId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  verb?: Resolver<Maybe<ResolversTypes['Verb']>, ParentType, ContextType>,\n};\n\nexport type AgentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Agent'] = ResolversParentTypes['Agent']> = {\n  __resolveType: TypeResolveFn<null, ParentType, ContextType>,\n  agentType?: Resolver<Maybe<ResolversTypes['AgentType']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, AgentCommitmentsArgs>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, AgentEconomicEventsArgs>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, AgentIntentsArgs>,\n  inventoriedEconomicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, AgentInventoriedEconomicResourcesArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, AgentPlansArgs>,\n  primaryLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, AgentProcessesArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType>,\n  relationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, AgentRelationshipsArgs>,\n  relationshipsAsObject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, AgentRelationshipsAsObjectArgs>,\n  relationshipsAsSubject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, AgentRelationshipsAsSubjectArgs>,\n  roles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType>,\n};\n\nexport type AgentRelationshipResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationship'] = ResolversParentTypes['AgentRelationship']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  object?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  relationship?: Resolver<ResolversTypes['AgentRelationshipRole'], ParentType, ContextType>,\n  subject?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n};\n\nexport type AgentRelationshipResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationshipResponse'] = ResolversParentTypes['AgentRelationshipResponse']> = {\n  agentRelationship?: Resolver<ResolversTypes['AgentRelationship'], ParentType, ContextType>,\n};\n\nexport type AgentRelationshipRoleResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationshipRole'] = ResolversParentTypes['AgentRelationshipRole']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inverseRoleLabel?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  roleLabel?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n};\n\nexport type AgentRelationshipRoleResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentRelationshipRoleResponse'] = ResolversParentTypes['AgentRelationshipRoleResponse']> = {\n  agentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRole']>, ParentType, ContextType>,\n};\n\nexport type AgentsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgentsPage'] = ResolversParentTypes['AgentsPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Agent']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type AgreementResolvers<ContextType = any, ParentType extends ResolversParentTypes['Agreement'] = ResolversParentTypes['Agreement']> = {\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  involvedAgents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type AgreementResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AgreementResponse'] = ResolversParentTypes['AgreementResponse']> = {\n  agreement?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType>,\n};\n\nexport type AnyCharacterResolvers<ContextType = any, ParentType extends ResolversParentTypes['AnyCharacter'] = ResolversParentTypes['AnyCharacter']> = {\n  __resolveType: TypeResolveFn<'Category' | 'SpatialThing' | 'User', ParentType, ContextType>\n};\n\nexport type AnyContextResolvers<ContextType = any, ParentType extends ResolversParentTypes['AnyContext'] = ResolversParentTypes['AnyContext']> = {\n  __resolveType: TypeResolveFn<'Activity' | 'Category' | 'EconomicEvent' | 'Follow' | 'Intent' | 'Post' | 'Process' | 'SpatialThing' | 'Tag' | 'User', ParentType, ContextType>\n};\n\nexport type AppreciationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Appreciation'] = ResolversParentTypes['Appreciation']> = {\n  appreciationOf?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  appreciationWith?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type AppreciationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['AppreciationResponse'] = ResolversParentTypes['AppreciationResponse']> = {\n  appreciation?: Resolver<Maybe<ResolversTypes['Appreciation']>, ParentType, ContextType>,\n};\n\nexport type CategoriesPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['CategoriesPage'] = ResolversParentTypes['CategoriesPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Category']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type CategoryResolvers<ContextType = any, ParentType extends ResolversParentTypes['Category'] = ResolversParentTypes['Category']> = {\n  caretaker?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  extraInfo?: Resolver<Maybe<ResolversTypes['Json']>, ParentType, ContextType>,\n  facet?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  parentCategory?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType>,\n  parentCategoryId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  prefix?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  subCategories?: Resolver<Maybe<Array<Maybe<ResolversTypes['CategoriesPage']>>>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type CharacterResolvers<ContextType = any, ParentType extends ResolversParentTypes['Character'] = ResolversParentTypes['Character']> = {\n  username?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ClaimResolvers<ContextType = any, ParentType extends ResolversParentTypes['Claim'] = ResolversParentTypes['Claim']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  calculatedUsing?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  receiver?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  triggeredBy?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n};\n\nexport type ClaimResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ClaimResponse'] = ResolversParentTypes['ClaimResponse']> = {\n  claim?: Resolver<Maybe<ResolversTypes['Claim']>, ParentType, ContextType>,\n};\n\nexport type CommitmentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Commitment'] = ResolversParentTypes['Commitment']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  clauseOf?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  fulfilledBy?: Resolver<Maybe<Array<ResolversTypes['Fulfillment']>>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasPointInTime?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  independentDemandOf?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType>,\n  inputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  involvedAgents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  receiver?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfies?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType>,\n};\n\nexport type CommitmentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['CommitmentResponse'] = ResolversParentTypes['CommitmentResponse']> = {\n  commitment?: Resolver<Maybe<ResolversTypes['Commitment']>, ParentType, ContextType>,\n};\n\nexport interface CursorScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Cursor'], any> {\n  name: 'Cursor'\n}\n\nexport interface DateTimeScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['DateTime'], any> {\n  name: 'DateTime'\n}\n\nexport type DurationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Duration'] = ResolversParentTypes['Duration']> = {\n  numericDuration?: Resolver<ResolversTypes['Float'], ParentType, ContextType>,\n  unitType?: Resolver<ResolversTypes['TimeUnit'], ParentType, ContextType>,\n};\n\nexport type EconomicEventResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicEvent'] = ResolversParentTypes['EconomicEvent']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  appreciatedBy?: Resolver<Maybe<Array<ResolversTypes['Appreciation']>>, ParentType, ContextType>,\n  appreciationOf?: Resolver<Maybe<Array<ResolversTypes['Appreciation']>>, ParentType, ContextType>,\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  calculatedUsing?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  fulfills?: Resolver<Maybe<Array<ResolversTypes['Fulfillment']>>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasPointInTime?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  inputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  realizationOf?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType>,\n  receiver?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfies?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, ParentType, ContextType>,\n  toResourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  trace?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicEventTraceArgs>,\n  track?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicEventTrackArgs>,\n  triggeredBy?: Resolver<Maybe<ResolversTypes['EconomicEvent']>, ParentType, ContextType>,\n};\n\nexport type EconomicEventPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicEventPage'] = ResolversParentTypes['EconomicEventPage']> = {\n  edges?: Resolver<Array<ResolversTypes['EconomicEvent']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type EconomicEventResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicEventResponse'] = ResolversParentTypes['EconomicEventResponse']> = {\n  economicEvent?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  economicResource?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  reciprocalEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType>,\n};\n\nexport type EconomicResourceResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicResource'] = ResolversParentTypes['EconomicResource']> = {\n  accountingQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  classifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  conformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  containedIn?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  contains?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType>,\n  currentLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  lot?: Resolver<Maybe<ResolversTypes['ProductBatch']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  onhandQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  primaryAccountable?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  stage?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n  state?: Resolver<Maybe<ResolversTypes['Action']>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<ResolversTypes['AnyContext']>>, ParentType, ContextType>,\n  trace?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicResourceTraceArgs>,\n  track?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, EconomicResourceTrackArgs>,\n  trackingIdentifier?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  unitOfEffort?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n};\n\nexport type EconomicResourcePageResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicResourcePage'] = ResolversParentTypes['EconomicResourcePage']> = {\n  edges?: Resolver<Array<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type EconomicResourceResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['EconomicResourceResponse'] = ResolversParentTypes['EconomicResourceResponse']> = {\n  economicResource?: Resolver<ResolversTypes['EconomicResource'], ParentType, ContextType>,\n};\n\nexport type EventOrCommitmentResolvers<ContextType = any, ParentType extends ResolversParentTypes['EventOrCommitment'] = ResolversParentTypes['EventOrCommitment']> = {\n  __resolveType: TypeResolveFn<'Commitment' | 'EconomicEvent', ParentType, ContextType>\n};\n\nexport type FollowResolvers<ContextType = any, ParentType extends ResolversParentTypes['Follow'] = ResolversParentTypes['Follow']> = {\n  followedCharacter?: Resolver<Maybe<ResolversTypes['Character']>, ParentType, ContextType>,\n  followedProfile?: Resolver<Maybe<ResolversTypes['Profile']>, ParentType, ContextType>,\n  followerCharacter?: Resolver<Maybe<ResolversTypes['Character']>, ParentType, ContextType>,\n  followerProfile?: Resolver<Maybe<ResolversTypes['Profile']>, ParentType, ContextType>,\n};\n\nexport type FulfillmentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Fulfillment'] = ResolversParentTypes['Fulfillment']> = {\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  fulfilledBy?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  fulfills?: Resolver<ResolversTypes['Commitment'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n};\n\nexport type FulfillmentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['FulfillmentResponse'] = ResolversParentTypes['FulfillmentResponse']> = {\n  fulfillment?: Resolver<Maybe<ResolversTypes['Fulfillment']>, ParentType, ContextType>,\n};\n\nexport type IntentResolvers<ContextType = any, ParentType extends ResolversParentTypes['Intent'] = ResolversParentTypes['Intent']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  agreedIn?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  availableQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasPointInTime?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  inputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputOf?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  provider?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  publishedIn?: Resolver<Maybe<Array<ResolversTypes['ProposedIntent']>>, ParentType, ContextType>,\n  receiver?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  resourceInventoriedAs?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfiedBy?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, ParentType, ContextType>,\n};\n\nexport type IntentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['IntentResponse'] = ResolversParentTypes['IntentResponse']> = {\n  intent?: Resolver<ResolversTypes['Intent'], ParentType, ContextType>,\n};\n\nexport type IntentsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['IntentsPage'] = ResolversParentTypes['IntentsPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Intent']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport interface JsonScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Json'], any> {\n  name: 'Json'\n}\n\nexport type LoginResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['LoginResponse'] = ResolversParentTypes['LoginResponse']> = {\n  currentAccountId?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  currentUser?: Resolver<Maybe<ResolversTypes['User']>, ParentType, ContextType>,\n  currentUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  token?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type MeResolvers<ContextType = any, ParentType extends ResolversParentTypes['Me'] = ResolversParentTypes['Me']> = {\n  accountId?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  flagsForModeration?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeFlagsForModerationArgs>,\n  followed?: Resolver<Maybe<Array<Maybe<ResolversTypes['Follow']>>>, ParentType, ContextType, MeFollowedArgs>,\n  followers?: Resolver<Maybe<Array<Maybe<ResolversTypes['Follow']>>>, ParentType, ContextType, MeFollowersArgs>,\n  likeActivities?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeLikeActivitiesArgs>,\n  user?: Resolver<Maybe<ResolversTypes['User']>, ParentType, ContextType>,\n  userFeed?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeUserFeedArgs>,\n  userNotifications?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, MeUserNotificationsArgs>,\n  users?: Resolver<Maybe<Array<Maybe<ResolversTypes['User']>>>, ParentType, ContextType>,\n};\n\nexport type MeasureResolvers<ContextType = any, ParentType extends ResolversParentTypes['Measure'] = ResolversParentTypes['Measure']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  hasNumericalValue?: Resolver<ResolversTypes['Float'], ParentType, ContextType>,\n  hasUnit?: Resolver<ResolversTypes['Unit'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n};\n\nexport type MeasuresPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['MeasuresPage'] = ResolversParentTypes['MeasuresPage']> = {\n  edges?: Resolver<Maybe<Array<ResolversTypes['Measure']>>, ParentType, ContextType>,\n  pageInfo?: Resolver<Maybe<ResolversTypes['PageInfo']>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport type ObservableObjectResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservableObject'] = ResolversParentTypes['ObservableObject']> = {\n  __resolveType: TypeResolveFn<'EconomicResource' | 'Organization' | 'Person', ParentType, ContextType>\n};\n\nexport type ObservablePhenomenonResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservablePhenomenon'] = ResolversParentTypes['ObservablePhenomenon']> = {\n  choiceOf?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType>,\n  formulaQuantifier?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ObservablePhenomenonPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservablePhenomenonPage'] = ResolversParentTypes['ObservablePhenomenonPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ObservablePropertyResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservableProperty'] = ResolversParentTypes['ObservableProperty']> = {\n  hasChoices?: Resolver<Maybe<Array<ResolversTypes['ObservablePhenomenon']>>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ObservablePropertyPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservablePropertyPage'] = ResolversParentTypes['ObservablePropertyPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ObservableProperty']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ObservableResultResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservableResult'] = ResolversParentTypes['ObservableResult']> = {\n  __resolveType: TypeResolveFn<'Measure' | 'ObservablePhenomenon', ParentType, ContextType>\n};\n\nexport type ObservationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Observation'] = ResolversParentTypes['Observation']> = {\n  atLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  hasFeatureOfInterest?: Resolver<ResolversTypes['ObservableObject'], ParentType, ContextType>,\n  hasResult?: Resolver<ResolversTypes['ObservableResult'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  madeBySensor?: Resolver<ResolversTypes['Observer'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  observedDuring?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n  observedProperty?: Resolver<ResolversTypes['ObservableProperty'], ParentType, ContextType>,\n  provider?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n  resultTime?: Resolver<ResolversTypes['DateTime'], ParentType, ContextType>,\n};\n\nexport type ObservationPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ObservationPage'] = ResolversParentTypes['ObservationPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Observation']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ObserverResolvers<ContextType = any, ParentType extends ResolversParentTypes['Observer'] = ResolversParentTypes['Observer']> = {\n  __resolveType: TypeResolveFn<'EconomicResource' | 'Organization' | 'Person' | 'ResourceSpecification', ParentType, ContextType>\n};\n\nexport type OrganizationResolvers<ContextType = any, ParentType extends ResolversParentTypes['Organization'] = ResolversParentTypes['Organization']> = {\n  agentType?: Resolver<Maybe<ResolversTypes['AgentType']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, OrganizationCommitmentsArgs>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, OrganizationEconomicEventsArgs>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, OrganizationIntentsArgs>,\n  inventoriedEconomicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, OrganizationInventoriedEconomicResourcesArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, OrganizationPlansArgs>,\n  primaryLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, OrganizationProcessesArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType>,\n  relationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, OrganizationRelationshipsArgs>,\n  relationshipsAsObject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, OrganizationRelationshipsAsObjectArgs>,\n  relationshipsAsSubject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, OrganizationRelationshipsAsSubjectArgs>,\n  roles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType>,\n};\n\nexport type OrganizationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['OrganizationResponse'] = ResolversParentTypes['OrganizationResponse']> = {\n  agent?: Resolver<ResolversTypes['Organization'], ParentType, ContextType>,\n};\n\nexport type PageInfoResolvers<ContextType = any, ParentType extends ResolversParentTypes['PageInfo'] = ResolversParentTypes['PageInfo']> = {\n  endCursor?: Resolver<Maybe<Array<ResolversTypes['Cursor']>>, ParentType, ContextType>,\n  hasNextPage?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  hasPreviousPage?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  startCursor?: Resolver<Maybe<Array<ResolversTypes['Cursor']>>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport type PersonResolvers<ContextType = any, ParentType extends ResolversParentTypes['Person'] = ResolversParentTypes['Person']> = {\n  agentType?: Resolver<Maybe<ResolversTypes['AgentType']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, PersonCommitmentsArgs>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, PersonEconomicEventsArgs>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, PersonIntentsArgs>,\n  inventoriedEconomicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, PersonInventoriedEconomicResourcesArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, PersonPlansArgs>,\n  primaryLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, PersonProcessesArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType>,\n  relationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, PersonRelationshipsArgs>,\n  relationshipsAsObject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, PersonRelationshipsAsObjectArgs>,\n  relationshipsAsSubject?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, PersonRelationshipsAsSubjectArgs>,\n  roles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType>,\n};\n\nexport type PersonResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['PersonResponse'] = ResolversParentTypes['PersonResponse']> = {\n  agent?: Resolver<ResolversTypes['Person'], ParentType, ContextType>,\n};\n\nexport type PlanResolvers<ContextType = any, ParentType extends ResolversParentTypes['Plan'] = ResolversParentTypes['Plan']> = {\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  due?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  independentDemands?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, PlanProcessesArgs>,\n  refinementOf?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n};\n\nexport type PlanResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['PlanResponse'] = ResolversParentTypes['PlanResponse']> = {\n  plan?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType>,\n};\n\nexport type PostResolvers<ContextType = any, ParentType extends ResolversParentTypes['Post'] = ResolversParentTypes['Post']> = {\n  activity?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  postContent?: Resolver<Maybe<ResolversTypes['PostContent']>, ParentType, ContextType>,\n};\n\nexport type PostContentResolvers<ContextType = any, ParentType extends ResolversParentTypes['PostContent'] = ResolversParentTypes['PostContent']> = {\n  htmlBody?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  title?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ProcessResolvers<ContextType = any, ParentType extends ResolversParentTypes['Process'] = ResolversParentTypes['Process']> = {\n  basedOn?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n  classifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  committedInputs?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, ProcessCommittedInputsArgs>,\n  committedOutputs?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, ProcessCommittedOutputsArgs>,\n  deletable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  finished?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  inputs?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, ProcessInputsArgs>,\n  intendedInputs?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, ProcessIntendedInputsArgs>,\n  intendedOutputs?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, ProcessIntendedOutputsArgs>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  nestedIn?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n  nextProcesses?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  outputs?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, ProcessOutputsArgs>,\n  plannedWithin?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType>,\n  previousProcesses?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<ResolversTypes['AnyContext']>>, ParentType, ContextType>,\n  trace?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, ProcessTraceArgs>,\n  track?: Resolver<Maybe<Array<ResolversTypes['ProductionFlowItem']>>, ParentType, ContextType, ProcessTrackArgs>,\n  unplannedEconomicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, ProcessUnplannedEconomicEventsArgs>,\n  workingAgents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType>,\n};\n\nexport type ProcessPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessPage'] = ResolversParentTypes['ProcessPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Process']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ProcessResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessResponse'] = ResolversParentTypes['ProcessResponse']> = {\n  process?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType>,\n};\n\nexport type ProcessSpecificationResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessSpecification'] = ResolversParentTypes['ProcessSpecification']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ProcessSpecificationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProcessSpecificationResponse'] = ResolversParentTypes['ProcessSpecificationResponse']> = {\n  processSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n};\n\nexport type ProductBatchResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProductBatch'] = ResolversParentTypes['ProductBatch']> = {\n  batchNumber?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  expiryDate?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  productionDate?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n};\n\nexport type ProductBatchResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProductBatchResponse'] = ResolversParentTypes['ProductBatchResponse']> = {\n  productBatch?: Resolver<ResolversTypes['ProductBatch'], ParentType, ContextType>,\n};\n\nexport type ProductionFlowItemResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProductionFlowItem'] = ResolversParentTypes['ProductionFlowItem']> = {\n  __resolveType: TypeResolveFn<'EconomicEvent' | 'EconomicResource' | 'Process', ParentType, ContextType>\n};\n\nexport type ProfileResolvers<ContextType = any, ParentType extends ResolversParentTypes['Profile'] = ResolversParentTypes['Profile']> = {\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ProposalResolvers<ContextType = any, ParentType extends ResolversParentTypes['Proposal'] = ResolversParentTypes['Proposal']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  created?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  creator?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  eligibleLocation?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  publishedTo?: Resolver<Maybe<Array<ResolversTypes['ProposedTo']>>, ParentType, ContextType>,\n  publishes?: Resolver<Maybe<Array<ResolversTypes['ProposedIntent']>>, ParentType, ContextType>,\n  unitBased?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n};\n\nexport type ProposalResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposalResponse'] = ResolversParentTypes['ProposalResponse']> = {\n  proposal?: Resolver<Maybe<ResolversTypes['Proposal']>, ParentType, ContextType>,\n};\n\nexport type ProposalsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposalsPage'] = ResolversParentTypes['ProposalsPage']> = {\n  edges?: Resolver<Array<ResolversTypes['Proposal']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ProposedIntentResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedIntent'] = ResolversParentTypes['ProposedIntent']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  publishedIn?: Resolver<ResolversTypes['Proposal'], ParentType, ContextType>,\n  publishes?: Resolver<ResolversTypes['Intent'], ParentType, ContextType>,\n  reciprocal?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n};\n\nexport type ProposedIntentResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedIntentResponse'] = ResolversParentTypes['ProposedIntentResponse']> = {\n  proposedIntent?: Resolver<Maybe<ResolversTypes['ProposedIntent']>, ParentType, ContextType>,\n};\n\nexport type ProposedToResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedTo'] = ResolversParentTypes['ProposedTo']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  proposed?: Resolver<ResolversTypes['Proposal'], ParentType, ContextType>,\n  proposedTo?: Resolver<ResolversTypes['Agent'], ParentType, ContextType>,\n};\n\nexport type ProposedToResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ProposedToResponse'] = ResolversParentTypes['ProposedToResponse']> = {\n  proposedTo?: Resolver<Maybe<ResolversTypes['ProposedTo']>, ParentType, ContextType>,\n};\n\nexport type RecipeExchangeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeExchange'] = ResolversParentTypes['RecipeExchange']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type RecipeExchangeResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeExchangeResponse'] = ResolversParentTypes['RecipeExchangeResponse']> = {\n  recipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchange']>, ParentType, ContextType>,\n};\n\nexport type RecipeFlowResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeFlow'] = ResolversParentTypes['RecipeFlow']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  recipeFlowResource?: Resolver<Maybe<ResolversTypes['RecipeResource']>, ParentType, ContextType>,\n  recipeInputOf?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType>,\n  recipeOutputOf?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n};\n\nexport type RecipeFlowResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeFlowResponse'] = ResolversParentTypes['RecipeFlowResponse']> = {\n  recipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlow']>, ParentType, ContextType>,\n};\n\nexport type RecipeProcessResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeProcess'] = ResolversParentTypes['RecipeProcess']> = {\n  hasDuration?: Resolver<Maybe<ResolversTypes['Duration']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  processClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  processConformsTo?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType>,\n};\n\nexport type RecipeProcessResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeProcessResponse'] = ResolversParentTypes['RecipeProcessResponse']> = {\n  recipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType>,\n};\n\nexport type RecipeResourceResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeResource'] = ResolversParentTypes['RecipeResource']> = {\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  substitutable?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>,\n  unitOfEffort?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n  unitOfResource?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n};\n\nexport type RecipeResourceResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['RecipeResourceResponse'] = ResolversParentTypes['RecipeResourceResponse']> = {\n  recipeResource?: Resolver<Maybe<ResolversTypes['RecipeResource']>, ParentType, ContextType>,\n};\n\nexport type RepliedResolvers<ContextType = any, ParentType extends ResolversParentTypes['Replied'] = ResolversParentTypes['Replied']> = {\n  activity?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType>,\n  directReplies?: Resolver<Maybe<Array<Maybe<ResolversTypes['Replied']>>>, ParentType, ContextType, RepliedDirectRepliesArgs>,\n  post?: Resolver<Maybe<ResolversTypes['Post']>, ParentType, ContextType>,\n  postContent?: Resolver<Maybe<ResolversTypes['PostContent']>, ParentType, ContextType>,\n  replyToId?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  threadId?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n};\n\nexport type ResourceSpecificationResolvers<ContextType = any, ParentType extends ResolversParentTypes['ResourceSpecification'] = ResolversParentTypes['ResourceSpecification']> = {\n  conformingResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType>,\n  defaultUnitOfEffort?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n  defaultUnitOfResource?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  image?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  tags?: Resolver<Maybe<Array<ResolversTypes['AnyContext']>>, ParentType, ContextType>,\n};\n\nexport type ResourceSpecificationPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ResourceSpecificationPage'] = ResolversParentTypes['ResourceSpecificationPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ResourceSpecificationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ResourceSpecificationResponse'] = ResolversParentTypes['ResourceSpecificationResponse']> = {\n  resourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n};\n\nexport type RootMutationTypeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RootMutationType'] = ResolversParentTypes['RootMutationType']> = {\n  addTeamMember?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeAddTeamMemberArgs, 'label' | 'usernameOrEmail'>>,\n  boost?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeBoostArgs, 'id'>>,\n  changePassword?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeChangePasswordArgs, 'oldPassword' | 'password' | 'passwordConfirmation'>>,\n  confirmEmail?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeConfirmEmailArgs, 'token'>>,\n  createAgentRelationship?: Resolver<Maybe<ResolversTypes['AgentRelationshipResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateAgentRelationshipArgs, 'relationship'>>,\n  createAgentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRoleResponse']>, ParentType, ContextType, RootMutationTypeCreateAgentRelationshipRoleArgs>,\n  createAgreement?: Resolver<Maybe<ResolversTypes['AgreementResponse']>, ParentType, ContextType, RootMutationTypeCreateAgreementArgs>,\n  createAppreciation?: Resolver<Maybe<ResolversTypes['AppreciationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateAppreciationArgs, 'appreciation'>>,\n  createCategory?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType, RootMutationTypeCreateCategoryArgs>,\n  createClaim?: Resolver<Maybe<ResolversTypes['ClaimResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateClaimArgs, 'claim'>>,\n  createCommitment?: Resolver<Maybe<ResolversTypes['CommitmentResponse']>, ParentType, ContextType, RootMutationTypeCreateCommitmentArgs>,\n  createEconomicEvent?: Resolver<Maybe<ResolversTypes['EconomicEventResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateEconomicEventArgs, 'event'>>,\n  createFulfillment?: Resolver<Maybe<ResolversTypes['FulfillmentResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateFulfillmentArgs, 'fulfillment'>>,\n  createIntent?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeCreateIntentArgs>,\n  createNeed?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeCreateNeedArgs>,\n  createObservablePhenomenon?: Resolver<Maybe<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateObservablePhenomenonArgs, 'observablePhenomenon'>>,\n  createObservableProperty?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateObservablePropertyArgs, 'observableProperty'>>,\n  createObservation?: Resolver<ResolversTypes['Observation'], ParentType, ContextType, RequireFields<RootMutationTypeCreateObservationArgs, 'observation'>>,\n  createOffer?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeCreateOfferArgs>,\n  createOrganization?: Resolver<Maybe<ResolversTypes['OrganizationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateOrganizationArgs, 'organization'>>,\n  createPerson?: Resolver<Maybe<ResolversTypes['PersonResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreatePersonArgs, 'person'>>,\n  createPlan?: Resolver<Maybe<ResolversTypes['PlanResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreatePlanArgs, 'plan'>>,\n  createPost?: Resolver<Maybe<ResolversTypes['Post']>, ParentType, ContextType, RequireFields<RootMutationTypeCreatePostArgs, 'postContent'>>,\n  createProcess?: Resolver<Maybe<ResolversTypes['ProcessResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateProcessArgs, 'process'>>,\n  createProcessSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecificationResponse']>, ParentType, ContextType, RootMutationTypeCreateProcessSpecificationArgs>,\n  createProductBatch?: Resolver<Maybe<ResolversTypes['ProductBatchResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateProductBatchArgs, 'productBatch'>>,\n  createProposal?: Resolver<Maybe<ResolversTypes['ProposalResponse']>, ParentType, ContextType, RootMutationTypeCreateProposalArgs>,\n  createRecipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchangeResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeExchangeArgs>,\n  createRecipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlowResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeFlowArgs>,\n  createRecipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcessResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeProcessArgs>,\n  createRecipeResource?: Resolver<Maybe<ResolversTypes['RecipeResourceResponse']>, ParentType, ContextType, RootMutationTypeCreateRecipeResourceArgs>,\n  createResourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecificationResponse']>, ParentType, ContextType, RootMutationTypeCreateResourceSpecificationArgs>,\n  createSatisfaction?: Resolver<Maybe<ResolversTypes['SatisfactionResponse']>, ParentType, ContextType, RootMutationTypeCreateSatisfactionArgs>,\n  createScenario?: Resolver<Maybe<ResolversTypes['ScenarioResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateScenarioArgs, 'plan'>>,\n  createScenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinitionResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateScenarioDefinitionArgs, 'plan'>>,\n  createSettlement?: Resolver<Maybe<ResolversTypes['SettlementResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateSettlementArgs, 'settlement'>>,\n  createSpatialThing?: Resolver<Maybe<ResolversTypes['SpatialThingResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateSpatialThingArgs, 'spatialThing'>>,\n  createUnit?: Resolver<Maybe<ResolversTypes['UnitResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateUnitArgs, 'unit'>>,\n  createUser?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateUserArgs, 'character' | 'profile'>>,\n  createValueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeCreateValueCalculationArgs, 'valueCalculation'>>,\n  delete?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteArgs, 'contextId'>>,\n  deleteAgentRelationship?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAgentRelationshipArgs, 'id'>>,\n  deleteAgentRelationshipRole?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAgentRelationshipRoleArgs, 'id'>>,\n  deleteAgreement?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAgreementArgs, 'id'>>,\n  deleteAppreciation?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteAppreciationArgs, 'id'>>,\n  deleteClaim?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteClaimArgs, 'id'>>,\n  deleteCommitment?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteCommitmentArgs, 'id'>>,\n  deleteEconomicEvent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteEconomicEventArgs, 'id'>>,\n  deleteEconomicResource?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteEconomicResourceArgs, 'id'>>,\n  deleteFulfillment?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteFulfillmentArgs, 'id'>>,\n  deleteIntent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteIntentArgs, 'id'>>,\n  deleteObservablePhenomenon?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteObservablePhenomenonArgs, 'id'>>,\n  deleteObservableProperty?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteObservablePropertyArgs, 'id'>>,\n  deleteObservation?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteObservationArgs, 'id'>>,\n  deleteOrganization?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteOrganizationArgs, 'id'>>,\n  deletePerson?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeletePersonArgs, 'id'>>,\n  deletePlan?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeletePlanArgs, 'id'>>,\n  deleteProcess?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProcessArgs, 'id'>>,\n  deleteProcessSpecification?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProcessSpecificationArgs, 'id'>>,\n  deleteProductBatch?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProductBatchArgs, 'id'>>,\n  deleteProposal?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProposalArgs, 'id'>>,\n  deleteProposedIntent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProposedIntentArgs, 'id'>>,\n  deleteProposedTo?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteProposedToArgs, 'id'>>,\n  deleteRecipeExchange?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeExchangeArgs, 'id'>>,\n  deleteRecipeFlow?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeFlowArgs, 'id'>>,\n  deleteRecipeProcess?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeProcessArgs, 'id'>>,\n  deleteRecipeResource?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteRecipeResourceArgs, 'id'>>,\n  deleteResourceSpecification?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteResourceSpecificationArgs, 'id'>>,\n  deleteSatisfaction?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteSatisfactionArgs, 'id'>>,\n  deleteScenario?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteScenarioArgs, 'id'>>,\n  deleteScenarioDefinition?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteScenarioDefinitionArgs, 'id'>>,\n  deleteSettlement?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteSettlementArgs, 'id'>>,\n  deleteSpatialThing?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteSpatialThingArgs, 'id'>>,\n  deleteUnit?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteUnitArgs, 'id'>>,\n  deleteValueCalculation?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeDeleteValueCalculationArgs, 'id'>>,\n  flag?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeFlagArgs, 'id'>>,\n  follow?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeFollowArgs, 'id' | 'username'>>,\n  like?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RequireFields<RootMutationTypeLikeArgs, 'id'>>,\n  login?: Resolver<Maybe<ResolversTypes['LoginResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeLoginArgs, 'emailOrUsername' | 'password'>>,\n  makeTag?: Resolver<Maybe<ResolversTypes['Tag']>, ParentType, ContextType, RootMutationTypeMakeTagArgs>,\n  proposeIntent?: Resolver<Maybe<ResolversTypes['ProposedIntentResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeProposeIntentArgs, 'publishedIn' | 'publishes'>>,\n  proposeTo?: Resolver<Maybe<ResolversTypes['ProposedToResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeProposeToArgs, 'proposed' | 'proposedTo'>>,\n  requestConfirmEmail?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeRequestConfirmEmailArgs, 'email'>>,\n  requestResetPassword?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeRequestResetPasswordArgs, 'email'>>,\n  selectUser?: Resolver<Maybe<ResolversTypes['LoginResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeSelectUserArgs, 'username'>>,\n  signup?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType, RequireFields<RootMutationTypeSignupArgs, 'email' | 'password'>>,\n  tag?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType, RequireFields<RootMutationTypeTagArgs, 'tags' | 'thing'>>,\n  updateAgentRelationship?: Resolver<Maybe<ResolversTypes['AgentRelationshipResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateAgentRelationshipArgs, 'relationship'>>,\n  updateAgentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRoleResponse']>, ParentType, ContextType, RootMutationTypeUpdateAgentRelationshipRoleArgs>,\n  updateAgreement?: Resolver<Maybe<ResolversTypes['AgreementResponse']>, ParentType, ContextType, RootMutationTypeUpdateAgreementArgs>,\n  updateAppreciation?: Resolver<Maybe<ResolversTypes['AppreciationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateAppreciationArgs, 'appreciation'>>,\n  updateCategory?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType, RootMutationTypeUpdateCategoryArgs>,\n  updateClaim?: Resolver<Maybe<ResolversTypes['ClaimResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateClaimArgs, 'claim'>>,\n  updateCommitment?: Resolver<Maybe<ResolversTypes['CommitmentResponse']>, ParentType, ContextType, RootMutationTypeUpdateCommitmentArgs>,\n  updateEconomicEvent?: Resolver<Maybe<ResolversTypes['EconomicEventResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateEconomicEventArgs, 'event'>>,\n  updateEconomicResource?: Resolver<Maybe<ResolversTypes['EconomicResourceResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateEconomicResourceArgs, 'resource'>>,\n  updateFulfillment?: Resolver<Maybe<ResolversTypes['FulfillmentResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateFulfillmentArgs, 'fulfillment'>>,\n  updateIntent?: Resolver<Maybe<ResolversTypes['IntentResponse']>, ParentType, ContextType, RootMutationTypeUpdateIntentArgs>,\n  updateObservablePhenomenon?: Resolver<Maybe<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateObservablePhenomenonArgs, 'observablePhenomenon'>>,\n  updateObservableProperty?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateObservablePropertyArgs, 'observableProperty'>>,\n  updateObservation?: Resolver<ResolversTypes['Observation'], ParentType, ContextType, RequireFields<RootMutationTypeUpdateObservationArgs, 'observation'>>,\n  updateOrganization?: Resolver<Maybe<ResolversTypes['OrganizationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateOrganizationArgs, 'organization'>>,\n  updatePerson?: Resolver<Maybe<ResolversTypes['PersonResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdatePersonArgs, 'person'>>,\n  updatePlan?: Resolver<Maybe<ResolversTypes['PlanResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdatePlanArgs, 'plan'>>,\n  updateProcess?: Resolver<Maybe<ResolversTypes['ProcessResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateProcessArgs, 'process'>>,\n  updateProcessSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecificationResponse']>, ParentType, ContextType, RootMutationTypeUpdateProcessSpecificationArgs>,\n  updateProductBatch?: Resolver<Maybe<ResolversTypes['ProductBatchResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateProductBatchArgs, 'productBatch'>>,\n  updateProposal?: Resolver<Maybe<ResolversTypes['ProposalResponse']>, ParentType, ContextType, RootMutationTypeUpdateProposalArgs>,\n  updateRecipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchangeResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeExchangeArgs>,\n  updateRecipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlowResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeFlowArgs>,\n  updateRecipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcessResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeProcessArgs>,\n  updateRecipeResource?: Resolver<Maybe<ResolversTypes['RecipeResourceResponse']>, ParentType, ContextType, RootMutationTypeUpdateRecipeResourceArgs>,\n  updateResourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecificationResponse']>, ParentType, ContextType, RootMutationTypeUpdateResourceSpecificationArgs>,\n  updateSatisfaction?: Resolver<Maybe<ResolversTypes['SatisfactionResponse']>, ParentType, ContextType, RootMutationTypeUpdateSatisfactionArgs>,\n  updateScenario?: Resolver<Maybe<ResolversTypes['ScenarioResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateScenarioArgs, 'plan'>>,\n  updateScenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinitionResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateScenarioDefinitionArgs, 'plan'>>,\n  updateSettlement?: Resolver<Maybe<ResolversTypes['SettlementResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateSettlementArgs, 's0ettlement'>>,\n  updateSpatialThing?: Resolver<Maybe<ResolversTypes['SpatialThingResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateSpatialThingArgs, 'spatialThing'>>,\n  updateUnit?: Resolver<Maybe<ResolversTypes['UnitResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateUnitArgs, 'unit'>>,\n  updateUser?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateUserArgs, 'profile'>>,\n  updateValueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculationResponse']>, ParentType, ContextType, RequireFields<RootMutationTypeUpdateValueCalculationArgs, 'valueCalculation'>>,\n};\n\nexport type RootQueryTypeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RootQueryType'] = ResolversParentTypes['RootQueryType']> = {\n  action?: Resolver<Maybe<ResolversTypes['Action']>, ParentType, ContextType, RootQueryTypeActionArgs>,\n  actions?: Resolver<Maybe<Array<ResolversTypes['Action']>>, ParentType, ContextType>,\n  activity?: Resolver<Maybe<ResolversTypes['Activity']>, ParentType, ContextType, RootQueryTypeActivityArgs>,\n  agent?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType, RootQueryTypeAgentArgs>,\n  agentRelationship?: Resolver<Maybe<ResolversTypes['AgentRelationship']>, ParentType, ContextType, RootQueryTypeAgentRelationshipArgs>,\n  agentRelationshipRole?: Resolver<Maybe<ResolversTypes['AgentRelationshipRole']>, ParentType, ContextType, RootQueryTypeAgentRelationshipRoleArgs>,\n  agentRelationshipRoles?: Resolver<Maybe<Array<ResolversTypes['AgentRelationshipRole']>>, ParentType, ContextType, RootQueryTypeAgentRelationshipRolesArgs>,\n  agentRelationships?: Resolver<Maybe<Array<ResolversTypes['AgentRelationship']>>, ParentType, ContextType, RootQueryTypeAgentRelationshipsArgs>,\n  agents?: Resolver<Maybe<Array<ResolversTypes['Agent']>>, ParentType, ContextType, RootQueryTypeAgentsArgs>,\n  agreement?: Resolver<Maybe<ResolversTypes['Agreement']>, ParentType, ContextType, RootQueryTypeAgreementArgs>,\n  agreements?: Resolver<Maybe<Array<ResolversTypes['Agreement']>>, ParentType, ContextType, RootQueryTypeAgreementsArgs>,\n  categories?: Resolver<ResolversTypes['CategoriesPage'], ParentType, ContextType, RootQueryTypeCategoriesArgs>,\n  category?: Resolver<Maybe<ResolversTypes['Category']>, ParentType, ContextType, RootQueryTypeCategoryArgs>,\n  claim?: Resolver<Maybe<ResolversTypes['Claim']>, ParentType, ContextType, RootQueryTypeClaimArgs>,\n  claims?: Resolver<Maybe<Array<ResolversTypes['Claim']>>, ParentType, ContextType, RootQueryTypeClaimsArgs>,\n  commitment?: Resolver<Maybe<ResolversTypes['Commitment']>, ParentType, ContextType, RootQueryTypeCommitmentArgs>,\n  commitments?: Resolver<Maybe<Array<ResolversTypes['Commitment']>>, ParentType, ContextType, RootQueryTypeCommitmentsArgs>,\n  economicEvent?: Resolver<Maybe<ResolversTypes['EconomicEvent']>, ParentType, ContextType, RootQueryTypeEconomicEventArgs>,\n  economicEvents?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, RootQueryTypeEconomicEventsArgs>,\n  economicEventsFiltered?: Resolver<Maybe<Array<ResolversTypes['EconomicEvent']>>, ParentType, ContextType, RootQueryTypeEconomicEventsFilteredArgs>,\n  economicEventsPages?: Resolver<ResolversTypes['EconomicEventPage'], ParentType, ContextType, RootQueryTypeEconomicEventsPagesArgs>,\n  economicResource?: Resolver<Maybe<ResolversTypes['EconomicResource']>, ParentType, ContextType, RootQueryTypeEconomicResourceArgs>,\n  economicResources?: Resolver<Maybe<Array<ResolversTypes['EconomicResource']>>, ParentType, ContextType, RootQueryTypeEconomicResourcesArgs>,\n  economicResourcesFiltered?: Resolver<Maybe<Array<Maybe<ResolversTypes['EconomicResource']>>>, ParentType, ContextType, RootQueryTypeEconomicResourcesFilteredArgs>,\n  economicResourcesPages?: Resolver<ResolversTypes['EconomicResourcePage'], ParentType, ContextType, RootQueryTypeEconomicResourcesPagesArgs>,\n  feed?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, RootQueryTypeFeedArgs>,\n  fulfillment?: Resolver<Maybe<ResolversTypes['Fulfillment']>, ParentType, ContextType, RootQueryTypeFulfillmentArgs>,\n  fulfillments?: Resolver<Maybe<Array<ResolversTypes['Fulfillment']>>, ParentType, ContextType, RootQueryTypeFulfillmentsArgs>,\n  intent?: Resolver<Maybe<ResolversTypes['Intent']>, ParentType, ContextType, RootQueryTypeIntentArgs>,\n  intents?: Resolver<Maybe<Array<ResolversTypes['Intent']>>, ParentType, ContextType, RootQueryTypeIntentsArgs>,\n  intentsPages?: Resolver<ResolversTypes['IntentsPage'], ParentType, ContextType, RootQueryTypeIntentsPagesArgs>,\n  me?: Resolver<Maybe<ResolversTypes['Me']>, ParentType, ContextType>,\n  measure?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType, RootQueryTypeMeasureArgs>,\n  measures?: Resolver<Maybe<Array<ResolversTypes['Measure']>>, ParentType, ContextType, RootQueryTypeMeasuresArgs>,\n  measuresPages?: Resolver<ResolversTypes['MeasuresPage'], ParentType, ContextType, RootQueryTypeMeasuresPagesArgs>,\n  myAgent?: Resolver<Maybe<ResolversTypes['Agent']>, ParentType, ContextType>,\n  needsPages?: Resolver<ResolversTypes['IntentsPage'], ParentType, ContextType, RootQueryTypeNeedsPagesArgs>,\n  observablePhenomenon?: Resolver<Maybe<ResolversTypes['ObservablePhenomenon']>, ParentType, ContextType, RootQueryTypeObservablePhenomenonArgs>,\n  observablePhenomenonPages?: Resolver<ResolversTypes['ObservablePhenomenonPage'], ParentType, ContextType, RootQueryTypeObservablePhenomenonPagesArgs>,\n  observablePhenomenons?: Resolver<Maybe<Array<ResolversTypes['ObservablePhenomenon']>>, ParentType, ContextType, RootQueryTypeObservablePhenomenonsArgs>,\n  observableProperties?: Resolver<Maybe<Array<ResolversTypes['ObservableProperty']>>, ParentType, ContextType, RootQueryTypeObservablePropertiesArgs>,\n  observablePropertiesPages?: Resolver<ResolversTypes['ObservablePropertyPage'], ParentType, ContextType, RootQueryTypeObservablePropertiesPagesArgs>,\n  observableProperty?: Resolver<Maybe<ResolversTypes['ObservableProperty']>, ParentType, ContextType, RootQueryTypeObservablePropertyArgs>,\n  observation?: Resolver<Maybe<ResolversTypes['Observation']>, ParentType, ContextType, RootQueryTypeObservationArgs>,\n  observations?: Resolver<Maybe<Array<ResolversTypes['Observation']>>, ParentType, ContextType, RootQueryTypeObservationsArgs>,\n  observationsPages?: Resolver<ResolversTypes['ObservationPage'], ParentType, ContextType, RootQueryTypeObservationsPagesArgs>,\n  offersPages?: Resolver<ResolversTypes['IntentsPage'], ParentType, ContextType, RootQueryTypeOffersPagesArgs>,\n  organization?: Resolver<Maybe<ResolversTypes['Organization']>, ParentType, ContextType, RootQueryTypeOrganizationArgs>,\n  organizations?: Resolver<Maybe<Array<ResolversTypes['Organization']>>, ParentType, ContextType, RootQueryTypeOrganizationsArgs>,\n  organizationsPages?: Resolver<ResolversTypes['AgentsPage'], ParentType, ContextType, RootQueryTypeOrganizationsPagesArgs>,\n  people?: Resolver<Maybe<Array<ResolversTypes['Person']>>, ParentType, ContextType, RootQueryTypePeopleArgs>,\n  peoplePages?: Resolver<ResolversTypes['AgentsPage'], ParentType, ContextType, RootQueryTypePeoplePagesArgs>,\n  person?: Resolver<Maybe<ResolversTypes['Person']>, ParentType, ContextType, RootQueryTypePersonArgs>,\n  plan?: Resolver<Maybe<ResolversTypes['Plan']>, ParentType, ContextType, RootQueryTypePlanArgs>,\n  plans?: Resolver<Maybe<Array<ResolversTypes['Plan']>>, ParentType, ContextType, RootQueryTypePlansArgs>,\n  post?: Resolver<Maybe<ResolversTypes['Post']>, ParentType, ContextType, RootQueryTypePostArgs>,\n  posts?: Resolver<Maybe<Array<Maybe<ResolversTypes['Post']>>>, ParentType, ContextType>,\n  process?: Resolver<Maybe<ResolversTypes['Process']>, ParentType, ContextType, RootQueryTypeProcessArgs>,\n  processSpecification?: Resolver<Maybe<ResolversTypes['ProcessSpecification']>, ParentType, ContextType, RootQueryTypeProcessSpecificationArgs>,\n  processSpecifications?: Resolver<Maybe<Array<ResolversTypes['ProcessSpecification']>>, ParentType, ContextType, RootQueryTypeProcessSpecificationsArgs>,\n  processes?: Resolver<Maybe<Array<ResolversTypes['Process']>>, ParentType, ContextType, RootQueryTypeProcessesArgs>,\n  processesPages?: Resolver<ResolversTypes['ProcessPage'], ParentType, ContextType, RootQueryTypeProcessesPagesArgs>,\n  productBatch?: Resolver<Maybe<ResolversTypes['ProductBatch']>, ParentType, ContextType, RootQueryTypeProductBatchArgs>,\n  productBatches?: Resolver<Maybe<Array<ResolversTypes['ProductBatch']>>, ParentType, ContextType, RootQueryTypeProductBatchesArgs>,\n  proposal?: Resolver<Maybe<ResolversTypes['Proposal']>, ParentType, ContextType, RootQueryTypeProposalArgs>,\n  proposals?: Resolver<Maybe<Array<ResolversTypes['Proposal']>>, ParentType, ContextType, RootQueryTypeProposalsArgs>,\n  proposalsFiltered?: Resolver<Maybe<Array<Maybe<ResolversTypes['Proposal']>>>, ParentType, ContextType, RootQueryTypeProposalsFilteredArgs>,\n  proposalsPages?: Resolver<ResolversTypes['ProposalsPage'], ParentType, ContextType, RootQueryTypeProposalsPagesArgs>,\n  recipeExchange?: Resolver<Maybe<ResolversTypes['RecipeExchange']>, ParentType, ContextType, RootQueryTypeRecipeExchangeArgs>,\n  recipeExchanges?: Resolver<Maybe<Array<ResolversTypes['RecipeExchange']>>, ParentType, ContextType, RootQueryTypeRecipeExchangesArgs>,\n  recipeFlow?: Resolver<Maybe<ResolversTypes['RecipeFlow']>, ParentType, ContextType, RootQueryTypeRecipeFlowArgs>,\n  recipeFlows?: Resolver<Maybe<Array<ResolversTypes['RecipeFlow']>>, ParentType, ContextType, RootQueryTypeRecipeFlowsArgs>,\n  recipeProcess?: Resolver<Maybe<ResolversTypes['RecipeProcess']>, ParentType, ContextType, RootQueryTypeRecipeProcessArgs>,\n  recipeProcesses?: Resolver<Maybe<Array<ResolversTypes['RecipeProcess']>>, ParentType, ContextType, RootQueryTypeRecipeProcessesArgs>,\n  recipeResource?: Resolver<Maybe<ResolversTypes['RecipeResource']>, ParentType, ContextType, RootQueryTypeRecipeResourceArgs>,\n  recipeResources?: Resolver<Maybe<Array<ResolversTypes['RecipeResource']>>, ParentType, ContextType, RootQueryTypeRecipeResourcesArgs>,\n  resourceSpecification?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType, RootQueryTypeResourceSpecificationArgs>,\n  resourceSpecifications?: Resolver<Maybe<Array<ResolversTypes['ResourceSpecification']>>, ParentType, ContextType, RootQueryTypeResourceSpecificationsArgs>,\n  resourceSpecificationsPages?: Resolver<ResolversTypes['ResourceSpecificationPage'], ParentType, ContextType, RootQueryTypeResourceSpecificationsPagesArgs>,\n  satisfaction?: Resolver<Maybe<ResolversTypes['Satisfaction']>, ParentType, ContextType, RootQueryTypeSatisfactionArgs>,\n  satisfactions?: Resolver<Maybe<Array<ResolversTypes['Satisfaction']>>, ParentType, ContextType, RootQueryTypeSatisfactionsArgs>,\n  scenario?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType, RootQueryTypeScenarioArgs>,\n  scenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinition']>, ParentType, ContextType, RootQueryTypeScenarioDefinitionArgs>,\n  scenarioDefinitions?: Resolver<Maybe<Array<ResolversTypes['ScenarioDefinition']>>, ParentType, ContextType, RootQueryTypeScenarioDefinitionsArgs>,\n  scenarios?: Resolver<Maybe<Array<ResolversTypes['Scenario']>>, ParentType, ContextType, RootQueryTypeScenariosArgs>,\n  settlement?: Resolver<Maybe<ResolversTypes['Settlement']>, ParentType, ContextType, RootQueryTypeSettlementArgs>,\n  settlements?: Resolver<Maybe<Array<ResolversTypes['Settlement']>>, ParentType, ContextType, RootQueryTypeSettlementsArgs>,\n  spatialThing?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType, RootQueryTypeSpatialThingArgs>,\n  spatialThings?: Resolver<Maybe<Array<ResolversTypes['SpatialThing']>>, ParentType, ContextType, RootQueryTypeSpatialThingsArgs>,\n  spatialThingsPages?: Resolver<ResolversTypes['SpatialThingsPage'], ParentType, ContextType, RootQueryTypeSpatialThingsPagesArgs>,\n  tag?: Resolver<Maybe<ResolversTypes['Tag']>, ParentType, ContextType, RootQueryTypeTagArgs>,\n  unit?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType, RootQueryTypeUnitArgs>,\n  units?: Resolver<Maybe<Array<ResolversTypes['Unit']>>, ParentType, ContextType, RootQueryTypeUnitsArgs>,\n  unitsPages?: Resolver<ResolversTypes['UnitsPage'], ParentType, ContextType, RootQueryTypeUnitsPagesArgs>,\n  user?: Resolver<Maybe<ResolversTypes['User']>, ParentType, ContextType, RootQueryTypeUserArgs>,\n  valueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType, RootQueryTypeValueCalculationArgs>,\n  valueCalculationsPages?: Resolver<ResolversTypes['ValueCalculationPage'], ParentType, ContextType, RootQueryTypeValueCalculationsPagesArgs>,\n};\n\nexport type RootSubscriptionTypeResolvers<ContextType = any, ParentType extends ResolversParentTypes['RootSubscriptionType'] = ResolversParentTypes['RootSubscriptionType']> = {\n  intentCreated?: SubscriptionResolver<Maybe<ResolversTypes['Intent']>, \"intentCreated\", ParentType, ContextType, RootSubscriptionTypeIntentCreatedArgs>,\n};\n\nexport type SatisfactionResolvers<ContextType = any, ParentType extends ResolversParentTypes['Satisfaction'] = ResolversParentTypes['Satisfaction']> = {\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  satisfiedBy?: Resolver<ResolversTypes['EventOrCommitment'], ParentType, ContextType>,\n  satisfies?: Resolver<ResolversTypes['Intent'], ParentType, ContextType>,\n};\n\nexport type SatisfactionResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['SatisfactionResponse'] = ResolversParentTypes['SatisfactionResponse']> = {\n  satisfaction?: Resolver<Maybe<ResolversTypes['Satisfaction']>, ParentType, ContextType>,\n};\n\nexport type ScenarioResolvers<ContextType = any, ParentType extends ResolversParentTypes['Scenario'] = ResolversParentTypes['Scenario']> = {\n  definedAs?: Resolver<Maybe<ResolversTypes['ScenarioDefinition']>, ParentType, ContextType>,\n  hasBeginning?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  hasEnd?: Resolver<Maybe<ResolversTypes['DateTime']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  refinementOf?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n};\n\nexport type ScenarioDefinitionResolvers<ContextType = any, ParentType extends ResolversParentTypes['ScenarioDefinition'] = ResolversParentTypes['ScenarioDefinition']> = {\n  hasDuration?: Resolver<Maybe<ResolversTypes['Duration']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type ScenarioDefinitionResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ScenarioDefinitionResponse'] = ResolversParentTypes['ScenarioDefinitionResponse']> = {\n  scenarioDefinition?: Resolver<Maybe<ResolversTypes['ScenarioDefinition']>, ParentType, ContextType>,\n};\n\nexport type ScenarioResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ScenarioResponse'] = ResolversParentTypes['ScenarioResponse']> = {\n  scenario?: Resolver<Maybe<ResolversTypes['Scenario']>, ParentType, ContextType>,\n};\n\nexport type SettlementResolvers<ContextType = any, ParentType extends ResolversParentTypes['Settlement'] = ResolversParentTypes['Settlement']> = {\n  effortQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceQuantity?: Resolver<Maybe<ResolversTypes['Measure']>, ParentType, ContextType>,\n  settledBy?: Resolver<ResolversTypes['EconomicEvent'], ParentType, ContextType>,\n  settles?: Resolver<ResolversTypes['Claim'], ParentType, ContextType>,\n};\n\nexport type SettlementResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['SettlementResponse'] = ResolversParentTypes['SettlementResponse']> = {\n  settlement?: Resolver<Maybe<ResolversTypes['Settlement']>, ParentType, ContextType>,\n};\n\nexport type SpatialThingResolvers<ContextType = any, ParentType extends ResolversParentTypes['SpatialThing'] = ResolversParentTypes['SpatialThing']> = {\n  alt?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  geom?: Resolver<Maybe<ResolversTypes['Json']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  lat?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  long?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>,\n  mappableAddress?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type SpatialThingResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['SpatialThingResponse'] = ResolversParentTypes['SpatialThingResponse']> = {\n  spatialThing?: Resolver<Maybe<ResolversTypes['SpatialThing']>, ParentType, ContextType>,\n};\n\nexport type SpatialThingsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['SpatialThingsPage'] = ResolversParentTypes['SpatialThingsPage']> = {\n  edges?: Resolver<Maybe<Array<Maybe<ResolversTypes['SpatialThing']>>>, ParentType, ContextType>,\n  pageInfo?: Resolver<Maybe<ResolversTypes['PageInfo']>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport type TagResolvers<ContextType = any, ParentType extends ResolversParentTypes['Tag'] = ResolversParentTypes['Tag']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  context?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  displayUsername?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  facet?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  prefix?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  summary?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  tagged?: Resolver<Maybe<Array<Maybe<ResolversTypes['AnyContext']>>>, ParentType, ContextType>,\n};\n\nexport type UnitResolvers<ContextType = any, ParentType extends ResolversParentTypes['Unit'] = ResolversParentTypes['Unit']> = {\n  canonicalUrl?: Resolver<Maybe<ResolversTypes['URI']>, ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<ResolversTypes['AnyContext']>, ParentType, ContextType>,\n  label?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  symbol?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n};\n\nexport type UnitResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['UnitResponse'] = ResolversParentTypes['UnitResponse']> = {\n  unit?: Resolver<Maybe<ResolversTypes['Unit']>, ParentType, ContextType>,\n};\n\nexport type UnitsPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['UnitsPage'] = ResolversParentTypes['UnitsPage']> = {\n  edges?: Resolver<Maybe<Array<ResolversTypes['Unit']>>, ParentType, ContextType>,\n  pageInfo?: Resolver<Maybe<ResolversTypes['PageInfo']>, ParentType, ContextType>,\n  totalCount?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>,\n};\n\nexport interface UriScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['URI'], any> {\n  name: 'URI'\n}\n\nexport type UserResolvers<ContextType = any, ParentType extends ResolversParentTypes['User'] = ResolversParentTypes['User']> = {\n  boostActivities?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, UserBoostActivitiesArgs>,\n  character?: Resolver<Maybe<ResolversTypes['Character']>, ParentType, ContextType>,\n  id?: Resolver<Maybe<ResolversTypes['ID']>, ParentType, ContextType>,\n  posts?: Resolver<Maybe<Array<Maybe<ResolversTypes['Post']>>>, ParentType, ContextType, UserPostsArgs>,\n  profile?: Resolver<Maybe<ResolversTypes['Profile']>, ParentType, ContextType>,\n  userActivities?: Resolver<Maybe<Array<Maybe<ResolversTypes['Activity']>>>, ParentType, ContextType, UserUserActivitiesArgs>,\n};\n\nexport type ValueCalculationResolvers<ContextType = any, ParentType extends ResolversParentTypes['ValueCalculation'] = ResolversParentTypes['ValueCalculation']> = {\n  action?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  formula?: Resolver<ResolversTypes['String'], ParentType, ContextType>,\n  id?: Resolver<ResolversTypes['ID'], ParentType, ContextType>,\n  inScopeOf?: Resolver<Maybe<Array<ResolversTypes['AccountingScope']>>, ParentType, ContextType>,\n  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  note?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  resourceClassifiedAs?: Resolver<Maybe<Array<ResolversTypes['URI']>>, ParentType, ContextType>,\n  resourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  valueAction?: Resolver<ResolversTypes['Action'], ParentType, ContextType>,\n  valueResourceConformsTo?: Resolver<Maybe<ResolversTypes['ResourceSpecification']>, ParentType, ContextType>,\n  valueUnit?: Resolver<ResolversTypes['Unit'], ParentType, ContextType>,\n};\n\nexport type ValueCalculationPageResolvers<ContextType = any, ParentType extends ResolversParentTypes['ValueCalculationPage'] = ResolversParentTypes['ValueCalculationPage']> = {\n  edges?: Resolver<Array<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n  pageInfo?: Resolver<ResolversTypes['PageInfo'], ParentType, ContextType>,\n  totalCount?: Resolver<ResolversTypes['Int'], ParentType, ContextType>,\n};\n\nexport type ValueCalculationResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['ValueCalculationResponse'] = ResolversParentTypes['ValueCalculationResponse']> = {\n  valueCalculation?: Resolver<Maybe<ResolversTypes['ValueCalculation']>, ParentType, ContextType>,\n};\n\nexport type VerbResolvers<ContextType = any, ParentType extends ResolversParentTypes['Verb'] = ResolversParentTypes['Verb']> = {\n  verb?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n  verbDisplay?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>,\n};\n\nexport type Resolvers<ContextType = any> = {\n  AccountingScope?: AccountingScopeResolvers,\n  Action?: ActionResolvers<ContextType>,\n  Activity?: ActivityResolvers<ContextType>,\n  Agent?: AgentResolvers,\n  AgentRelationship?: AgentRelationshipResolvers<ContextType>,\n  AgentRelationshipResponse?: AgentRelationshipResponseResolvers<ContextType>,\n  AgentRelationshipRole?: AgentRelationshipRoleResolvers<ContextType>,\n  AgentRelationshipRoleResponse?: AgentRelationshipRoleResponseResolvers<ContextType>,\n  AgentsPage?: AgentsPageResolvers<ContextType>,\n  Agreement?: AgreementResolvers<ContextType>,\n  AgreementResponse?: AgreementResponseResolvers<ContextType>,\n  AnyCharacter?: AnyCharacterResolvers,\n  AnyContext?: AnyContextResolvers,\n  Appreciation?: AppreciationResolvers<ContextType>,\n  AppreciationResponse?: AppreciationResponseResolvers<ContextType>,\n  CategoriesPage?: CategoriesPageResolvers<ContextType>,\n  Category?: CategoryResolvers<ContextType>,\n  Character?: CharacterResolvers<ContextType>,\n  Claim?: ClaimResolvers<ContextType>,\n  ClaimResponse?: ClaimResponseResolvers<ContextType>,\n  Commitment?: CommitmentResolvers<ContextType>,\n  CommitmentResponse?: CommitmentResponseResolvers<ContextType>,\n  Cursor?: GraphQLScalarType,\n  DateTime?: GraphQLScalarType,\n  Duration?: DurationResolvers<ContextType>,\n  EconomicEvent?: EconomicEventResolvers<ContextType>,\n  EconomicEventPage?: EconomicEventPageResolvers<ContextType>,\n  EconomicEventResponse?: EconomicEventResponseResolvers<ContextType>,\n  EconomicResource?: EconomicResourceResolvers<ContextType>,\n  EconomicResourcePage?: EconomicResourcePageResolvers<ContextType>,\n  EconomicResourceResponse?: EconomicResourceResponseResolvers<ContextType>,\n  EventOrCommitment?: EventOrCommitmentResolvers,\n  Follow?: FollowResolvers<ContextType>,\n  Fulfillment?: FulfillmentResolvers<ContextType>,\n  FulfillmentResponse?: FulfillmentResponseResolvers<ContextType>,\n  Intent?: IntentResolvers<ContextType>,\n  IntentResponse?: IntentResponseResolvers<ContextType>,\n  IntentsPage?: IntentsPageResolvers<ContextType>,\n  Json?: GraphQLScalarType,\n  LoginResponse?: LoginResponseResolvers<ContextType>,\n  Me?: MeResolvers<ContextType>,\n  Measure?: MeasureResolvers<ContextType>,\n  MeasuresPage?: MeasuresPageResolvers<ContextType>,\n  ObservableObject?: ObservableObjectResolvers,\n  ObservablePhenomenon?: ObservablePhenomenonResolvers<ContextType>,\n  ObservablePhenomenonPage?: ObservablePhenomenonPageResolvers<ContextType>,\n  ObservableProperty?: ObservablePropertyResolvers<ContextType>,\n  ObservablePropertyPage?: ObservablePropertyPageResolvers<ContextType>,\n  ObservableResult?: ObservableResultResolvers,\n  Observation?: ObservationResolvers<ContextType>,\n  ObservationPage?: ObservationPageResolvers<ContextType>,\n  Observer?: ObserverResolvers,\n  Organization?: OrganizationResolvers<ContextType>,\n  OrganizationResponse?: OrganizationResponseResolvers<ContextType>,\n  PageInfo?: PageInfoResolvers<ContextType>,\n  Person?: PersonResolvers<ContextType>,\n  PersonResponse?: PersonResponseResolvers<ContextType>,\n  Plan?: PlanResolvers<ContextType>,\n  PlanResponse?: PlanResponseResolvers<ContextType>,\n  Post?: PostResolvers<ContextType>,\n  PostContent?: PostContentResolvers<ContextType>,\n  Process?: ProcessResolvers<ContextType>,\n  ProcessPage?: ProcessPageResolvers<ContextType>,\n  ProcessResponse?: ProcessResponseResolvers<ContextType>,\n  ProcessSpecification?: ProcessSpecificationResolvers<ContextType>,\n  ProcessSpecificationResponse?: ProcessSpecificationResponseResolvers<ContextType>,\n  ProductBatch?: ProductBatchResolvers<ContextType>,\n  ProductBatchResponse?: ProductBatchResponseResolvers<ContextType>,\n  ProductionFlowItem?: ProductionFlowItemResolvers,\n  Profile?: ProfileResolvers<ContextType>,\n  Proposal?: ProposalResolvers<ContextType>,\n  ProposalResponse?: ProposalResponseResolvers<ContextType>,\n  ProposalsPage?: ProposalsPageResolvers<ContextType>,\n  ProposedIntent?: ProposedIntentResolvers<ContextType>,\n  ProposedIntentResponse?: ProposedIntentResponseResolvers<ContextType>,\n  ProposedTo?: ProposedToResolvers<ContextType>,\n  ProposedToResponse?: ProposedToResponseResolvers<ContextType>,\n  RecipeExchange?: RecipeExchangeResolvers<ContextType>,\n  RecipeExchangeResponse?: RecipeExchangeResponseResolvers<ContextType>,\n  RecipeFlow?: RecipeFlowResolvers<ContextType>,\n  RecipeFlowResponse?: RecipeFlowResponseResolvers<ContextType>,\n  RecipeProcess?: RecipeProcessResolvers<ContextType>,\n  RecipeProcessResponse?: RecipeProcessResponseResolvers<ContextType>,\n  RecipeResource?: RecipeResourceResolvers<ContextType>,\n  RecipeResourceResponse?: RecipeResourceResponseResolvers<ContextType>,\n  Replied?: RepliedResolvers<ContextType>,\n  ResourceSpecification?: ResourceSpecificationResolvers<ContextType>,\n  ResourceSpecificationPage?: ResourceSpecificationPageResolvers<ContextType>,\n  ResourceSpecificationResponse?: ResourceSpecificationResponseResolvers<ContextType>,\n  RootMutationType?: RootMutationTypeResolvers<ContextType>,\n  RootQueryType?: RootQueryTypeResolvers<ContextType>,\n  RootSubscriptionType?: RootSubscriptionTypeResolvers<ContextType>,\n  Satisfaction?: SatisfactionResolvers<ContextType>,\n  SatisfactionResponse?: SatisfactionResponseResolvers<ContextType>,\n  Scenario?: ScenarioResolvers<ContextType>,\n  ScenarioDefinition?: ScenarioDefinitionResolvers<ContextType>,\n  ScenarioDefinitionResponse?: ScenarioDefinitionResponseResolvers<ContextType>,\n  ScenarioResponse?: ScenarioResponseResolvers<ContextType>,\n  Settlement?: SettlementResolvers<ContextType>,\n  SettlementResponse?: SettlementResponseResolvers<ContextType>,\n  SpatialThing?: SpatialThingResolvers<ContextType>,\n  SpatialThingResponse?: SpatialThingResponseResolvers<ContextType>,\n  SpatialThingsPage?: SpatialThingsPageResolvers<ContextType>,\n  Tag?: TagResolvers<ContextType>,\n  Unit?: UnitResolvers<ContextType>,\n  UnitResponse?: UnitResponseResolvers<ContextType>,\n  UnitsPage?: UnitsPageResolvers<ContextType>,\n  URI?: GraphQLScalarType,\n  User?: UserResolvers<ContextType>,\n  ValueCalculation?: ValueCalculationResolvers<ContextType>,\n  ValueCalculationPage?: ValueCalculationPageResolvers<ContextType>,\n  ValueCalculationResponse?: ValueCalculationResponseResolvers<ContextType>,\n  Verb?: VerbResolvers<ContextType>,\n};\n\n\n/**\n * @deprecated\n * Use \"Resolvers\" root object instead. If you wish to get \"IResolvers\", add \"typesPrefix: I\" to your config.\n*/\nexport type IResolvers<ContextType = any> = Resolvers<ContextType>;\n","export const PHOENIX_SOCKET_ENDPOINT = process.env.REACT_APP_PHOENIX_SOCKET_ENDPOINT;\nexport const GRAPHQL_ENDPOINT = process.env.REACT_APP_GRAPHQL_ENDPOINT;\nexport const NODE_ENV = process.env.NODE_ENV;\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\nexport const SENTRY_KEY = process.env.REACT_APP_SENTRY_API_KEY;\nexport const DEFAULT_PAGE_SIZE = parseInt(`${process.env.REACT_APP_DEFAULT_PAGE_SIZE}`) || 15;\n\nexport const APP_NAME = 'WeLoop';\nexport const INSTANCE_DESCRIPTION = 'Federated economic network for Reflow pilots';\nexport const INVITE_ONLY_TEXT =\n  process.env.REACT_APP_INVITE_ONLY_TEXT ||\n  'Please note, signups on this instance are currently invite-only.';\nexport const INSTANCE_TAGLINE = 'Co-creating circular and regenerative resource flows in cities';\nexport const INSTANCE_PROMPT =\n  \"You don't need to sign up to preview what people are sharing and discussing publicly.\";\nexport const prompt_signin = 'Sign in';\nexport const my_timeline = 'My Timeline';\nexport const instance_bg_img =\n  'https://reflowproject.eu/wp-content/uploads/2019/08/reflow-cocreation-1.png';\nexport const logo_large_url =\n  'https://raw.githubusercontent.com/reflow-project/weloop/main/src/static/img/weloop_logo_1200x512.png';\nexport const logo_small_url =\n  'https://raw.githubusercontent.com/reflow-project/weloop/main/src/static/img/weloop_logo_128x128-01.png';\n\nexport const terms_markdown_text = {\n  // replace the text as needed\n  terms_users: 'This is a test instance. Your data is not secure or private.',\n  terms_cookies: 'This site uses cookies.',\n  terms_indexing:\n    'Information you post on this site may be publicly available and will be copied onto other servers in the federated network.'\n};\n\nexport const terms_markdown_urls = {\n  // replace the URLs as needed, or enable/disable to use `terms_markdown_text` instead\n  enabled: false,\n  terms_users: '',\n  terms_cookies: '',\n  terms_indexing: ''\n};\n\nexport const terms_privacy = {\n  // replace the URLs as needed, or enable/disable to use `text_markdown` instead\n  enabled: true,\n  // replace the URL with that of your instance's privacy policy (in markdown format)\n  url_markdown: 'https://reflowproject.eu/privacy-policy',\n  // replace the text as needed (in markdown format as well)\n  text_markdown:\n    'This site uses cookies and follows GDPR rules. Contact the instance operators if you want your data exported or deleted.'\n};\n\nexport const related_urls = {\n  // replace the URLs as needed\n  project_homepage: 'https://weloop.reflowproject.eu',\n  code: 'https://github.com/reflow-project/weloop/',\n  feedback: 'https://github.com/reflow-project/weloop/issues'\n};\n\nexport const IS_DEV = NODE_ENV === 'development';\n\nexport type LocaleDef = { code: string; desc: string; rtl: boolean };\n\nexport const locales: LocaleDef[] = [\n  { code: 'en_GB', desc: 'English, British', rtl: false },\n  { code: 'en_US', desc: 'English, USA', rtl: false },\n  { code: 'es_MX', desc: 'Español, Méjico', rtl: false },\n  { code: 'es_ES', desc: 'Español, España', rtl: false },\n  { code: 'fr_FR', desc: 'Français, France', rtl: false },\n  { code: 'eu', desc: 'Euskara', rtl: false },\n  { code: 'ar_SA', desc: 'العربية, المملكة العربية السعودية', rtl: true }\n];\n\nexport const languages = {\n  en_GB: 'English, British',\n  en_US: 'English, USA',\n  es_MX: 'Español, Méjico',\n  es_ES: 'Español, España',\n  fr_FR: 'Français, France',\n  eu: 'Euskara',\n  ar_SA: 'العربية, المملكة العربية السعودية'\n};\nexport type LocaleKey = keyof typeof languages;\n// export const locales = Object.keys(languages) as LocaleKey[];\n\nconst mothershipAppId = process.env.REACT_APP_MOTHERSHIP_API_ID;\nconst mothershipApiKey = process.env.REACT_APP_MOTHERSHIP_API_KEY;\nconst mothershipEnv = process.env.REACT_APP_MOTHERSHIP_ENV;\n\nexport const mothershipCreds =\n  mothershipAppId && mothershipApiKey\n    ? {\n        appId: mothershipAppId,\n        apiKey: mothershipApiKey,\n        indexName: mothershipEnv\n      }\n    : null;\n\nexport const searchDisabled = !mothershipAppId || !mothershipApiKey;\nexport const USERNAME_REGEX = /^[a-zA-Z][a-zA-Z0-9-]{2,}$/;\nexport const EMAIL_REGEX = /^.+@.+\\..+$/;\nexport const DOMAIN_REGEX = /^.+\\..+$/;\n\nexport const max_file_size = '10MB';\n\nexport const accepted_file_types =\n  '.pdf, .rtf, .docx, .doc, .odt, .ott, .xls, .xlsx, .ods, .ots, .csv, .ppt, .pps, .pptx, .odp, .otp, .odg, .otg, .odc, .ogg, .mp3, .flac, .m4a, .wav, .mp4, .mkv, .flv, .avi, .gif, .jpg, .jpeg, .png, .svg, .webm, .eps, .tex, .mbz';\n\n// these licenses must match the icons (in the same order) configured in the UploadResource UI module\n// please use standard identifiers from https://spdx.org/licenses/preview/ in order to preserve interoperability\nexport const accepted_license_types = ['CC0-1.0', 'CC-BY-4.0', 'CC-BY-SA-4.0'];\n\nexport const nord = {\n  // Main\n  app: '#2E3440',\n  appInverse: '#3B4252',\n  primary: '#BF616A',\n  secondary: '#D08770',\n  tertiary: '#EBCB8B',\n\n  // Status\n  positive: '#2db783',\n  negative: '#ff5a5f',\n  warning: '#ffebb3',\n\n  // Monochrome\n  lightest: '#333333',\n  lighter: '#444444',\n  light: '#666666',\n  mediumlight: '#999999',\n  medium: '#D1D3D8',\n  mediumdark: '#EEEEEE',\n  dark: '#F3F3F3',\n  darker: '#F8F8F8',\n  darkest: '#FFFFFF',\n  border: '1px solid #2E3440'\n};\n\nexport const colors = {\n  // Reflow\n  app: 'rgb(245, 246, 247)',\n  appInverse: '#fff',\n  primary: '#05244F',\n  secondary: '#02e379',\n  tertiary: '#D1D3D8',\n\n  // Status\n  positive: '#2db783',\n  negative: '#ff5a5f',\n  warning: '#ffebb3',\n\n  // Monochrome\n  lightest: '#FFFFFF',\n  lighter: '#F8F8F8',\n  light: '#F3F3F3',\n  mediumlight: '#EEEEEE',\n  medium: '#D1D3D8',\n  mediumdark: '#999999',\n  dark: '#666666',\n  darker: '#444444',\n  darkest: '#333333',\n  border: '1px solid #F3F3F3'\n};\n\nexport const typography = {\n  type: {\n    primary: '\"Barlow\", \"Open Sans\", sans-serif'\n  },\n  size: {\n    s1: '12px',\n    s2: '14px',\n    s3: '16px',\n    m1: '20px',\n    m2: '24px',\n    m3: '28px',\n    l1: '32px',\n    l2: '40px',\n    l3: '48px',\n    code: '90px'\n  }\n};\n\n/* log ENV if DEV */\nIS_DEV &&\n  console.log(`-environment-\n${Object.keys(process.env)\n  .map(key => `${key}=${process.env[key]}`)\n  .join('\\n')}\n-------------\n`);\n/***/\n","const { GraphQLError } = require('graphql');\n// FORKED FROM: https://github.com/jaydenseric/apollo-upload-client\n\nconst { ApolloLink, Observable } = require('apollo-link');\nconst {\n  selectURI,\n  selectHttpOptionsAndBody,\n  fallbackHttpConfig,\n  serializeFetchParameter,\n  createSignalIfSupported,\n  parseAndCheckHttpResponse\n} = require('apollo-link-http-common');\nconst { extractFiles } = require('extract-files');\n\n/**\n * A React Native [`File`](https://developer.mozilla.org/docs/web/api/file)\n * substitute.\n *\n * Be aware that inspecting network requests with Chrome dev tools interferes\n * with the React Native `FormData` implementation, causing network errors.\n * @kind typedef\n * @name ReactNativeFileSubstitute\n * @type {object}\n * @see [`extract-files` docs](https://github.com/jaydenseric/extract-files#type-reactnativefilesubstitute).\n * @see [React Native `FormData` polyfill source](https://github.com/facebook/react-native/blob/v0.45.1/Libraries/Network/FormData.js#L34).\n * @prop {string} uri Filesystem path.\n * @prop {string} [name] File name.\n * @prop {string} [type] File content type. Some environments (particularly Android) require a valid MIME type; Expo `ImageResult.type` is unreliable as it can be just `image`.\n * @example <caption>A camera roll file.</caption>\n * ```js\n * {\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg'\n * }\n * ```\n */\n\n/**\n * Used to mark a\n * [React Native `File` substitute]{@link ReactNativeFileSubstitute}.\n * It’s too risky to assume all objects with `uri`, `type` and `name` properties\n * are files to extract. Re-exported from [`extract-files`](https://npm.im/extract-files)\n * for convenience.\n * @kind class\n * @name ReactNativeFile\n * @param {ReactNativeFileSubstitute} file A React Native [`File`](https://developer.mozilla.org/docs/web/api/file) substitute.\n * @example <caption>A React Native file that can be used in query or mutation variables.</caption>\n * ```js\n * const { ReactNativeFile } = require('apollo-upload-client')\n *\n * const file = new ReactNativeFile({\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg'\n * })\n * ```\n */\n\n/**\n * GraphQL request `fetch` options.\n * @kind typedef\n * @name FetchOptions\n * @type {object}\n * @see [Polyfillable fetch options](https://github.github.io/fetch#options).\n * @prop {object} headers HTTP request headers.\n * @prop {string} [credentials] Authentication credentials mode.\n */\n\nconst setPath = (map, path, value) => {\n  const parts = path.trim().split('.');\n  let i;\n  for (i = 0; i < parts.length - 1; i++) {\n    map = map[parts[i]];\n  }\n  map[parts[i]] = value;\n};\n\n/**\n * Creates a terminating [Apollo Link](https://apollographql.com/docs/link)\n * capable of file uploads. Options match [`createHttpLink`](https://apollographql.com/docs/link/links/http#options).\n * @see [GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec).\n * @see [apollo-link on GitHub](https://github.com/apollographql/apollo-link).\n * @kind function\n * @name createUploadLink\n * @param {object} options Options.\n * @param {string} [options.uri=/graphql] GraphQL endpoint URI.\n * @param {Function} [options.fetch] [`fetch`](https://fetch.spec.whatwg.org) implementation to use, defaulting to the `fetch` global.\n * @param {FetchOptions} [options.fetchOptions] `fetch` options; overridden by upload requirements.\n * @param {string} [options.credentials] Overrides `options.fetchOptions.credentials`.\n * @param {object} [options.headers] Merges with and overrides `options.fetchOptions.headers`.\n * @param {boolean} [options.includeExtensions=false] Toggles sending `extensions` fields to the GraphQL server.\n * @returns {ApolloLink} A terminating [Apollo Link](https://apollographql.com/docs/link) capable of file uploads.\n * @example <caption>A basic Apollo Client setup.</caption>\n * ```js\n * const { ApolloClient } = require('apollo-client')\n * const { InMemoryCache } = require('apollo-cache-inmemory')\n * const { createUploadLink } = require('apollo-upload-client')\n *\n * const client = new ApolloClient({\n *   cache: new InMemoryCache(),\n *   link: createUploadLink()\n * })\n * ```\n */\nexport const createUploadLink = ({\n  uri: fetchUri = '/graphql',\n  fetch: linkFetch = fetch,\n  fetchOptions,\n  credentials,\n  headers,\n  includeExtensions\n} = {}) => {\n  const linkConfig = {\n    http: { includeExtensions },\n    options: fetchOptions,\n    credentials,\n    headers\n  };\n\n  return new ApolloLink(operation => {\n    const uri = selectURI(operation, fetchUri);\n    const context = operation.getContext();\n\n    // Apollo Engine client awareness:\n    // https://apollographql.com/docs/platform/client-awareness\n\n    const {\n      // From Apollo Client config.\n      clientAwareness: { name, version } = {},\n      headers\n    } = context;\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: {\n        // Client awareness headers are context overridable.\n        ...(name && { 'apollographql-client-name': name }),\n        ...(version && { 'apollographql-client-version': version }),\n        ...headers\n      }\n    };\n\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig\n    );\n\n    const { clone, files } = extractFiles(body);\n\n    if (files.size) {\n      // Automatically set by fetch when the body is a FormData instance.\n      delete options.headers['content-type'];\n\n      // GraphQL multipart request spec:\n      // https://github.com/jaydenseric/graphql-multipart-request-spec\n\n      const form = new FormData();\n      form.append('operationName', clone.operationName);\n      form.append('query', clone.query);\n\n      // update paths in variables\n      let i = 0;\n      files.forEach(paths => {\n        paths.forEach(path => setPath(clone, path, String(++i)));\n      });\n      form.append('variables', JSON.stringify(clone.variables));\n\n      // actually add files to form\n      i = 0;\n      files.forEach((paths, file) => {\n        form.append(++i, file, file.name);\n      });\n\n      options.body = form;\n    } else options.body = serializeFetchParameter(clone, 'Payload');\n\n    return new Observable(observer => {\n      // If no abort controller signal was provided in fetch options, and the\n      // environment supports the AbortController interface, create and use a\n      // default abort controller.\n      let abortController;\n      if (!options.signal) {\n        const { controller } = createSignalIfSupported();\n        if (controller) {\n          abortController = controller;\n          options.signal = abortController.signal;\n        }\n      }\n\n      linkFetch(uri, options)\n        .then(response => {\n          // Forward the response on the context.\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          observer.next(result);\n          observer.complete();\n        })\n        .catch(error => {\n          if (error.name === 'AbortError')\n            // Fetch was aborted.\n            return;\n\n          if (error.result && error.result.errors && error.result.data)\n            // There is a GraphQL result to forward.\n            observer.next(error.result);\n\n          observer.next({ errors: [new GraphQLError(String(error))] });\n        });\n\n      // Cleanup function.\n      return () => {\n        if (abortController)\n          // Abort fetch.\n          abortController.abort();\n      };\n    });\n  });\n};\n","import * as AbsintheSocket from '@absinthe/socket';\nimport { createAbsintheSocketLink } from '@absinthe/socket-apollo-link';\nimport { hasSubscription } from '@jumpn/utils-graphql';\nimport {\n  defaultDataIdFromObject,\n  InMemoryCache,\n  IntrospectionFragmentMatcher\n} from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink, FetchResult, Observable } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\n// import { createHttpLink } from 'apollo-link-http';\nimport apolloLogger from 'apollo-link-logger';\nimport {\n  AnonLoginMutationName\n  // AnonResetPasswordMutationName,\n  // AnonResetPasswordRequestMutationName,\n  // AnonSignUpMutationName\n} from '../fe/session/anon.generated';\n// import { MeLogoutMutationName } from 'fe/session/me.generated';\nimport { GraphQLError } from 'graphql';\nimport HttpStatus from 'http-status-codes';\nimport { Socket as PhoenixSocket } from 'phoenix';\nimport { RootMutationType, RootQueryType } from '../graphql/types.generated';\nimport { GRAPHQL_ENDPOINT, IS_DEV, PHOENIX_SOCKET_ENDPOINT } from '../mn-constants';\nimport { getOpType } from '../util/apollo/operation';\nimport { KVStore } from '../util/keyvaluestore/types';\nimport { createUploadLink } from './uploadLink.js';\nimport introspectionQueryResultData from 'graphql/types.generated';\n\nexport type MutationName = keyof RootMutationType;\nexport type QueryName = keyof RootQueryType;\nexport type OperationName = QueryName | MutationName;\n\ninterface Cfg {\n  localKVStore: KVStore;\n  appLinks: ApolloLink[];\n}\n\nconst AUTH_TOKEN_KEY = 'AUTH_TOKEN';\n\nexport default async function initialise({ localKVStore, appLinks }: Cfg) {\n  let authToken = localKVStore.get(AUTH_TOKEN_KEY);\n\n  const fragmentMatcher = new IntrospectionFragmentMatcher({\n    introspectionQueryResultData\n  });\n\n  const cache = new InMemoryCache({\n    fragmentMatcher,\n    cacheRedirects: {\n      Query: {\n        activity: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Activity', id: args.activityId }),\n        collection: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Collection', id: args.collectionId }),\n        community: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Community', id: args.communityId }),\n        comment: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Comment', id: args.commentId }),\n        user: (_, args, { getCacheKey }) => getCacheKey({ __typename: 'User', id: args.userId }),\n        thread: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Thread', id: args.threadId }),\n        resource: (_, args, { getCacheKey }) =>\n          getCacheKey({ __typename: 'Resource', id: args.resourceId })\n      }\n    },\n    dataIdFromObject: obj => {\n      switch (obj.__typename) {\n        case 'User': {\n          //@ts-ignore\n          const id: string = 'userId' in obj ? obj.userId : obj.id;\n          return id;\n        }\n        //   case 'Me': return (obj as Me).email\n        default:\n          return defaultDataIdFromObject(obj); // fall back to default handling\n      }\n    }\n  });\n\n  const setToken = (token?: string | null | undefined) => {\n    if (!token) {\n      delToken();\n    } else {\n      authToken = token;\n      localKVStore.set(AUTH_TOKEN_KEY, token);\n    }\n  };\n\n  const delToken = () => {\n    authToken = undefined;\n    localKVStore.del(AUTH_TOKEN_KEY);\n  };\n\n  const setTokenLink = new ApolloLink((operation, nextLink) => {\n    const { operationName } = operation;\n\n    // if (operationName === MeLogoutMutationName) {\n    //   delToken();\n    // }\n    console.log(nextLink(operation), '__________________________');\n    return nextLink(operation).map(resp => {\n      if (\n        operationName === AnonLoginMutationName\n        // operationName === AnonResetPasswordMutationName ||\n        // operationName === AnonConfirmEmailMutationName\n      ) {\n        setToken(\n          resp.data?.login?.token\n          // resp.data?.confirmEmail?.token ||\n          // resp.data?.resetPassword?.token\n        );\n      }\n      return resp;\n    });\n  });\n\n  /**\n   * This context link is used to assign the necessary Authorization header\n   * to all HTTP requests to the GraphQL backend. In the case that the user\n   * is authenticated it sets their access token as the value, otherwise null.\n   */\n  const authLink = setContext((_, { headers }) => {\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: authToken ? `Bearer ${authToken}` : null\n      }\n    };\n  });\n\n  const errorLink = onError(errorResponse => {\n    const { operation, response, graphQLErrors, networkError } = errorResponse;\n    console.error(`errorLink on operation`, errorResponse);\n\n    if (networkError) {\n      // NETWORK ERROR\n      const message =\n        'statusCode' in networkError\n          ? HttpStatus.getStatusText(networkError.statusCode)\n          : networkError.message;\n      return Observable.of<FetchResult>({\n        errors: [new GraphQLError(`network error:${message}`)]\n      });\n    } else if (graphQLErrors) {\n      // GRAPHQL ERROR\n      const unexpectedError = graphQLErrors.find(\n        err =>\n          /Failed to fetch/gi.test(err.message) ||\n          /JSON.parse/gi.test(err.message) ||\n          /ServerParseError/gi.test(err.message)\n      );\n      return Observable.of<FetchResult>({\n        errors: unexpectedError ? [new GraphQLError(`Unexpected error`)] : graphQLErrors\n      });\n    } else if (response?.errors) {\n      // RESPONSE ERROR\n      return Observable.of<FetchResult>({\n        data: response.data,\n        errors: response.errors\n      });\n    } else {\n      // UNKNOWN ERROR\n      const respStr = JSON.stringify(response, null, 2);\n      const message = `unknown error:\\noperation:${operation}\\nresponse:${respStr}`;\n      return Observable.of<FetchResult>({\n        errors: [new GraphQLError(message)]\n      });\n    }\n  });\n\n  const clientAwarenessHeadersLinkForNonApollo3Server = setContext((_, ctx) => {\n    const { headers } = ctx;\n    return {\n      ...ctx,\n      clientAwareness: undefined,\n      headers: {\n        ...headers\n      }\n    };\n  });\n\n  const ALLOWED_ANONYMOUS_MUTATIONS = [\n    // AnonSignUpMutationName,\n    AnonLoginMutationName\n    // AnonConfirmEmailMutationName,\n    // AnonResetPasswordMutationName,\n    // AnonResetPasswordRequestMutationName\n  ];\n  const alertBlockMutationsForAnonymousLink = new ApolloLink((operation, nextLink) => {\n    if (!authToken) {\n      const optype = getOpType(operation);\n      if (\n        optype === 'mutation' &&\n        //@ts-ignore\n        !ALLOWED_ANONYMOUS_MUTATIONS.includes(operation.operationName)\n      ) {\n        return Observable.of<FetchResult>({\n          errors: [new GraphQLError('You should log in for performing this operation!')]\n        });\n      }\n    }\n\n    return nextLink(operation);\n  });\n  // used for graphql query and mutations\n  const httpLink = ApolloLink.from(\n    [\n      IS_DEV ? apolloLogger : null,\n      ...appLinks,\n      alertBlockMutationsForAnonymousLink,\n      errorLink,\n      authLink,\n      clientAwarenessHeadersLinkForNonApollo3Server,\n      setTokenLink,\n      createUploadLink({ uri: GRAPHQL_ENDPOINT!! })\n    ].filter(Boolean)\n  );\n\n  // used for graphql subscriptions\n  const absintheSocket = createAbsintheSocketLink(\n    AbsintheSocket.create(new PhoenixSocket(PHOENIX_SOCKET_ENDPOINT))\n  );\n  // if the operation is a subscription then use\n  // the absintheSocket otherwise use the httpLink\n  const link = ApolloLink.split(\n    operation => hasSubscription(operation.query),\n    absintheSocket,\n    httpLink\n  );\n\n  const client = new ApolloClient({\n    cache,\n    link,\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'cache-first',\n        errorPolicy: 'ignore'\n      },\n      query: {\n        fetchPolicy: 'cache-first',\n        errorPolicy: 'all'\n      },\n      mutate: {\n        errorPolicy: 'all'\n      }\n    }\n  });\n  return {\n    client\n  };\n}\n","import { MoodleThemeInterface } from './styled';\nimport { colors, typography } from 'mn-constants';\n\n// Global style variables\nexport const theme: MoodleThemeInterface = {\n  breakpoints: ['40em', '52em', '64em'],\n  // fontSizes: ['12px', '14px', '16px', '20px', '24px', '28px', '32px', '48px'],\n  colors: {\n    // Main\n    app: colors.app,\n    appInverse: colors.appInverse,\n    primary: colors.primary,\n    secondary: colors.secondary,\n    tertiary: colors.tertiary,\n\n    // Status\n    positive: colors.positive,\n    negative: colors.negative,\n    warning: colors.warning,\n\n    // Monochrome\n    lightest: colors.lightest,\n    lighter: colors.lighter,\n    light: colors.light,\n    mediumlight: colors.mediumlight,\n    medium: colors.medium,\n    mediumdark: colors.mediumdark,\n    dark: colors.dark,\n    darker: colors.darker,\n    darkest: colors.darkest,\n\n    border: colors.border\n  },\n  variants: {\n    negative: {\n      bg: colors.negative,\n      color: colors.light\n    },\n    positive: {\n      bg: colors.positive,\n      color: colors.light\n    },\n    warning: {\n      bg: colors.warning,\n      color: colors.darker\n    },\n    avatar: {\n      borderRadius: '100% !important'\n    }\n  },\n  text: {\n    subhead: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s3,\n      color: colors.dark,\n      textTransform: 'capitalize',\n      letterSpacing: '0.5px',\n      fontWeight: '600'\n    },\n    suptitle: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s1,\n      color: colors.dark,\n      textTransform: 'uppercase',\n      letterSpacing: '1px',\n      fontWeight: '700'\n    },\n    link: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s2,\n      color: colors.dark,\n      letterSpacing: '.5px',\n      fontWeight: '600'\n    },\n    text: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.s2,\n      color: colors.dark,\n      letterSpacing: '.5px',\n      fontWeight: '500'\n    },\n    heading: {\n      fontFamily: typography.type.primary,\n      fontSize: typography.size.m3,\n      color: colors.dark,\n      letterSpacing: '1px',\n      fontWeight: '800'\n    }\n  },\n  buttons: {\n    primary: {\n      fontWeight: '600',\n      height: '40px',\n      px: 4,\n      backgroundColor: colors.primary,\n      borderRadius: '4px',\n      fontSize: typography.size.s2,\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      letterSpacing: '1px'\n    },\n    danger: {\n      fontWeight: '600',\n      height: '40px',\n      px: 4,\n      backgroundColor: colors.negative,\n      color: colors.lighter,\n      borderRadius: '4px',\n      fontSize: typography.size.s2,\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      letterSpacing: '1px'\n    },\n    outline: {\n      fontWeight: '600',\n      height: '40px',\n      px: 4,\n      backgroundColor: 'transparent',\n      borderRadius: '4px',\n      fontSize: typography.size.s2,\n      cursor: 'pointer',\n      textTransform: 'uppercase',\n      letterSpacing: '1px',\n      color: colors.dark,\n      border: `1px solid ${colors.primary}`\n    }\n  },\n  space: ['0px', '4px', '8px', '16px', '32px', '64px', '128px', '256px'],\n  fontFamily: typography.type.primary\n};\n","import React, { FC } from 'react';\nimport { moodlenet } from 'ui/themes';\nimport { ThemeProvider as StyledTheme } from 'styled-components';\nimport { MoodleThemeInterface } from 'ui/themes/styled';\n\nconst ThemeProvider: FC<{ theme?: MoodleThemeInterface | undefined }> = ({\n  children,\n  theme = moodlenet\n}) => {\n  return <StyledTheme theme={theme}>{children}</StyledTheme>;\n};\n\nexport default ThemeProvider;\n","import * as styledComponents from 'styled-components';\n\nexport interface MoodleThemeInterface {\n  breakpoints: string[];\n  colors: {\n    app: string;\n    appInverse: string;\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    positive: string;\n    negative: string;\n    warning: string;\n    lightest: string;\n    lighter: string;\n    light: string;\n    mediumlight: string;\n    medium: string;\n    mediumdark: string;\n    dark: string;\n    darker: string;\n    darkest: string;\n\n    border: string;\n  };\n  text: {\n    subhead: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      textTransform: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    suptitle: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      textTransform: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    link: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    text: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n    heading: {\n      fontFamily: string;\n      fontSize: string;\n      color: string;\n      letterSpacing: string;\n      fontWeight: string;\n    };\n  };\n  variants: {\n    negative: {\n      bg: string;\n      color: string;\n    };\n    positive: {\n      bg: string;\n      color: string;\n    };\n    warning: {\n      bg: string;\n      color: string;\n    };\n    avatar: {\n      borderRadius: string;\n    };\n  };\n  buttons: {\n    primary: {\n      fontWeight: string;\n      borderRadius: string;\n      height: string;\n      px: number;\n      fontSize: string;\n      backgroundColor: string;\n      cursor: string;\n      textTransform: string;\n      letterSpacing: string;\n    };\n    danger: {\n      fontWeight: string;\n      borderRadius: string;\n      height: string;\n      color: string;\n      px: number;\n      fontSize: string;\n      backgroundColor: string;\n      cursor: string;\n      textTransform: string;\n      letterSpacing: string;\n    };\n\n    outline: {\n      fontWeight: string;\n      borderRadius: string;\n      height: string;\n      px: number;\n      fontSize: string;\n      backgroundColor: string;\n      cursor: string;\n      color: string;\n      textTransform: string;\n      letterSpacing: string;\n      border: string;\n    };\n  };\n  space: string[];\n  fontFamily: string;\n}\n\nexport interface StyledThemeInterface {\n  theme: MoodleThemeInterface;\n}\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n  withTheme\n} = styledComponents;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider, withTheme };\n\nexport default styled;\n","import styled from 'ui/themes/styled';\nimport { Box, Flex } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled(Box)`\n  > div:last-of-type {\n    border-bottom: none;\n  }\n`;\n\nexport const MainContainer = styled(Flex)`\n  align-items: stretch;\n  flex-grow: 1;\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport const HomeBox = styled(Flex)`\n  width: 600px;\n  align-items: flex-start;\n  flex-shrink: 1;\n  flex-grow: 1;\n  flex-basis: auto;\n  flex-direction: column;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n`;\n\nexport const WrapperCont = styled(Flex)`\n  width: 100%;\n  height: 100%;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  display: flex;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n  margin-bottom: 80px;\n`;\n\nexport const Wrapper = styled(Flex)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  position: relative;\n  ${media.lessThan('medium')`\n       padding-bottom: 75px;\n  `};\n\n  & ul {\n    display: block;\n\n    & li {\n      display: inline-block;\n\n      & h5 {\n        font-weight: 500;\n      }\n    }\n  }\n\n  & h4 {\n    margin: 0;\n    font-weight: 400 !important;\n    color: #151b26;\n    line-height: 40px;\n  }\n`;\n\nexport const MenuItem = styled(NavLink)`\n  width: auto;\n  overflow: hidden;\n  text-align: center;\n\n  ${media.lessThan('medium')`\n      flex-basis: 44px;\n      overflow: hidden;\n      transition: flex-basis 0.3s ease;\n  `};\n\n  &.active {\n    ${media.lessThan('medium')`\n      flex-basis: 36%;\n      overflow: hidden;\n      transition: flex-basis 0.3s ease;\n  `};\n\n  }\n\n  .text-holder {\n    display: block;\n    ${media.lessThan('medium')`\n      display: none\n  `};\n  }\n\n  .icon-holder {\n    display: none;\n\n    ${media.lessThan('medium')`\n      display: flex;\n  `}\n  }\n\n  &.active .icon-holder {\n    ${media.lessThan('medium')`\n      display: none;\n  `};\n  }\n\n  &.active .text-holder {\n    ${media.lessThan('medium')`\n      display: block;\n  `};\n`;\n\nexport const MenuList = styled(Flex)`\n  border-bottom: ${props => props.theme.colors.border};\n  border-top: ${props => props.theme.colors.border};\n  height: 60px;\n  padding: 12px 8px;\n  background: ${props => props.theme.colors.appInverse};\n\n  ${media.lessThan('medium')`\n      justify-content: space-between;\n      align-item: center;\n      flex-wrap: nowrap;\n  `};\n}\n\na {\n  font-weight: 600;\n  text-decoration: none;\n  margin-right: 8px;\n  color: ${props => props.theme.colors.darker};\n  letterspacing: 1px;\n  padding: 0 8px;\n  line-height: 34px;\n  white-space: nowrap;\n\n  ${media.lessThan('medium')`\n       padding: 0;\n  `};\n\n  &.active,\n  &:hover {\n    color: ${props => props.theme.colors.lighter};\n    background: ${props => props.theme.colors.primary};\n    border-radius: 4px;\n  }\n}\n`;\n\nexport const ObjectsList = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n\n  &.replies > div {\n    margin-bottom: 0;\n    border-bottom: ${props => props.theme.colors.border};\n  }\n\n  > div {\n    &:last-of-type {\n      margin-bottom: 4px;\n      border-bottom: 0;\n    }\n  }\n`;\n\nexport const BottomBordered = styled(Box)`\n  border-bottom: ${props => props.theme.colors.border};\n`;\n\nexport const CollectionsWrapper = styled(Box)`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 16px;\n  row-gap: 16px;\n  margin: 16px;\n  margin-bottom: 24px !important;\n`;\n\nexport const ButtonIcon = styled(Box)`\n  width: 34px;\n  height: 34px;\n  border-radius: 50%;\n  background: ${props => props.theme.colors.lighter};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    stroke: ${props => props.theme.colors.primary};\n  }\n\n  &:focus {\n    background: ${props => props.theme.colors.primary};\n\n    svg {\n      stroke: ${props => props.theme.colors.lighter};\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\nimport './loader.css';\nconst Bounce = styled(Box)<{ color: string }>`\n  background-color: ${props =>\n    props.color === 'primary' ? '#ffffffeb' : props.theme.colors.primary};\n`;\n\n/**\n * Loader spinner component.\n * @param props {Object} props of the loader\n * @constructor\n */\nfunction Loader({ ...props }) {\n  return (\n    <div className=\"spinner\" {...props}>\n      <Bounce color={props.variant} className=\"bounce1\" />\n      <Bounce color={props.variant} className=\"bounce2\" />\n      <Bounce color={props.variant} className=\"bounce3\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { FC } from 'react';\nimport styled from 'ui/themes/styled';\nimport Loader from '../Loader';\nimport { darken, lighten, transitions } from 'polished';\nimport { Button } from 'rebass/styled-components';\nimport { ButtonProps } from 'rebass';\nimport media from 'styled-media-query';\n\nconst WrapperButton = styled(Button)<{\n  variant: string;\n  isIcon: boolean;\n  disabled: boolean;\n}>`\n  ${transitions('background, 0.2s')};\n  width: ${props => (props.isIcon === true ? '40px' : 'auto')};\n  border-radius: ${props => (props.isIcon === true ? '100%' : '4px')};\n  padding: ${props => (props.isIcon === true ? '0px' : 'auto')};\n  opacity: ${props => (props.disabled === true ? '0.7' : '1')};\n  cursor: ${props => (props.disabled === true ? 'default' : 'pointer')};\n  background:  ${props => props.variant === 'warning' && props.theme.colors.negative};\n  ${media.lessThan('medium')`\n    padding:  10px;\n  `};\n  &.show-more {\n    width: auto;\n    padding: 3px 8px;\n    background: transparent;\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    ${transitions('background, 0.2s')}\n    \n    svg {\n      stroke: ${props => props.theme.colors.primary};\n      margin-right: 10px;\n    }\n    \n    &:hover {\n        background: #f3f3f3;\n      }\n  }\n  &:hover && not:['disabled\\'] {\n    background: ${props => {\n      switch (props.variant) {\n        case 'primary': {\n          return darken('0.1', props.theme.colors.primary);\n        }\n        case 'danger': {\n          return lighten('0.1', props.theme.colors.primary);\n        }\n        default: {\n          lighten('0.3', props.theme.colors.primary);\n        }\n      }\n    }}\n  }\n}}\n`;\n\nexport interface Props extends ButtonProps {\n  isSubmitting?: boolean;\n  variant?: string;\n  isDisabled?: boolean;\n  isIcon?: boolean;\n  className?: string;\n  fullWidth?: boolean;\n}\n\nconst MNButton: FC<Props> = props => (\n  //@ts-ignore\n  <WrapperButton\n    {...props}\n    width={props.fullWidth ? '100%' : props.width || ''}\n    className={props.variant === 'show-more' ? 'show-more' : ''}\n    isSubmitting={props.isSubmitting}\n    disabled={props.isDisabled}\n    isIcon={props.isIcon}\n    variant={props.variant}\n  >\n    {props.isSubmitting ? <Loader variant={props.variant} /> : props.children}\n  </WrapperButton>\n);\n\nexport default MNButton;\n","import React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { Trans } from '@lingui/macro';\nimport { FormikHook } from 'ui/@types/types';\n\nexport interface Props {\n  LoadMoreFormik: FormikHook;\n}\n\nexport const LoadMore: React.FC<Props> = props => {\n  return (\n    <Wrapper p={2}>\n      <Button\n        isSubmitting={props.LoadMoreFormik.isSubmitting}\n        isDisabled={props.LoadMoreFormik.isSubmitting}\n        onClick={props.LoadMoreFormik.submitForm}\n        variant=\"outline\"\n      >\n        <Trans>Load more</Trans>\n      </Button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  button {\n    width: 100%;\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  Wrapper,\n  WrapperCont,\n  List,\n  MainContainer,\n  HomeBox,\n  ObjectsList,\n  CollectionsWrapper,\n  MenuList,\n  ButtonIcon,\n  MenuItem\n} from 'ui/elements/Layout';\nimport { Flex, Box, Text } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport { FormikHook } from 'ui/@types/types';\n\nimport { LoadMore } from 'ui/modules/Loadmore';\nimport { ReactElement } from 'react';\n\nexport interface Props {\n  tabPaths: {\n    timeline: string;\n    communities: string;\n    collections: string;\n  };\n  FeaturedCommunitiesBox: ReactElement;\n  FeaturedCollectionsBox: ReactElement;\n  ActivitiesBox: ReactElement;\n  CommunitiesBoxes: ReactElement;\n  CollectionsBoxes: ReactElement;\n  LoadMoreFormik: FormikHook | null;\n}\nexport const Discover: React.FC<Props> = ({\n  ActivitiesBox,\n  FeaturedCommunitiesBox,\n  FeaturedCollectionsBox,\n  CollectionsBoxes,\n  CommunitiesBoxes,\n  LoadMoreFormik,\n  tabPaths\n}) => {\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <WrapperFeatured>{FeaturedCommunitiesBox}</WrapperFeatured>\n          <Wrapper>\n            <Menu tabPaths={tabPaths} />\n            <Switch>\n              <Route exact path={tabPaths.communities}>\n                <ObjectsList>{CommunitiesBoxes}</ObjectsList>\n                {LoadMoreFormik && <LoadMore LoadMoreFormik={LoadMoreFormik} />}\n              </Route>\n              <Route exact path={tabPaths.collections}>\n                <ObjectsList>\n                  <CollectionsWrapper>{CollectionsBoxes}</CollectionsWrapper>\n                </ObjectsList>\n                {LoadMoreFormik && <LoadMore LoadMoreFormik={LoadMoreFormik} />}\n              </Route>\n              <Route exact path={tabPaths.timeline}>\n                <List>{ActivitiesBox}</List>\n                {LoadMoreFormik && <LoadMore LoadMoreFormik={LoadMoreFormik} />}\n              </Route>\n            </Switch>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\nconst UsersIcon = require('react-feather/dist/icons/users').default;\nconst ActivityIcon = require('react-feather/dist/icons/activity').default;\n\nconst Menu: React.FC<{ tabPaths: Props['tabPaths'] }> = ({ tabPaths }) => (\n  <>\n    <Title px={2} mt={2}>\n      <Text variant=\"suptitle\">Browse Home instance</Text>\n    </Title>\n    <MenuList>\n      <MenuItem exact to={tabPaths.timeline}>\n        <div className=\"text-holder\">\n          <Trans>\n            <Trans>Timeline</Trans>\n          </Trans>\n        </div>\n        <ButtonIcon className=\"icon-holder\">\n          <UsersIcon size=\"24\" />\n        </ButtonIcon>\n      </MenuItem>\n      <MenuItem exact to={tabPaths.communities}>\n        <div className=\"text-holder\">\n          <Trans>All communities</Trans>\n        </div>\n        <ActivityIcon className=\"icon-holder\">\n          <UsersIcon size=\"24\" />\n        </ActivityIcon>\n      </MenuItem>\n    </MenuList>\n  </>\n);\nconst Title = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  height: 40px;\n  line-height: 40px;\n`;\n\nconst WrapperFeatured = styled(Flex)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 8px;\n  max-height: 270px;\n`;\n\nexport default Discover;\n","// import { FeaturedCollections } from 'HOC/modules/FeaturedCollections/featuredCollections';\nimport React, { FC, useMemo } from 'react';\nimport { Discover, Props } from 'ui/pages/discover';\n// import { useInstanceOutboxActivities } from 'fe/activities/outbox/instance/useInstanceOutboxActivities';\n// import { ActivityPreviewHOC } from 'HOC/modules/previews/activity/ActivityPreview';\n// import { FeaturedCommunities } from 'HOC/modules/FeaturedCommunities/featuredCommunities';\n// import { useAllCommunities } from 'fe/community/all/useAllCommunities';\n// import { CommunityPreviewHOC } from 'HOC/modules/previews/community/CommunityPreview';\n// import { CollectionPreviewHOC } from 'HOC/modules/previews/collection/CollectionPreview';\n// import { useAllCollections } from 'fe/collection/all/useAllCollections';\nimport { Box } from 'rebass';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { discoverLocation } from 'routes/DiscoverPageRoute';\n\nexport enum DiscoverPageTabs {\n  Activities,\n  Communities,\n  Collections\n}\n\nexport interface DiscoverPage {\n  tab: DiscoverPageTabs;\n  basePath: string;\n}\n\nconst discoverActivitiesPageTitle = t`Discover Activities`;\nconst discoverCollectionsPageTitle = t`Discover Collections`;\nconst discoverCommunitiesPageTitle = t`Discover Communities`;\n\nexport const DiscoverPage: FC<DiscoverPage> = ({ basePath, tab }) => {\n  const discovberPageTitle =\n    tab === DiscoverPageTabs.Collections\n      ? discoverCollectionsPageTitle\n      : tab === DiscoverPageTabs.Communities\n      ? discoverCommunitiesPageTitle\n      : tab === DiscoverPageTabs.Activities\n      ? discoverActivitiesPageTitle\n      : discoverActivitiesPageTitle; //never\n  usePageTitle(discovberPageTitle);\n\n  // const { activitiesPage } = useInstanceOutboxActivities();\n  // const [activitiesPageNext /* , activitiesPagePrevious */] = activitiesPage.formiks;\n\n  // const { allCommunitiesPage } = useAllCommunities();\n  // const [allCommunitiesPageNext /* , allCommunitiesPagePrevious */] = allCommunitiesPage.formiks;\n\n  // const { allCollectionsPage } = useAllCollections();\n  // const [allCollectionsPageNext /* , allCollectionsPagePrevious */] = allCollectionsPage.formiks;\n\n  const propsUI = useMemo<Props>(() => {\n    const FeaturedCollectionsBox = <div>FeaturedCollections</div>;\n    const FeaturedCommunitiesBox = <div>FeaturedCommunities</div>;\n    const ActivitiesBox = (\n      <>\n        {[].map((activity: any) => (\n          <div>ActivityPreviewHOC, {activity}</div>\n          // <ActivityPreviewHOC activityId={activity.id} key={activity.id} />\n        ))}\n      </>\n    );\n\n    const CollectionsBoxes = (\n      <>\n        {[].map((collection: any) => (\n          <Box m={2} key={collection.id}>\n            <div>CollectionPreviewHOC, {collection}</div>\n            {/*<CollectionPreviewHOC collectionId={collection.id} />*/}\n          </Box>\n        ))}\n      </>\n    );\n    const CommunitiesBoxes = (\n      <>\n        {[].map((community: any) => (\n          <Box m={2} key={community.id}>\n            <div>CommunityPreviewHOC, {community}</div>\n            {/*<CommunityPreviewHOC communityId={community.id} />*/}\n          </Box>\n        ))}\n      </>\n    );\n    const LoadMoreFormik =\n      tab === DiscoverPageTabs.Activities\n        ? () => {}\n        : tab === DiscoverPageTabs.Collections\n        ? () => {}\n        : tab === DiscoverPageTabs.Communities\n        ? () => {}\n        : null;\n\n    const tabPaths: Props['tabPaths'] = {\n      collections: discoverLocation.getPath({ tab: 'collections' }, undefined),\n      communities: discoverLocation.getPath({ tab: 'communities' }, undefined),\n      timeline: discoverLocation.getPath({ tab: undefined }, undefined)\n    };\n\n    const props: any = {\n      tabPaths,\n      ActivitiesBox,\n      FeaturedCollectionsBox,\n      FeaturedCommunitiesBox,\n      CollectionsBoxes,\n      CommunitiesBoxes,\n      LoadMoreFormik\n    };\n\n    return props;\n  }, [\n    // activitiesPage.edges,\n    // activitiesPageNext,\n    // allCollectionsPage.edges,\n    // allCollectionsPageNext,\n    // allCommunitiesPage.edges,\n    // allCommunitiesPageNext,\n    tab\n  ]);\n\n  return <Discover {...propsUI} />;\n};\n","import { KVStore, CreateKVStore } from './types';\n\ntype Type = 'session' | 'local';\nexport const SESSION: Type = 'session';\nexport const LOCAL: Type = 'local';\nexport const createLocalSessionKVStorage = (type: Type): CreateKVStore => (\n  prefix = ''\n): KVStore => {\n  const storage = type === 'local' ? localStorage : sessionStorage;\n  const pkey = (key: string) => `${prefix}${key}`;\n  const get: KVStore['get'] = key => parse(storage.getItem(pkey(key)), type, pkey(key));\n  const set: KVStore['set'] = (key, val) => storage.setItem(pkey(key), serialize(val));\n  const del: KVStore['del'] = key => {\n    const val = get(pkey(key));\n    storage.removeItem(pkey(key));\n    return val;\n  };\n  return {\n    get,\n    set,\n    del\n  };\n};\n\nconst parse = (str: string | null, type: Type, key: string): any => {\n  if (str === null) {\n    return null;\n  }\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    console.warn(`KVStore[${type}]#parse: could not parse ${str} at key [${key}]`);\n    return null;\n  }\n};\nconst serialize = (val: any) => JSON.stringify(val);\n","import { Settings } from 'luxon';\nimport { Catalog, Catalogs, I18n, setupI18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React, { createContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport { IS_DEV, LocaleDef, locales as available } from '../../mn-constants';\nimport { createLocalSessionKVStorage, LOCAL } from 'util/keyvaluestore/localSessionStorage';\nconst LOCALIZATION_STORE = 'LOCALIZATION';\nconst LOCALE_KEY = '#locale';\nconst kvstore = createLocalSessionKVStorage(LOCAL)(LOCALIZATION_STORE);\nexport type LocaleContextT = {\n  current: LocaleDef;\n  i18n: I18n;\n  available: LocaleDef[];\n  set(locale: LocaleDef): void;\n};\nconst getStoredLocaleCode = (): string | null => kvstore.get(LOCALE_KEY);\nconst setStoredLocaleCode = (localeCode: string): void => kvstore.set(LOCALE_KEY, localeCode);\n\nconst savedLangCode = getStoredLocaleCode();\nconst defaultLocale =\n  (savedLangCode && available.find(locale => locale.code === savedLangCode)) || available[0];\n\nexport const i18n = setupI18n({\n  locales: available.map(locale => locale.code)\n});\nexport const LocaleContext = createContext<LocaleContextT>({\n  current: defaultLocale,\n  i18n,\n  available,\n  set: () => void 0\n});\nexport const ProvideLocalizationCtx: React.FC = ({ children }) => {\n  const [current, setCurrent] = useState(defaultLocale);\n  const [catalogs, setCatalogs] = useState<Catalogs>({});\n  useEffect(() => {\n    setHTMLDirection(current.rtl);\n    if (catalogs[current.code]) {\n      return;\n    }\n    loadCatalog(current.code)\n      .then(cat => setCatalogs({ ...catalogs, [current.code]: cat }))\n      .catch(err => console.error(`Error loading Locale: ${current.code}`, err));\n  }, [catalogs, current]);\n\n  const set = useCallback(\n    (locale: LocaleDef) => {\n      setCurrent(locale);\n      const { code } = locale;\n      Settings.defaultLocale = code.split('_')[0];\n      setStoredLocaleCode(code);\n    },\n    [setCurrent]\n  );\n\n  const localeContextValue = useMemo<LocaleContextT>(\n    () => ({\n      current,\n      available,\n      i18n,\n      set\n    }),\n    [current, set]\n  );\n\n  return (\n    <I18nProvider i18n={i18n} language={current.code} catalogs={catalogs}>\n      <LocaleContext.Provider value={localeContextValue}>{children}</LocaleContext.Provider>\n    </I18nProvider>\n  );\n};\n\nconst loadCatalog = async (localeCode: string): Promise<Catalog> => {\n  if (IS_DEV) {\n    return import(\n      /* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n      `@lingui/loader!../../locales/${localeCode}/messages.po`\n    );\n  } else {\n    return import(\n      /* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n      `../../locales/${localeCode}/messages.js`\n    );\n  }\n};\n\nconst setHTMLDirection = (RTL: boolean) => {\n  const htmlEl = document.querySelector('html');\n  if (htmlEl) {\n    const dir = RTL ? 'rtl' : 'ltr';\n    htmlEl.style.direction = dir;\n    htmlEl.classList.remove('--rtl', '--ltr');\n    htmlEl.classList.add(`--${dir}`);\n  }\n};\n","import { APP_NAME } from 'mn-constants';\nimport React, { createContext, useContext, useMemo, useState, useCallback, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { LocaleContext } from './localizationCtx';\nimport { MessageDescriptor } from '@lingui/core';\n\ntype SubTitleDescOrFalse = MessageDescriptor | false;\ntype SubTitle = string | undefined;\nexport interface PageCtx {\n  setTitle(subTitle: SubTitleDescOrFalse, values?: any): void;\n}\nexport const PageCtx = createContext<PageCtx>({ setTitle: _ => _ });\nexport const ProvidePageCtx: React.FC = ({ children }) => {\n  const { i18n } = useContext(LocaleContext);\n  const [subTitle, setSubTitle] = useState<SubTitle>();\n  const setTitle = useCallback<PageCtx['setTitle']>(\n    (subTitleToSet, values) => {\n      const nextSubTitle = subTitleToSet === false ? void 0 : i18n._({ ...subTitleToSet, values });\n      if (nextSubTitle === subTitle) {\n        return;\n      }\n      setSubTitle(nextSubTitle);\n    },\n    [i18n, subTitle]\n  );\n\n  const ctx = useMemo<PageCtx>(\n    () => ({\n      setTitle\n    }),\n    [setTitle]\n  );\n  const title = subTitle ? `${APP_NAME} - ${subTitle}` : APP_NAME;\n  //console.table({ title, subTitle });\n  return (\n    <PageCtx.Provider value={ctx}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </PageCtx.Provider>\n  );\n};\n\nexport const usePageTitle = (subTitle: SubTitleDescOrFalse, values?: any) => {\n  const { setTitle } = useContext(PageCtx);\n  // https://reactjs.org/blog/2020/02/26/react-v16.13.0.html#warnings-for-some-updates-during-render\n  useEffect(() => {\n    setTitle(subTitle, values);\n  }, [setTitle, subTitle, values]);\n};\n","import { ExecutionResult, GraphQLError } from 'graphql';\nimport { toast, ToastContent, ToastOptions } from 'react-toastify';\nimport { ApolloLink } from 'apollo-link';\nimport { getOperationNameAndType } from 'util/apollo/operation';\nimport Maybe from 'graphql/tsutils/Maybe';\n\nexport interface APICTX<Data = any> {\n  ctx?: string;\n  noShowError?: boolean;\n  noShowSuccess?: boolean;\n  errorMsg?: (errors: readonly GraphQLError[]) => string;\n  successMsg?: (data: Data) => string;\n}\n\nconst defaultErrorMsg = (ctx: string, errors: readonly GraphQLError[]) => {\n  const errorMsg = errors.map(_ => _.message).join('\\n');\n  return `Ooops, something went wrong with ${ctx}: \\n${errorMsg}`;\n};\nconst defaultSuccessMsg = (ctx: string) => `${ctx} success`;\n\nexport const notifyGqlResponse = <Data>(opts: APICTX<Data> = {}) => (\n  resp: ExecutionResult<Data>\n) => {\n  if (resp.errors && !opts.noShowError) {\n    const errorMsg = opts.errorMsg\n      ? opts.errorMsg(resp.errors)\n      : defaultErrorMsg(opts.ctx || 'this operation', resp.errors);\n    notify(errorMsg, { type: 'error' });\n  } else if (!resp.errors && resp.data && !opts.noShowSuccess) {\n    const successMsg = opts.successMsg\n      ? opts.successMsg(resp.data)\n      : defaultSuccessMsg(opts.ctx || '');\n    notify(successMsg, { type: 'success' });\n  }\n  return resp;\n};\n\nexport const notify = (content: ToastContent, options: ToastOptions) =>\n  toast(content, options);\n\nconst MN_CTX_FLD = 'MN_CTX_FLD';\nexport const mnCtx = <Data>(opts: APICTX<Data>) => ({ [MN_CTX_FLD]: opts });\nexport const getMnCtx = <Data>(context: any): undefined | APICTX<Data> =>\n  context ? context[MN_CTX_FLD] : undefined;\n\nexport const MngErrorLink = new ApolloLink((operation, forward) => {\n  const [, opType] = getOperationNameAndType(operation.query);\n  const mnCtx = operation.getContext()[MN_CTX_FLD] as Maybe<APICTX>;\n  const noShowSuccess =\n    opType === 'query' || (!mnCtx?.ctx && !mnCtx?.successMsg);\n\n  return forward(operation).map(\n    notifyGqlResponse({\n      noShowSuccess,\n      ctx: operation.operationName,\n      ...operation.getContext()[MN_CTX_FLD]\n    })\n  );\n});\n","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type MeQueryVariables = {};\n\n\nexport type MeQuery = (\n  { __typename: 'RootQueryType' }\n  & { me: Types.Maybe<(\n    { __typename: 'Me' }\n    & UseMeDataFragment\n  )> }\n);\n\nexport type UseMeDataFragment = (\n  { __typename: 'Me' }\n  & Pick<Types.Me, 'accountId'>\n  & { user: Types.Maybe<(\n    { __typename: 'User' }\n    & Pick<Types.User, 'id'>\n    & { profile: Types.Maybe<(\n      { __typename: 'Profile' }\n      & Pick<Types.Profile, 'name' | 'summary'>\n    )>, character: Types.Maybe<(\n      { __typename: 'Character' }\n      & Pick<Types.Character, 'username'>\n    )> }\n  )>, users: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'User' }\n    & Pick<Types.User, 'id'>\n    & { profile: Types.Maybe<(\n      { __typename: 'Profile' }\n      & Pick<Types.Profile, 'name' | 'summary'>\n    )>, character: Types.Maybe<(\n      { __typename: 'Character' }\n      & Pick<Types.Character, 'username'>\n    )> }\n  )>>>, flagsForModeration: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'Activity' }\n    & Pick<Types.Activity, 'id'>\n    & { verb: Types.Maybe<(\n      { __typename: 'Verb' }\n      & Pick<Types.Verb, 'verb' | 'verbDisplay'>\n    )>, subject: Types.Maybe<{ __typename: 'Category' } | { __typename: 'SpatialThing' } | { __typename: 'User' }>, object: Types.Maybe<{ __typename: 'Activity' } | { __typename: 'Category' } | { __typename: 'EconomicEvent' } | { __typename: 'Follow' } | { __typename: 'Intent' } | { __typename: 'Post' } | { __typename: 'Process' } | { __typename: 'SpatialThing' } | { __typename: 'Tag' } | { __typename: 'User' }> }\n  )>>>, userFeed: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'Activity' }\n    & Pick<Types.Activity, 'id'>\n    & { verb: Types.Maybe<(\n      { __typename: 'Verb' }\n      & Pick<Types.Verb, 'verb' | 'verbDisplay'>\n    )>, object: Types.Maybe<{ __typename: 'Activity' } | { __typename: 'Category' } | { __typename: 'EconomicEvent' } | { __typename: 'Follow' } | { __typename: 'Intent' } | { __typename: 'Post' } | { __typename: 'Process' } | { __typename: 'SpatialThing' } | { __typename: 'Tag' } | { __typename: 'User' }> }\n  )>>> }\n);\n\nexport const UseMeDataFragmentDoc = gql`\n    fragment UseMeData on Me {\n  accountId\n  user {\n    id\n    profile {\n      name\n      summary\n    }\n    character {\n      username\n    }\n  }\n  users {\n    id\n    profile {\n      name\n      summary\n    }\n    character {\n      username\n    }\n  }\n  flagsForModeration {\n    id\n    verb {\n      verb\n      verbDisplay\n    }\n    subject {\n      __typename\n    }\n    object {\n      __typename\n    }\n  }\n  userFeed {\n    id\n    verb {\n      verb\n      verbDisplay\n    }\n    object {\n      __typename\n    }\n  }\n}\n    `;\nexport const MeDocument = gql`\n    query me {\n  me {\n    ...UseMeData\n  }\n}\n    ${UseMeDataFragmentDoc}`;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\n\n\nexport interface MeQueryOperation {\n  operationName: 'me'\n  result: MeQuery\n  variables: MeQueryVariables\n  type: 'query'\n}\nexport const MeQueryName:MeQueryOperation['operationName'] = 'me'\n\nexport const MeQueryRefetch = (\n  variables:MeQueryVariables, \n  context?:any\n)=>({\n  query:MeDocument,\n  variables,\n  context\n})\n      \n","// import { withEncodedExtraInfo, WithExtraInfo } from 'fe/lib/extraInfo/extraInfo';\nimport { mnCtx } from 'fe/lib/graphql/ctx';\n// import { LMSPrefs } from 'fe/lib/moodleLMS/LMSintegration';\n// import { getMaybeUploadInput } from 'fe/mutation/upload/getUploadInput';\n// import Maybe from 'graphql/tsutils/Maybe';\n// import { UpdateProfileInput } from 'graphql/types.generated';\nimport { useMemo } from 'react';\nimport * as GQL from './me.generated';\n// type UserProfileExtraInfo = {\n//   LMS?: LMSPrefs;\n// };\n//\n// export type UpdateProfileInputWithEI = WithExtraInfo<UpdateProfileInput, UserProfileExtraInfo>;\n\n// export interface UpdateProfile {\n//   profile: UpdateProfileInputWithEI;\n//   icon?: Maybe<File | string>;\n//   image?: Maybe<File | string>;\n// }\nexport const useMe = () => {\n  // const client = useApolloClient();\n  const meQ = GQL.useMeQuery({ context: mnCtx({ noShowError: true }) });\n\n  // const [logoutMut, logoutStatus] = GQL.useMeLogoutMutation();\n  // const [updateProfileMutation, updateProfileMutationStatus] = GQL.useMeUpdateMyProfileMutation();\n\n  // const logout = useCallback(async () => {\n  //   if (logoutStatus.loading || !me?.user) {\n  //     return;\n  //   }\n  //   return logoutMut({\n  //     update: proxy => {\n  //       proxy.writeQuery<GQL.MeQuery>({\n  //         data: {\n  //           __typename: 'RootQueryType',\n  //           me: null\n  //         },\n  //         query: GQL.MeDocument\n  //       });\n  //     }\n  //   }).finally(() => push('/login'));\n  // }, [logoutStatus.loading, me, logoutMut, push]);\n\n  // const updateProfile = useCallback(\n  //   async ({ icon, image, profile }: UpdateProfile) => {\n  //     if (updateProfileMutationStatus.loading || !me?.user) {\n  //       return;\n  //     }\n  //     return updateProfileMutation({\n  //       variables: {\n  //         profile: withEncodedExtraInfo(profile, me.user),\n  //         icon: getMaybeUploadInput(icon, me.user.icon?.url),\n  //         image: getMaybeUploadInput(image, me.user.image?.url)\n  //       },\n  //       context: mnCtx({ ctx: 'Profile update' })\n  //     });\n  //   },\n  //   [updateProfileMutation, me, updateProfileMutationStatus]\n  // );\n  return useMemo(() => {\n    const me = meQ.data?.me;\n    const loading = meQ.loading;\n    return {\n      me,\n      // logout,\n      loading\n      // updateProfile\n    };\n  }, [meQ]);\n};\n","import React, { createContext, FC, useMemo, useReducer } from 'react';\n\nexport interface SideBarContext {\n  isOpen: boolean;\n  toggleOpen(): unknown;\n}\nexport const SideBarContext = createContext<SideBarContext>({\n  isOpen: true,\n  toggleOpen: () => true\n});\nexport const ProvideSideBarContext: FC = ({ children }) => {\n  const [isOpen, toggleOpen] = useReducer(is => !is, true);\n  const ctx = useMemo<SideBarContext>(\n    () => ({\n      isOpen,\n      toggleOpen\n    }),\n    [isOpen, toggleOpen]\n  );\n  return <SideBarContext.Provider value={ctx}>{children}</SideBarContext.Provider>;\n};\n","import React, { FC } from 'react';\nimport styled from 'ui/themes/styled';\nimport { INSTANCE_TAGLINE } from 'mn-constants'; // + instance_bg_img\nimport { GRAPHQL_ENDPOINT } from 'mn-constants';\nimport { Link } from 'react-router-dom';\nimport { LocaleContext } from 'context/global/localizationCtx';\nimport { logo_large_url } from 'mn-constants';\nexport interface Props {\n  isHome?: boolean;\n}\n\nconst LogoContainer: FC<Props> = props => {\n  const { i18n } = React.useContext(LocaleContext);\n\n  return (\n    <Header>\n      {props.isHome ? (\n        <Logo />\n      ) : (\n        <Link to=\"/\">\n          <Logo />\n        </Link>\n      )}\n      <Tagline>{i18n._(INSTANCE_TAGLINE)}</Tagline>\n      <Tagline>{GRAPHQL_ENDPOINT}</Tagline>\n    </Header>\n  );\n};\n\nexport default LogoContainer;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n`;\n\nconst Logo = styled.div`\n  background: url(\"${logo_large_url}\");\n  width: 300px;\n  display: inline-block;\n  height: 100px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nconst Tagline = styled.h5`\n  margin-top: 8px;\n  margin-bottom: 40px;\n  color: #000000a1;\n  font-weight: 500;\n`;\n","import styled from '../../themes/styled';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { typography } from 'mn-constants';\n\nexport const WrapperPanel = styled(Flex)`\n  width: 240px;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0 0 0 8px;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n  font-family: ${props => props.theme.fontFamily};\n  &.extra {\n    width: 100%;\n  }\n  ${media.lessThan('1095px')`\n  width: 290px;\n`};\n  ${media.lessThan('1005px')`\n   display: none;\n  `};\n`;\n\nexport const PanelInner = styled(Flex)`\n  position: sticky;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  z-index: 0;\n`;\n\nexport const Panel = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  align-items: stretch;\n  border: 0 solid black;\n  box-sizing: border-box;\n  flex-basis: auto;\n  flex-direction: column;\n  flex-shrink: 0;\n  margin: 0;\n  min-height: 0;\n  min-width: 0;\n  padding: 0;\n  position: relative;\n  z-index: 0;\n  margin-bottom: 8px !important;\n`;\n\nexport const PanelTitle = styled(Text)`\n  text-transform: capitalize;\n  border-bottom: ${props => props.theme.colors.border};\n  padding: 16px;\n  color: ${props => props.theme.colors.darker};\n  font-size: ${typography.size.s1};\n  font-weight: 600;\n`;\n\nexport const Nav = styled(Box)`\n  padding: 16px;\n`;\n\nexport const NavItem = styled(Text)`\ncolor: ${props => props.theme.colors.dark}\nfont-size: ${typography.size.s2};\na {\n  color: ${props => props.theme.colors.dark}\n  text-decoration: none;\n}\n  `;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { Input } from '@rebass/forms';\nimport { LocaleContext } from 'context/global/localizationCtx';\nimport { instance_bg_img, INSTANCE_DESCRIPTION, INSTANCE_PROMPT } from 'mn-constants'; // + instance_bg_img\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\nimport Button from 'ui/elements/Button';\nimport LogoContainer from 'ui/elements/Logo';\nimport { Panel, WrapperPanel } from 'ui/elements/Panel';\nimport styled from 'ui/themes/styled';\n\nlet tt = {\n  login: i18nMark('Sign in'),\n  placeholders: {\n    email: i18nMark('Enter your email'),\n    password: i18nMark('Enter your password')\n  }\n};\n\nexport interface Props {\n  formik: FormikHook<LoginFormValues>;\n}\n\nexport interface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nexport const Login: React.FC<Props> = ({ formik }) => {\n  const { i18n } = React.useContext(LocaleContext);\n\n  return (\n    <>\n      <Container>\n        <LoginWrapper>\n          <LogoContainer isHome={true} />\n          <FormWrapper>\n            <FormLogin>\n              <LoginForm>\n                <Box p={3}>\n                  <form onSubmit={formik.handleSubmit}>\n                    <Input\n                      placeholder={tt.placeholders.email}\n                      name=\"email\"\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                    />\n                    <Spacer />\n                    <Input\n                      type=\"password\"\n                      placeholder={tt.placeholders.password}\n                      name=\"password\"\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                    />\n                    <Button\n                      mt={3}\n                      variant=\"primary\"\n                      isSubmitting={formik.isSubmitting}\n                      isDisabled={formik.isSubmitting}\n                      type=\"submit\"\n                      style={{ width: '100%' }}\n                      onClick={formik.submitForm}\n                    >\n                      <Trans>Sign in</Trans>\n                    </Button>\n                  </form>\n                </Box>\n              </LoginForm>\n              <ResetPass variant=\"text\" my={3} mt={2}>\n                <Link to=\"/reset\">\n                  <Trans>Trouble logging in?</Trans>\n                </Link>\n              </ResetPass>\n            </FormLogin>\n            <Or>\n              <Trans>Or</Trans>\n            </Or>\n            <Browse mt={3} p={3}>\n              <Text variant=\"heading\">\n                <Trans>Browse this instance</Trans>\n              </Text>\n              <Text variant=\"text\" mt={2}>\n                {i18n._(INSTANCE_PROMPT)}\n              </Text>\n              <Link to={'/discover'}>\n                <Button mt={3} variant=\"outline\">\n                  <Trans>Browse</Trans>\n                </Button>\n              </Link>\n            </Browse>\n          </FormWrapper>\n          <Right>\n            <Link to=\"signup\">\n              <Button\n                mb={2}\n                style={{ width: '100%', height: '50px' }}\n                variant=\"outline\"\n                // onClick={this.props.handleSignup}\n              >\n                <Trans>Sign up</Trans>\n              </Button>\n            </Link>\n            <WrapperPanel className=\"extra\">\n              <Panel>\n                <Background />\n                <Infos p={3}>\n                  <Info>\n                    <Text variant=\"suptitle\">\n                      <Trans>Instance description</Trans>\n                    </Text>\n                    <Text mt={2} variant=\"text\">\n                      {INSTANCE_DESCRIPTION}\n                    </Text>\n                  </Info>\n                </Infos>\n              </Panel>\n            </WrapperPanel>\n          </Right>\n        </LoginWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n\nconst Background = styled(Box)`\n  background: url(\"${instance_bg_img}\");\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  padding: 50%;\n  width: 400px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`;\n\nconst Infos = styled(Box)``;\n\nconst Info = styled(Box)``;\n\nconst LoginWrapper = styled.div`\n  display: grid;\n  grid-column-gap: 16px;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas: 'header header' 'form image' 'footer footer';\n  ${media.lessThan('medium')`\n    grid-template-columns: 1fr;\n    grid-template-areas: 'header' 'image' 'form' 'footer';\n    padding: 16px\n  `};\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 900px;\n  margin-top: 60px;\n  padding-bottom: 50px;\n`;\n\nconst FormWrapper = styled.div`\n  grid-area: form;\n`;\n\nconst FormLogin = styled.div`\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  height: inherit;\n  border: 1px solid #dddfe2;\n  text-align: left;\n  height: fit-content;\n`;\n\nconst Right = styled(Box)`\n  .extra {\n    width: 100%;\n    margin-left: 0px;\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst Browse = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  a {\n    text-decoration: none;\n    color: ${props => props.theme.colors.mediumdark};\n    button {\n      color: ${props => props.theme.colors.mediumdark} !important;\n    }\n  }\n`;\n\nconst Or = styled.div`\n  position: relative;\n  color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n  margin-top: 24px;\n  &:before {\n    position: absolute;\n    content: '';\n    width: calc(50% - 24px);\n    left: 0;\n    top: 8px;\n    height: 1px;\n    display: block;\n    background: rgba(0, 0, 0, 0.45);\n  }\n  &:after {\n    position: absolute;\n    content: '';\n    width: calc(50% - 24px);\n    right: 0;\n    top: 8px;\n    height: 1px;\n    display: block;\n    background: rgba(0, 0, 0, 0.45);\n  }\n`;\n\nconst ResetPass = styled(Text)`\n  text-align: center;\n  text-decoration: underline;\n  cursor: pointer;\n  a {\n    color: inherit;\n  }\n`;\n\nconst LoginForm = styled.div`\n  margin: 0;\n  margin-bottom: 16px;\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n`;\n\nconst Spacer = styled.div`\n  width: 10px;\n  height: 10px;\n`;\n","import { DataProxy } from 'apollo-cache';\nimport * as GQL from './anon.generated';\nimport { MeDocument, MeQuery } from './me.generated';\nimport { mnCtx } from 'fe/lib/graphql/ctx';\n\nexport const useAnon = () => {\n  const updateMe = (proxy: DataProxy, me: any) => {\n    proxy.writeQuery<MeQuery>({\n      query: MeDocument,\n      data: {\n        __typename: 'RootQueryType',\n        me: me\n          ? {\n              __typename: 'Me' as 'Me',\n              ...me,\n              token: me.token,\n              user: {\n                __typename: 'User' as 'User',\n                ...me.user\n              }\n            }\n          : null\n      }\n    });\n  };\n\n  const [loginMut, loginStatus] = GQL.useAnonLoginMutation();\n  // const [resetPwdMut, resetPwdStatus] = GQL.useAnonResetPasswordMutation();\n  const [confirmEmailMut, confirmEmailStatus] = GQL.useConfirmEmailMutation();\n  // const [requestConfirmEmailMut, requestConfirmEmailStatus] = GQL.useRequestConfirmEmailMutation();\n  const [signUpMut, signUpStatus] = GQL.useAnonSignUpMutation();\n  //  const [usernameAvailableQ, usernameAvailableStatus] = GQL.useAnonUsernameAvailableLazyQuery();\n  // const [resetPwdReqMut, resetPwdReqStatus] = GQL.useAnonResetPasswordRequestMutation();\n  // return useMemo(() => {\n  // const resetPwd = ({ password, token }: { token: string; password: string }) => {\n  //     if (resetPwdStatus.loading) {\n  //         return;\n  //     }\n  //     return resetPwdMut({\n  //         variables: { password, token },\n  //         update: (proxy, resp) => updateMe(proxy, resp.data?.resetPassword?.me)\n  //     });\n  // };\n\n  const confirmEmail = (token: string) => {\n    if (confirmEmailStatus.loading) {\n      return;\n    }\n    return confirmEmailMut({\n      variables: { token },\n      update: (proxy, resp) => updateMe(proxy, resp.data)\n    });\n  };\n\n  const signUp = (registration: { email: string; password: string }) => {\n    if (signUpStatus.loading) {\n      return;\n    }\n\n    return signUpMut({\n      variables: { email: registration.email, password: registration.password },\n      update: (proxy, resp) => updateMe(proxy, resp.data)\n    });\n  };\n\n  // const resetPwdReq = (email: string) => {\n  //     if (resetPwdReqStatus.loading) {\n  //         return;\n  //     }\n  //     return resetPwdReqMut({\n  //         variables: { email }\n  //     });\n  // };\n\n  const login = (email: string, password: string) => {\n    if (loginStatus.loading) {\n      return;\n    }\n    return loginMut({\n      variables: { email, password },\n      context: mnCtx({ ctx: 'Login' }),\n      update: (proxy, resp) => updateMe(proxy, resp.data?.login)\n    });\n  };\n\n  // const usernameAvailable = (username: string) => {\n  //     return client=\n  //         .query<GQL.AnonUsernameAvailableQuery, GQL.AnonUsernameAvailableQueryVariables>({\n  //             query: GQL.AnonUsernameAvailableDocument,\n  //             variables: { username }\n  //         })\n  //         .then(_ => _.data.usernameAvailable);\n  // };\n\n  return {\n    login,\n    loginStatus,\n\n    // resetPwdReq,\n    // resetPwdReqStatus,\n\n    confirmEmail,\n    confirmEmailStatus,\n\n    signUp,\n    signUpStatus\n\n    // resetPwd,\n    // resetPwdStatus,\n\n    // usernameAvailable\n  };\n  //     }, [\n  //     signUpStatus,\n  //     signUpMut,\n  //     confirmEmailMut,\n  //     confirmEmailStatus,\n  //     loginMut,\n  //     loginStatus,\n  //     // resetPwdMut,\n  //     // resetPwdStatus,\n  //     // resetPwdReqMut,\n  //     // resetPwdReqStatus,\n  //     client\n  //     ]);\n  // };\n};\n","import { useFormik } from 'formik';\nimport React, { FC } from 'react';\nimport Login, { LoginFormValues } from 'ui/pages/login';\nimport * as Yup from 'yup';\nimport { useAnon } from 'fe/session/useAnon';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport { useHistory } from 'react-router';\n\nexport const validationSchema: Yup.ObjectSchema<LoginFormValues> = Yup.object<LoginFormValues>({\n  email: Yup.string()\n    .max(50)\n    .required(),\n  password: Yup.string()\n    .max(50)\n    .required()\n});\nexport interface Props {}\n\nconst loginPageTitle = t`Login`;\n\nexport const LoginPageHOC: FC<Props> = () => {\n  usePageTitle(loginPageTitle);\n  const history = useHistory();\n  const { login } = useAnon();\n  const formik = useFormik<LoginFormValues>({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    enableReinitialize: true,\n    onSubmit: ({ email, password }) =>\n      login(email, password)?.then(\n        resp =>\n          resp.data?.login?.currentUser?.id &&\n          history.push(`/user/${resp.data?.login?.currentUser?.id}`)\n      ),\n    validationSchema\n  });\n  return <Login formik={formik} />;\n};\n","import React, { ReactElement } from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport { useHistory } from 'react-router';\nimport { ChevronLeft } from 'react-feather';\nimport media from 'styled-media-query';\nimport { Link } from 'react-router-dom';\n\nexport interface Props {\n  HeaderBox?: ReactElement;\n  SearchBox: ReactElement;\n}\nexport const Guest: React.FC<Props> = ({ children, HeaderBox, SearchBox }) => {\n  const history = useHistory();\n\n  return (\n    <Page>\n      <SearchBar>\n        <Icon onClick={() => history.goBack()}>\n          <ChevronLeft size=\"20\" />\n        </Icon>\n        {SearchBox}\n        <Link to=\"/login\">Log in</Link>\n      </SearchBar>\n      <Header>{HeaderBox}</Header>\n      <Wrapper>{children}</Wrapper>\n      {/* <Footer /> */}\n    </Page>\n  );\n};\n\nconst Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst Header = styled(Box)`\n  ${media.lessThan('medium')`\n    display: none;\n  `}\n`;\n\nconst SearchBar = styled(Box)`\na {\n  height: 40px;\n  line-height: 40px;\n  padding: 0 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.lighter};\n  margin-right: 8px;\n}\nheight: 75px;\nline-height: 75px;\ntext-align: center;\nbackground: ${props => props.theme.colors.appInverse}\nborder-bottom: ${props => props.theme.colors.border};\ndisplay: flex;\nalign-items: center;\ninput {\n  width: 100%;\n  border-radius: 4px;\n  max-width: 500px;\n  height: 40px;\n  margin: 0;\n  border: 0;\n  background: ${props => props.theme.colors.app};\n}\n.ais-SearchBox {\n  border: 0;\n  height: auto;\n  margin: 0;\n  width: auto;\n  margin: 0;\n  margin-right: 8px;\n  margin-left: 8px;\n  flex:1;\n}\n${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst Page = styled(Box)`\n  height: 100vh;\n  grid-template-rows: 50px auto;\n  row-gap: 8px;\n  display: grid;\n`;\n\nconst Wrapper = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  height: calc(100vh - 66px);\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: 1fr;\n  column-gap: 8px;\n`;\n","import React, { FC } from 'react';\nimport { SearchBox as ISDSearchBox } from 'react-instantsearch-dom';\nimport { searchDisabled } from 'mn-constants';\n\nexport const SearchBox: FC = () => {\n  return searchDisabled ? null : <ISDSearchBox />;\n};\n","import { MainHeaderHOC } from 'HOC/modules/Header/Header';\nimport React, { FC } from 'react';\nimport { Guest, Props } from 'ui/templates/guest';\nimport { ProvideSideBarContext } from 'HOC/context/SideBar';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\n\nexport interface GuestTemplate {\n  withoutHeader?: boolean;\n}\nexport const GuestTemplate: FC<GuestTemplate> = ({ children, withoutHeader = false }) => {\n  const HeaderBox = withoutHeader ? undefined : <MainHeaderHOC />;\n  const props: Props = {\n    HeaderBox,\n    SearchBox: <SearchBox />\n  };\n  return (\n    <ProvideSideBarContext>\n      <Guest {...props}>{children}</Guest>\n    </ProvideSideBarContext>\n  );\n};\n","// import { useMe } from 'fe/session/useMe';\nimport React, { FC } from 'react';\ninterface Props {\n  to: string;\n}\n\nexport const RedirectAuthenticated: FC<Props> = ({ children, to }) => {\n  // const { me, loading } = useMe();\n\n  // if (loading) {\n  //   return null;\n  // }\n  //\n  // if (me) {\n  //   return <Redirect to={to} />;\n  // }\n\n  return <>{children}</>;\n};\nexport const RedirectAuthenticatedToHome: FC = ({ children }) => (\n  <RedirectAuthenticated to=\"/\">{children}</RedirectAuthenticated>\n);\n\nexport const RedirectAnonymous: FC<Props> = ({ children, to }) => {\n  // const { me, loading } = useMe();\n  // if (loading) {\n  //   return null;\n  // }\n  //\n  // if (!me) {\n  //   return <Redirect to={to} />;\n  // }\n\n  return <>{children}</>;\n};\n\nexport const RedirectAnonymousToLogin: FC = ({ children }) => (\n  <RedirectAnonymous to=\"/login\">{children}</RedirectAnonymous>\n);\n","import { generatePath, matchPath } from 'react-router';\nimport { RouteProps } from 'react-router-dom';\nimport { SimpleLink } from 'ui/helpers/SimpleLink';\ninterface MinimalActor {\n  isLocal: boolean;\n  canonicalUrl?: string;\n}\ntype LocationParams = { [paramName: string]: string | number | boolean | undefined } | undefined;\ntype QueryParams = LocationParams;\n\ninterface LocationHelp<Params extends LocationParams, Query extends QueryParams, State = any> {\n  getPath(params: Params, query: Query, pathIndex?: number): string;\n  is(path: string): boolean;\n  getSimpleLink(\n    params: Params,\n    query: Query,\n    actor?: MinimalActor | null,\n    pathIndex?: number\n  ): SimpleLink;\n}\n\nexport const locationHelper = <\n  Params extends LocationParams,\n  Query extends QueryParams,\n  State = any\n>(\n  routeProps: RouteProps\n): LocationHelp<Params, Query, State> => {\n  type ThisLocation = LocationHelp<Params, Query, State>;\n  const routePaths =\n    'string' === typeof routeProps.path\n      ? [routeProps.path]\n      : !routeProps.path?.length\n      ? []\n      : routeProps.path;\n\n  const is: ThisLocation['is'] = path => !!matchPath(path, routeProps);\n\n  const getPath: ThisLocation['getPath'] = (params, query, index = 0) => {\n    const usePath = routePaths[index];\n    //@ts-ignore\n    const searchParams = new URLSearchParams(query || {}).toString();\n    const url = generatePath(usePath, params);\n    return searchParams ? `${url}?${searchParams}` : url;\n  };\n\n  const getSimpleLink: ThisLocation['getSimpleLink'] = (params, query, actor = null, index = 0) => {\n    const internal = actor ? actor.isLocal : true;\n    const internalPath = getPath(params, query, index);\n    const url = internal ? internalPath : actor?.canonicalUrl || '#?#';\n    const simpleLink: SimpleLink = {\n      external: !internal,\n      url\n    };\n    return simpleLink;\n  };\n\n  return {\n    is,\n    getSimpleLink,\n    getPath\n  };\n};\n\n// interface LocationHelpHook<Params extends LocationParams, Query extends QueryParams, State = any> {\n//   is(): boolean;\n//   getSimpleLink(\n//     params: Params,\n//     query: Query,\n//     actor?: MinimalActor | null,\n//     pathIndex?: number\n//   ): SimpleLink;\n// }\n\n// export const useLocationHelp = <\n//   Params extends LocationParams,\n//   Query extends QueryParams,\n//   State = any\n// >(\n//   helper: LocationHelp<Params, Query, State>\n// ): LocationHelpHook<Params, Query, State> => {\n//   const history = useHistory();\n//   type ThisLocationHook = LocationHelpHook<Params, Query, State>;\n\n//   const is = useCallback(() => !!helper.is(history.location.pathname), [\n//     helper,\n//     history.location.pathname\n//   ]);\n\n//   const getSimpleLink: ThisLocationHook['getSimpleLink'] = useCallback(\n//     (params, query, actor = null, index = 0) => {\n//       const internal = actor ? actor.isLocal : true;\n//       const internalPath = helper.getPath(params, query, index);\n//       const url = internal ? internalPath : actor?.canonicalUrl || '#?#';\n//       const simpleLink: SimpleLink = {\n//         external: !internal,\n//         url\n//       };\n//       return simpleLink;\n//     },\n//     [helper]\n//   );\n\n//   return useMemo(\n//     () => ({\n//       getSimpleLink,\n//       is\n//     }),\n//     [getSimpleLink, is]\n//   );\n// };\n","import { LoginPageHOC } from 'HOC/pages/login/LoginPage';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\nimport React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { RedirectAuthenticatedToHome } from './wrappers/RedirectBySession';\nimport { locationHelper } from './lib/helper';\n\ninterface LoginPageRouter {}\nconst LoginPageRouter: FC<RouteComponentProps<LoginPageRouter>> = ({ match }) => {\n  return (\n    <RedirectAuthenticatedToHome>\n      <GuestTemplate withoutHeader>\n        <LoginPageHOC />\n      </GuestTemplate>\n    </RedirectAuthenticatedToHome>\n  );\n};\n\nexport const LoginPageRoute: RouteProps = {\n  exact: true,\n  path: '/login',\n  component: LoginPageRouter\n};\n\nexport const loginLocation = locationHelper<undefined, undefined>(LoginPageRoute);\n","import { useMe } from 'fe/session/useMe';\nimport React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContent, ToastOptions } from 'react-toastify';\nimport { Trans } from '@lingui/macro';\nimport { loginLocation } from 'routes/LoginPageRoute';\n\nexport interface Opts {\n  content?: ToastContent | (() => ToastContent);\n  opts?: ToastOptions;\n}\nconst defaultOpts: Opts = {\n  content: () => (\n    <Trans>\n      You need to <Link to={loginLocation.getPath(undefined, undefined)}>login</Link> for that\n    </Trans>\n  ),\n  opts: { type: 'warning' }\n};\n\nexport function useCallOrNotifyMustLogin<T, Args extends any[]>(\n  _fn: (...args: Args) => Promise<T>,\n  deps: any[],\n  opts?: Opts\n): (...args: Args) => Promise<T | null> {\n  const fn = useCallback(_fn, deps);\n  const notify = useNotifyMustLogin(opts);\n  return useCallback<(...args: Args) => Promise<T | null>>(\n    async (...args: Args) => {\n      return notify() ? null : fn(...args);\n    },\n    [fn, notify]\n  );\n}\n\nexport const useNotifyMustLogin = (options?: Opts) => {\n  const { me } = useMe();\n  const loggedIn = !!me?.user?.id;\n\n  return useCallback(() => {\n    const { content, opts } = { ...defaultOpts, ...options };\n    !loggedIn && toast(content, opts);\n    return true;\n  }, [options, loggedIn]);\n};\n","import * as React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\n\nconst sizes = {\n  default: '48px',\n  s: '32px',\n  m: '140px',\n  l: '200px'\n};\n\ntype Sizes = keyof typeof sizes;\n\nconst Wrapper = styled(Box)<{ bg?: string; size: Sizes }>`\n  font-family: ${props => props.theme.fontFamily};\n  border-radius: 4px;\n  height: ${props => sizes[props.size]};\n  min-width: ${props => sizes[props.size]};\n  background-color: ${props => (props.bg ? 'transparent' : props.theme.colors.light)};\n  background-image: url(\"${props => props.bg}\");\n  background-size: cover;\n  background-position: center center;\n  span {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    line-height: normal;\n    font-weight: 700;\n    ${props => props.theme.colors.mediumdark};\n  }\n`;\n\nconst Avatar: React.FC<{\n  src?: string;\n  initials?: string;\n  variant?: string;\n  size?: Sizes;\n}> = ({ size = 'default', src, initials, variant }) => (\n  <Wrapper size={size} bg={src}>\n    {initials && !src ? <span>{initials.substr(0, 2).toUpperCase()}</span> : null}\n  </Wrapper>\n);\n\nexport default Avatar;\n","import OutsideClickHandler from 'react-outside-click-handler';\nimport React, { FC } from 'react';\nimport { Box, Flex } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\n// import {  Flag, Upload, Copy } from 'react-feather';\n\ninterface Props {\n  close(): unknown;\n  orientation: string;\n}\nexport const Dropdown: FC<Props> = ({ orientation, close, children }) => (\n  <OutsideClickHandler onOutsideClick={close}>\n    <Wrapper className=\"dropdown\" orientation={orientation}>\n      {children}\n    </Wrapper>\n  </OutsideClickHandler>\n);\n\nconst Wrapper = styled(Box)<{ orientation: string }>`\n  text-align: left;\n  background: ${props => props.theme.colors.appInverse};\n  min-width: 210px;\n  display: block;\n  border-radius: 6px;\n  box-shadow: rgba(101, 119, 134, 0.2) 0 0 15px, rgba(101, 119, 134, 0.15) 0 0 3px 1px;\n  position: absolute;\n  top: ${props => (props.orientation === 'top' ? '8px' : 'auto')};\n  bottom: ${props => (props.orientation === 'bottom' ? '4px' : 'auto')};\n  left: auto;\n  right: ${props => (props.orientation === 'bottom' ? '0px' : '10px')};\n  z-index: 4050;\n`;\nexport const DropdownItem = styled(Flex)`\n  align-items: center;\n  cursor: pointer;\n  padding: 16px;\n  min-width: 100%;\n  width: max-content;\n  flex: 1;\n  &:first-of-type {\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n  }\n  &:hover {\n    div {\n      color: ${props => props.theme.colors.mediumdark} !important;\n    }\n    background: ${props => props.theme.colors.light} !important;\n  }\n`;\n","import * as React from 'react';\nimport {\n  Settings,\n  User,\n  Power,\n  Users,\n  Star,\n  Code,\n  Activity,\n  Package,\n  Plus,\n  PlusSquare\n} from 'react-feather';\nimport styled from '../../themes/styled';\nimport { Trans } from '@lingui/macro';\nimport { useHistory } from 'react-router';\nimport { Text, Flex } from 'rebass/styled-components';\nimport { Dropdown } from '../Dropdown';\n\nconst List = styled.div<{ lined?: boolean }>`\n  padding: 8px;\n  border-bottom: ${props => (props.lined ? '1px solid #dadada' : null)};\n`;\nconst Item = styled(Flex)`\n  line-height: 50px;\n  height: 50px;\n  cursor: pointer;\n  align-items: center;\n  & span {\n    display: inline-block;\n    margin-right: 8px;\n    .--rtl & {\n      margin-right: 0px;\n      margin-left: 8px;\n    }\n    & svg {\n      vertical-align: sub;\n    }\n  }\n  & a {\n    color: inherit !important;\n    text-decoration: none;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\n// const ItemButton = styled(Item)`\n//   border: 1px solid ${props => props.theme.colors.medium};\n//   border-radius: 4px;\n//   height: 34px;\n//   &:hover {\n//     background: ${props => props.theme.colors.light};\n//   }\n//   div {\n//     letter-spacing: 0;\n//   }\n// `;\n\nexport interface Props {\n  toggleDropdown: any;\n  userLink: string;\n}\n\nexport const DropdownSidebar: React.FC<Props> = ({ userLink, toggleDropdown }) => {\n  const { push } = useHistory();\n  return (\n    <Dropdown orientation={'top'} close={toggleDropdown}>\n      <List lined>\n        <Item variant=\"link\" onClick={() => push(userLink)}>\n          <span>\n            <User size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>My Profile</Trans>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}/communities`}>\n              <span>\n                <Users size={16} color={'#333'} />\n              </span>\n              <Trans>My Communities</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}/inventory`}>\n              <span>\n                <Package size={16} color={'#333'} />\n              </span>\n              <Trans>My Inventory</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}`}>\n              <span>\n                <Activity size={16} color={'#333'} />\n              </span>\n              <Trans>My Activity</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item>\n          <Text variant=\"text\">\n            <a href={`${userLink}/starred`}>\n              <span>\n                <Star size={16} color={'#333'} />\n              </span>\n              <Trans>My favorites</Trans>\n            </a>\n          </Text>\n        </Item>\n      </List>\n      <List>\n        <Item variant=\"link\" onClick={() => push('/settings')}>\n          <span>\n            <Settings size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Settings</Trans>\n          </Text>\n        </Item>\n        <Item variant=\"link\">\n          <Text variant=\"text\">\n            <a href=\"/terms\" target=\"_blank\">\n              <span>\n                <Code size={16} />\n              </span>\n              <Trans>Code of Conduct</Trans>\n            </a>\n          </Text>\n        </Item>\n        <Item variant=\"link\" onClick={() => {}}>\n          <span>\n            <Power size={16} strokeWidth={1} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Sign out</Trans>\n          </Text>\n        </Item>\n      </List>\n    </Dropdown>\n  );\n};\n\ntype TCreateDropdown = {\n  toggleDropdown: () => void;\n  createCommunity: any;\n  createIntent: () => void;\n  createResource: () => void;\n};\n\nexport const CreateDropdown: React.FC<TCreateDropdown> = ({\n  toggleDropdown,\n  createCommunity,\n  createIntent,\n  createResource\n}) => {\n  return (\n    <Dropdown orientation={'top'} close={toggleDropdown}>\n      <List lined>\n        <Item variant=\"link\" onClick={() => createCommunity()}>\n          <span>\n            <Users size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>New Community</Trans>\n          </Text>\n        </Item>\n        <Item variant=\"link\" onClick={() => createIntent()}>\n          <span>\n            <PlusSquare size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Create a new intent</Trans>\n          </Text>\n        </Item>\n        <Item variant=\"link\" onClick={() => createResource()}>\n          <span>\n            <Plus size={16} color={'#333'} />\n          </span>\n          <Text variant=\"text\">\n            <Trans>Create a new resource</Trans>\n          </Text>\n        </Item>\n      </List>\n    </Dropdown>\n  );\n};\n","// import { CommunityPage, CommunityPageTab } from 'HOC/pages/community/CommunityPage';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { locationHelper } from './lib/helper';\n\ninterface CommunityPageRouter {\n  communityId: string;\n  tab?: string;\n}\nconst CommunityPageRouter: FC<RouteComponentProps<CommunityPageRouter>> = ({ match }) => {\n  // const communityId = match.params.communityId;\n  // const maybeTabStr = match.params.tab;\n\n  // const tab =\n  //   maybeTabStr === 'timeline'\n  //     ? CommunityPageTab.Activities\n  //     : // : maybeTabStr === 'inventory'\n  //     // ? CommunityPageTab.Inventory\n  //     maybeTabStr === 'members'\n  //     ? CommunityPageTab.Members\n  //     : maybeTabStr === 'discussions'\n  //     ? CommunityPageTab.Discussions\n  //     : !maybeTabStr\n  //     ? // ? CommunityPageTab.Collections\n  //       // maybeTabStr\n  //       CommunityPageTab.Intents\n  //     : null;\n\n  // const props = useMemo<CommunityPage | null>(() => {\n  //   return tab === null\n  //     ? null\n  //     : {\n  //         communityId,\n  //         tab,\n  //         basePath: `/communities/${communityId}`\n  //       };\n  // }, [tab, communityId]);\n  //\n  // if (props === null) {\n  //   return <NotFoundHOC />;\n  // }\n\n  return (\n    <WithSidebarTemplate>\n      <>CommunityPage</>\n      {/*<CommunityPage {...props} />*/}\n    </WithSidebarTemplate>\n  );\n};\n\nexport const CommunityPageRoute: RouteProps = {\n  exact: true,\n  path: '/communities/:communityId/:tab(timeline|members|discussions|intents)?',\n  component: CommunityPageRouter\n};\n\ntype Tab = undefined | 'timeline' | 'members' | 'discussions' | 'intents';\nexport type CommunityPageRouterParams = {\n  communityId: string;\n  tab: Tab;\n};\n\nexport const communityLocation = locationHelper<CommunityPageRouterParams, undefined>(\n  CommunityPageRoute\n);\n","import { LocaleContext } from 'context/global/localizationCtx';\nimport { logo_small_url, prompt_signin } from 'mn-constants';\nimport { darken, ellipsis } from 'polished';\nimport React, { ReactElement, useState } from 'react';\nimport { ChevronDown, ChevronLeft, MapPin } from 'react-feather';\n// import { Link } from 'react-router-dom';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\n// import {Input} from '@rebass/forms'\nimport Avatar from 'ui/elements/Avatar';\nimport styled from 'ui/themes/styled';\n// import Avatar from 'ui/elements/Avatar';\nimport { DropdownSidebar, CreateDropdown } from './dropdown';\nimport { communityLocation, CommunityPageRouterParams } from 'routes/CommunityPageRoute';\n\nexport interface Props {\n  user: null | {\n    icon: string;\n    name: string;\n    link: string;\n  };\n  Search: ReactElement;\n  toggleSideBar(): unknown;\n  createCommunity(): unknown;\n  createIntent(): unknown;\n  createResource: any;\n  isOpenDropdown: boolean;\n  toggleDropdown(): unknown;\n}\n\nexport const MainHeader: React.FC<Props> = props => {\n  const history = useHistory();\n  const { i18n } = React.useContext(LocaleContext);\n  const location = useLocation();\n  const params = useParams<CommunityPageRouterParams>();\n  const isCommunityPage = communityLocation.is(location.pathname);\n  const [isCreateOpen, toggleCreate] = useState(false);\n\n  return (\n    <HeaderWrapper>\n      <Container>\n        <Left>\n          <Icon onClick={() => history.goBack()}>\n            <ChevronLeft size=\"20\" />\n          </Icon>\n          {/* <HamburgerIcon onClick={props.toggleSideBar}>\n            <Menu size=\"20\" />\n          </HamburgerIcon> */}\n          <HomeLink to={props.user ? '/' : '/discover'}>\n            <Avatar size=\"s\" src={logo_small_url} />\n          </HomeLink>\n          <Search>\n            {/* <Input /> */}\n            {props.Search}\n          </Search>\n          {isCommunityPage && (\n            <MapLink to={`/communities/${params.communityId}/map/`} title=\"Map\">\n              <MapPin size=\"20\" />\n            </MapLink>\n          )}\n        </Left>\n        <CreateNav>\n          {props.user && (\n            <NavItem sx={{ position: 'relative' }} alignItems=\"center\" onClick={toggleCreate}>\n              <HeaderName ml={2} variant=\"link\">\n                Create\n              </HeaderName>\n              <Right>\n                <ChevronDown size=\"20\" />\n              </Right>\n              {isCreateOpen && (\n                <CreateDropdown\n                  createCommunity={props.createCommunity}\n                  createResource={props.createResource}\n                  createIntent={props.createIntent}\n                  toggleDropdown={() => {\n                    toggleCreate(!isCreateOpen);\n                  }}\n                />\n              )}\n            </NavItem>\n          )}\n        </CreateNav>\n        <Header alignItems={'center'}>\n          {props.user ? (\n            <NavItem\n              sx={{ position: 'relative' }}\n              alignItems=\"center\"\n              onClick={props.toggleDropdown}\n            >\n              <Avatar\n                size=\"s\"\n                initials={props.user.name.substring(0, 2)}\n                src={props.user.icon}\n                variant=\"avatar\"\n              />\n              <HeaderName ml={2} variant=\"link\">\n                {props.user.name}\n              </HeaderName>\n              <Right ml={2}>\n                <ChevronDown size=\"20\" />\n              </Right>\n              {props.isOpenDropdown && (\n                <DropdownSidebar userLink={props.user.link} toggleDropdown={props.toggleDropdown} />\n              )}\n            </NavItem>\n          ) : (\n            <Box>\n              <Signin>\n                <Link to=\"/\">\n                  <Text variant=\"link\">{i18n._(prompt_signin)}</Text>\n                </Link>\n              </Signin>\n            </Box>\n          )}\n        </Header>\n      </Container>\n    </HeaderWrapper>\n  );\n};\n\nconst Container = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 120px 200px;\n`;\nconst Search = styled(Box)`\n  display: flex;\n  margin-top: 7px;\n  input {\n    width: 100%;\n    border-radius: 4px;\n    max-width: 500px;\n    height: 36px;\n    margin: 0;\n    border: 0;\n    background: ${props => props.theme.colors.app};\n  }\n`;\n\nconst MapLink = styled(Link)`\n  display: flex;\n  align-items: center;\n`;\n\nconst Right = styled(Box)`\n  color: ${props => props.theme.colors.medium};\n`;\n\nconst HeaderName = styled(Text)`\n  ${ellipsis('180px')};\n  color: ${props => props.theme.colors.darker};\n`;\n\nconst NavItem = styled(Flex)`\n  border-radius: 0px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n  }\n  ${media.lessThan('1280px')`\n    img {\n        margin-right: 0;\n    }\n  `};\n`;\n\nconst Header = styled(Box)`\n  cursor: pointer;\n  display: flex;\n  flex: 0 0 200px;\n  order: 2;\n  justify-content: flex-end;\n  align-items: center;\n  img {\n    min-width: 36px;\n    height: 36px;\n    border-radius: 36px;\n  }\n`;\nconst CreateNav = styled(Box)`\n  cursor: pointer;\n  display: flex;\n  flex: 0 0 120px;\n  order: 2;\n  justify-content: center;\n  align-items: center;\n  img {\n    min-width: 36px;\n    height: 36px;\n    border-radius: 36px;\n  }\n`;\nconst Signin = styled(NavItem)`\n  height: 30px;\n  line-height: 30px;\n  text-decoration: none;\n  padding: 0 8px;\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.lighter};\n  border-radius: 4px;\n  margin-top: 10px;\n  &:hover {\n    background: ${props => darken('0.1', props.theme.colors.primary)};\n  }\n  a {\n    text-decoration: none;\n  }\n  div {\n    text-decoration: none;\n    color: ${props => props.theme.colors.lighter};\n  }\n`;\nconst Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst Left = styled(Box)`\n  display: grid;\n  grid-template-columns: auto auto 1fr auto;\n  column-gap: 8px;\n`;\n\nconst HeaderWrapper = styled(Box)`\n  border-bottom: ${props => props.theme.colors.border};\n  height: 50px;\n  background: ${props => props.theme.colors.appInverse};\n`;\n\n// const HamburgerIcon = styled(Icon)`\n//   display: none;\n//   min-width: 40px;\n//   ${media.lessThan('medium')`\n//       display: flex;\n//   `};\n// `;\n\nconst HomeLink = styled(Link)`\n  margin-top: 9px;\n  cursor: pointer;\n`;\n","import { clearFix } from 'polished';\nimport React, { useCallback } from 'react';\nimport ReactDOM from 'react-dom';\n// import Icons from 'ui/atoms/icons.tsx'\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass/styled-components';\nimport { X } from 'react-feather';\nimport media from 'styled-media-query';\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(51, 60, 69, 0.95);\n  z-index: 9999999999999;\n  height: 100%;\n  justify-content: center;\n  overflow: auto;\n  cursor: pointer;\n`;\n\nexport const AlertWrapper = styled.div`\n  margin-top: 4px;\n  z-index: 99999;\n  position: relative;\n`;\n\nconst Dialog = styled.div`\n  width: 700px;\n  box-shadow: 0 2px 8px 3px rgba(0, 0, 0, 0.3);\n  z-index: 9999999999;\n  background-color: #ffffff;\n  padding: 0;\n  margin: 40px auto;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  margin-left: -350px;\n  border-radius: 3px;\n  outline: none;\n  transform: translateY(-50%);\n\n  ${media.lessThan('medium')`\n    width: auto;\n    left: 8px;\n    right: 8px;\n    margin: 0;\n  `};\n`;\n\nconst Action = styled.div`\n  ${clearFix()};\n  position: relative;\n`;\n\nconst Close = styled(Box)`\n  position: absolute;\n  right: -10px;\n  top: -10px;\n  cursor: pointer;\n  background: ${props => props.theme.colors.primary};\n  width: 24px;\n  height: 24px;\n  border-radius: 40px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 999999999;\n`;\n\nconst Content = styled.div`\n  ${clearFix()};\n  font-family: ${props => props.theme.fontFamily};\n`;\nexport const Container = styled.div`\n  font-family: ${props => props.theme.fontFamily};\n  min-height: 300px;\n  overflow-y: auto;\n  max-height: 96vh;\n  padding-bottom: 20px;\n`;\n\nexport const Actions = styled(Box)`\n  ${clearFix()};\n  padding: 0 16px;\n  & button {\n    float: right;\n  }\n`;\n\nexport const ActionsSimple = styled(Actions)`\n  ${clearFix()};\n  padding: 20px 0;\n`;\n\nexport const CounterChars = styled.div`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n  text-transform: uppercase;\n  text-align: center;\n  background: #d0d9db;\n  padding: 2px 10px;\n  border-radius: 12px;\n  font-weight: 600;\n  color: #fff;\n  letter-spacing: 1px;\n`;\n\nexport const ContainerForm = styled.div`\n  flex: 1;\n  ${clearFix()};\n  padding-top: 13px;\n  position: relative;\n  input {\n    height: 40px;\n    background: white;\n    border-radius: 2px;\n    border: ${props => props.theme.colors.border};\n  }\n  textarea {\n    padding-top: 16px;\n    line-height: 20px;\n    background: white;\n    border-radius: 2px;\n    border: ${props => props.theme.colors.border};\n    font-family: ${props => props.theme.fontFamily};\n  }\n`;\n\nexport const Header = styled.div`\n  padding: 0 16px;\n  padding-top: 16px;\n  // border-bottom: 1px solid ${props => props.theme.colors.lighter};\n  & h5 {\n    text-align: center !important;\n    margin: 0 !important;\n  }\n`;\n\nexport const Row = styled.div<{ big?: boolean }>`\n  ${clearFix()};\n  border-bottom: 1px solid ${props => props.theme.colors.lighter};\n  height: ${props => (props.big ? '180px' : 'auto')};\n  display: flex;\n  padding: 20px;\n  & textarea {\n    height: 120px;\n  }\n  & label {\n    width: 200px;\n    line-height: 40px;\n    ${media.lessThan('medium')`\n    width: 100%;\n  `};\n  }\n\n  ${media.lessThan('medium')`\n    display: block;\n\n  `};\n`;\n\nclass Portal extends React.Component {\n  static el = (() => {\n    const _el = document.createElement('div');\n    _el.setAttribute('id', 'modalPortal');\n    _el.style.display = 'none';\n    document.body.appendChild(_el);\n    return _el;\n  })();\n  componentDidMount() {\n    Portal.el.style.display = 'block';\n  }\n\n  componentWillUnmount() {\n    Portal.el.style.display = 'none';\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, Portal.el);\n  }\n}\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst Modal: React.FC<Props> = ({ closeModal, children }) => {\n  const handleCloseModal = useCallback(() => closeModal(), [closeModal]);\n  return (\n    <Portal>\n      <Background onClick={handleCloseModal} />\n      <Dialog>\n        <Action>\n          <Close onClick={handleCloseModal}>\n            <X color=\"#fff\" size={16} />\n          </Close>\n        </Action>\n        <Content>{children}</Content>\n      </Dialog>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","// import { isUrlString } from 'fe/lib/helpers/data';\nimport { Schema } from 'yup';\n\nexport const TestUrlOrFile: Parameters<Schema<File | string>['test']> = ([\n  'imageurl',\n  'need a file or an url',\n  (val: File | string) => {\n    return !val ? true : typeof val === 'string' ? true : val instanceof File;\n  }\n] as any) as Parameters<Schema<any>['test']>;\n","import { clearFix } from 'polished';\nimport { Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport styled from '../../themes/styled';\nimport { ContainerForm } from '../Modal';\n\nexport const CollectionContainerForm = styled(ContainerForm)`\n  position: relative;\n  padding-top: 0;\n\n  input {\n    background: #fbfbfb;\n    border: 0;\n    font-weight: 700;\n    width: 100%;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  textarea {\n    padding-top: 6px;\n    background: #fbfbfb;\n    border-radius: 2px;\n    border: 0;\n    height: 120px;\n    resize: none;\n  }\n\n  .d-flex {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n\n    ${media.lessThan('medium')`    \n            flex-direction: column;\n        `};\n\n    .item_col-6 {\n      flex-basis: calc(50% - 5px);\n    }\n\n    .align-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .item_photo {\n      margin-bottom: 10px;\n      flex-basis: 140px;\n      height: 140px;\n\n      .bopsip {\n        height: 140px !important;\n      }\n\n      ${media.lessThan('medium')`    \n          flex-basis: 100%;\n          order: 2\n        `};\n    }\n    .item_info {\n      margin-bottom: 10px;\n      flex-basis: calc(100% - 160px);\n\n      ${media.lessThan('medium')`    \n          flex-basis: 100%;\n          order: 1\n        `};\n    }\n  }\n  .d-flex-image.d-flex {\n    ${media.lessThan('medium')`\n      flex-direction: column;\n      align-items: unset;\n    `};\n  }\n  .dropzone {\n    ${media.lessThan('medium')`\n      min-Height: unset;\n      height: auto;\n    `};\n  }\n`;\n\nexport const MapWrapper = styled.div`\n  display: flex;\n  ${media.lessThan('medium')`\n      display: block;\n    `};\n`;\nexport const FlexBetweenContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n\n  & > div {\n    width: calc((100% - 20px) / 2);\n  }\n`;\n\nexport const HeroInfo = styled.div`\n  flex: 1;\n  position: relative;\n  ${clearFix()};\n  & h2 {\n    margin: 0;\n    line-height: 32px !important;\n    color: ${props => props.theme.colors.mediumdark};\n    ${media.lessThan('medium')`\n      margin-top: 8px;\n    `};\n  }\n  & p {\n    margin: 0;\n    color: rgba(0, 0, 0, 0.8);\n    margin-top: 8px;\n    color: ${props => props.theme.colors.mediumdark};\n  }\n  .--rtl & {\n    margin-right: 16px;\n    margin-left: 0px;\n  }\n`;\n\nexport const Hero = styled(Flex)`\n  width: 100%;\n  position: relative;\n  padding: 16px;\n  ${media.lessThan('medium')`\n  text-align: center;\n  display: block;\n`};\n`;\n\nexport const Title = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n`;\n\nexport const Description = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n`;\n","import styled from '../../themes/styled';\n\nexport const Container = styled('div')<any>`\n  margin: 0 10px 12px 0;\n`;\n\nexport const FormGroup = styled('div')<any>`\n  display: block;\n  position: relative;\n`;\nexport const FormLabel = styled('label')<any>`\n  display: block;\n  font-size: 10px;\n  color: #aaa;\n  font-family: 'Arial', sans-serif;\n  text-transform: uppercase;\n  margin-bottom: 2px;\n`;\n\nexport const FormStyled = styled('form')<any>`\n  .d-flex {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    & > div {\n      width: calc(50% - 5px);\n    }\n\n    button {\n      width: 100%;\n      background: #cdcdcd;\n    }\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  width: 100%;\n  margin-bottom: 16px;\n\n  > button {\n    width: 100%;\n  }\n\n  .event_btn {\n    height: 40px;\n    text-transform: uppercase;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    letter-spacing: 1px;\n  }\n`;\n","import { Dispatch, FC } from 'react';\nimport * as React from 'react';\nimport GooglePlacesAutocomplete, { geocodeByAddress } from 'react-google-places-autocomplete';\nimport styled from '../../themes/styled';\n\ntype LocationPikerProps = {\n  formik: any;\n  onSelect: Dispatch<any>;\n};\n\ninterface LatLng {\n  lat: number;\n  lng: number;\n}\n\ninterface AutocompletionRequest {\n  bounds?: [LatLng, LatLng];\n  componentRestrictions?: { country: string | string[] };\n  location?: LatLng;\n  offset?: number;\n  radius?: number;\n  types?: string[];\n}\n\nexport const LocationPiker: FC<LocationPikerProps> = ({ formik, onSelect }) => {\n  const autocompleteSelect = (address: any) => {\n    geocodeByAddress(address.label).then((results: any) => {\n      if (!results[0]) return;\n      onSelect(true);\n      formik.handleChange({ target: { name: 'name', value: results[0].formatted_address } });\n      formik.handleChange({ target: { name: 'lat', value: results[0].geometry.location.lat() } });\n      formik.handleChange({ target: { name: 'long', value: results[0].geometry.location.lng() } });\n    });\n  };\n\n  return (\n    <WrapperSelect>\n      <GooglePlacesAutocomplete\n        selectProps={{\n          placeholder: 'Please add your city and country location',\n          onChange: autocompleteSelect,\n          classNamePrefix: 'zenpub'\n        }}\n        onLoadFailed={error => console.error('Could not inject Google script', error)}\n        apiKey=\"AIzaSyBlbsdiikbCINjPLwD7NNwtsA8-vTcrr0g\"\n      />\n    </WrapperSelect>\n  );\n};\n\nconst WrapperSelect = styled('div')`\n  margin-bottom: 10px;\n  position: relative;\n  z-index: 100;\n  small {\n    display: block;\n    padding-top: 6px;\n    font-size: 10px;\n    color: #aaa;\n  }\n [class*=\"css-2b097c-container\"] > div > div,\n [class*=\"css-2b097c-container\"] > div {\n    display: flex;\n    height: 36px;\n    margin: 0;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n  }\n \n  .css-2b097c-container > div {\n    border-color: #05244f !important;\n    box-shadow: none;\n\n    small {\n      display: none;\n    }\n  }\n  \n  .zenpub__menu > div {\n    display: block !important;\n    background: #fff;\n    min-height: 120px;\n    min-width: 100%;\n    padding: 20px;\n    z-index: 200;\n    box-shadow: 0px 2px 4px 0px #0000001f;\n  }\n  .zenpub__menuList > * ,\n  .zenpub__menuList > * > * {\n     display: block;\n  }\n  .zenpub__input {\n    width: 100%;\n    height: 36px;\n    margin: 0;\n  }\n  .select__control {\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n  }\n  cursor: 'pointer';\n  }\n`;\n","import * as React from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\n\nconst Wrapper = styled(Box)`\n  border-radius: 4px;\n  line-height: 26px;\n  padding: 8px 16px;\n  min-height: 58px;\n  font-family: ${props => props.theme.fontFamily};\n  font-weight: 600;\n`;\nconst Alert: React.FC<{ variant: string }> = ({ variant, children }) => (\n  <Wrapper variant={variant || 'info'}>{children}</Wrapper>\n);\n\nexport default Alert;\n","import React, { FC } from 'react';\nimport styled from 'ui/themes/styled';\nimport Alert from 'ui/elements/Alert';\n\nexport interface Props {\n  id: string | undefined;\n  name: string;\n  type?: string;\n  onChange: any;\n  placeholder?: string;\n  label?: string;\n  readOnly?: boolean;\n  value?: string | number;\n  disabled?: boolean;\n  hint?: {\n    class: 'error' | 'success' | 'disabled';\n    value: string;\n  };\n}\n\nconst CustomInput: FC<Props> = ({\n  id,\n  name,\n  type = 'text',\n  readOnly = false,\n  onChange,\n  placeholder = '',\n  label,\n  value = '',\n  hint = { class: 'error', value: '' },\n  disabled = false\n}) => (\n  <FieldWrapper disabled={disabled}>\n    <label htmlFor={id}>{label}</label>\n    {type !== 'textarea' && (\n      <input\n        id={id}\n        type={type}\n        name={name}\n        readOnly={readOnly}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    )}\n    {type === 'textarea' && (\n      <textarea\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    )}\n    <span className={`hint ${hint.class}`}>{hint.value}</span>\n  </FieldWrapper>\n);\n\nexport default CustomInput;\n\nconst FieldWrapper = styled('div')<any>`\n  textarea,\n  input {\n    opacity: ${props => (props.disabled === true ? '0.7' : '1')};\n    cursor: ${props => (props.disabled === true ? 'default' : 'text')};\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n    display: block;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 10px;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n    margin-bottom: 10px;\n  }\n  textarea {\n    padding: 10px;\n    height: 120px;\n\n    &#eventNote {\n      height: 60px;\n    }\n  }\n`;\n\nexport const CustomAlert = styled(Alert)`\n  background-color: transparent !important;\n  color: #ff5a5f !important;\n  text-align: right !important;\n  line-height: 1 !important;\n`;\n","import React, { FC } from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer } from 'react-leaflet';\nimport './leaflet.css';\nimport styled from 'styled-components';\nimport { theme } from 'ui/themes/default.theme';\nimport { divIcon, LatLngBounds, LatLngLiteral } from 'leaflet';\nimport { MapPin } from 'react-feather';\nimport ReactDOMServer from 'react-dom/server';\nimport media from 'styled-media-query';\n\nexport interface MarkerProps {\n  position: LatLngLiteral;\n  popup?: React.ReactNode;\n}\n\nexport interface MapProps {\n  tileUrl?: string;\n  tileAttribution?: string;\n  center?: LatLngLiteral;\n  markers?: Array<MarkerProps>;\n  zoom?: number;\n}\n\nconst defaultAttribution =\n  '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors';\nconst defaultTileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\nconst mapPin = ReactDOMServer.renderToString(\n  <MapPin size=\"30\" color={theme.colors.primary} fill={theme.colors.secondary} />\n);\nconst markerIcon = divIcon({ className: 'maker--pin', html: mapPin, iconSize: [30, 30] });\n\nconst getCenter = (markers: Array<MarkerProps>, center?: MapProps['center']) => {\n  if (center) {\n    return center;\n  } else if (markers.length === 1) {\n    return markers[0].position;\n  } else if (markers.length > 1) {\n    const bounds = new LatLngBounds(markers.map(({ position }) => [position.lat, position.lng]));\n    return bounds.getCenter();\n  }\n};\n\nexport const Map: FC<MapProps> = ({\n  center,\n  zoom = 20,\n  markers = [],\n  tileAttribution = defaultAttribution\n}) => {\n  const mapCenter = getCenter(markers, center);\n\n  return (\n    <Wrapper>\n      {mapCenter && (\n        <LeafletMap center={mapCenter} zoom={zoom} style={{ height: '100%', width: '100%' }}>\n          <TileLayer url={defaultTileUrl} attribution={tileAttribution} />\n          {markers.map(({ position, popup }, i) => (\n            <Marker icon={markerIcon} key={i} position={position}>\n              {popup && <Popup>{popup}</Popup>}\n            </Marker>\n          ))}\n        </LeafletMap>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 400px;\n  position: relative;\n  z-index: 0;\n\n  ${media.lessThan('medium')`\n    height: 200px;\n  `};\n`;\n\nexport default Map;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { FC, useState } from 'react';\nimport * as React from 'react';\nimport { CustomAlert, Heading } from 'rebass/styled-components';\nimport { CollectionContainerForm } from '../../modules/CreateCollectionPanel/style';\nimport { FormGroup, FormLabel } from '../../modules/EconomicEventManager/styles';\nimport styled from '../../themes/styled';\nimport Button from '../Button';\nimport { LocationPiker } from '../LocationPiker';\nimport Input from '../Input';\nimport { Map } from '../Map';\nimport { Container, CounterChars, Header } from 'ui/modules/Modal';\nimport { Hero, HeroInfo } from 'ui/modules/CreateCollectionPanel/style';\nimport media from 'styled-media-query';\n\nexport type LocationPanelProps = {\n  formik: any;\n};\n\nexport const LocationPanel: FC<LocationPanelProps> = ({ formik }) => {\n  const [showLocationPanel, setShowLocationData] = useState(false);\n\n  return (\n    <Container>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          formik.handleSubmit();\n        }}\n      >\n        <Header>\n          <Heading m={2}>\n            <Trans>{i18nMark('Create Location')}</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <WrapperSelect>\n              <CollectionContainerForm>\n                <LocationPiker formik={formik} onSelect={setShowLocationData} />\n              </CollectionContainerForm>\n              {showLocationPanel && (\n                <div className=\"d-flex\">\n                  <div className=\"item_col-6\">\n                    <Map\n                      center={{ lat: formik.values.lat, lng: formik.values.long }}\n                      zoom={12}\n                    ></Map>\n                  </div>\n                  <div className=\"item_col-6\">\n                    <FormGroup>\n                      <FormLabel>{i18nMark('Name')}</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        disabled={formik.isSubmitting}\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Location name')}\n                        value={formik.values.name}\n                      />\n                      <CounterChars>{60 - formik.values.name.length}</CounterChars>\n                    </FormGroup>\n                    {formik.errors.name && (\n                      <CustomAlert variant=\"negative\">{formik.errors.name}</CustomAlert>\n                    )}\n                    <div className=\"coordinate-container\">\n                      <div className=\"coordinate\">\n                        <FormGroup>\n                          <FormLabel>{i18nMark('Lat')}</FormLabel>\n                          <Input\n                            type=\"text\"\n                            id=\"lat\"\n                            name=\"lat\"\n                            readOnly={true}\n                            disabled={formik.isSubmitting}\n                            onChange={formik.handleChange}\n                            placeholder={i18nMark('Name')}\n                            value={formik.values.lat}\n                          />\n                        </FormGroup>\n                      </div>\n\n                      <div className=\"coordinate\">\n                        <FormGroup>\n                          <FormLabel>{i18nMark('Long')}</FormLabel>\n                          <Input\n                            type=\"text\"\n                            id=\"long\"\n                            name=\"long\"\n                            readOnly={true}\n                            disabled={formik.isSubmitting}\n                            onChange={formik.handleChange}\n                            value={formik.values.long}\n                          />\n                        </FormGroup>\n                      </div>\n                    </div>\n\n                    <FormGroup>\n                      <FormLabel>note</FormLabel>\n                      <Input\n                        id=\"note\"\n                        type=\"textarea\"\n                        name=\"note\"\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Note')}\n                        value={formik.values.note}\n                      />\n                    </FormGroup>\n                    {formik.errors.note && (\n                      <CustomAlert variant=\"negative\">{formik.errors.note}</CustomAlert>\n                    )}\n\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={formik.handleSubmit}\n                      style={{ width: '100%' }}\n                    >\n                      <Trans>Create Location</Trans>\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </WrapperSelect>\n          </HeroInfo>\n        </Hero>\n      </form>\n    </Container>\n  );\n};\n\nconst WrapperSelect = styled('div')`\n  margin-bottom: 10px;\n  \n  .d-flex {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n    ${media.lessThan('medium')`\n        display: block;\n      `};\n\n    .item_col-6 {\n      flex-basis: calc(50% - 5px);\n      ${media.lessThan('medium')`\n         flex-basis: unset;\n      `};\n    }\n    \n    .coordinate-container {\n      display: flex;\n      justify-content: space-between;\n      align-items: stretch;\n    }\n    .coordinate {\n      flex-basis: calc(50% - 5px);\n    }\n  }\n  small {\n    display: block;\n    padding-top: 6px;\n    font-size: 10px;\n    color: #aaa;\n  }\n [class*=\"css-2b097c-container\"] > div > div,\n [class*=\"css-2b097c-container\"] > div {\n    display: flex;\n    height: 36px;\n    margin: 0;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n  }\n \n  .css-2b097c-container > div {\n    border-color: #05244f !important;\n    box-shadow: none;\n\n    small {\n      display: none;\n    }\n  }\n  \n  .zenpub__menu {\n    background: #fff;\n    max-height: 200px;\n    padding: 20;\n    box-shadow: 0px 2px 4px 0px #0000001f;\n  }\n  \n  .zenpub__input {\n    width: 100%;\n    height: 36px;\n    margin: 0;\n  }\n  .select__control {\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n  }\n  cursor: 'pointer';\n  }\n`;\n","import { useFormik } from 'formik';\nimport React, { Dispatch, FC } from 'react';\nimport { BasicCreateCollectionFormValues } from 'ui/modules/CreateCollectionPanel';\nimport * as Yup from 'yup';\nimport { TestUrlOrFile } from 'HOC/lib/formik-validations';\n// import { useAddLocation } from '../../../fe/location/add/useAddLocation';\n\nimport { LocationPanel, LocationPanelProps } from '../../../ui/elements/LocationPanel';\n\ntype CreateLocationValues = {\n  name: string;\n  lat: number;\n  long: number;\n  note: string;\n};\n\nexport const validationSchema: Yup.ObjectSchema<BasicCreateCollectionFormValues> = Yup.object<\n  BasicCreateCollectionFormValues\n>({\n  name: Yup.string()\n    .min(2)\n    .max(60)\n    .required(),\n  summary: Yup.string().max(500),\n  icon: Yup.mixed<string | File>().test(...TestUrlOrFile)\n});\n\nexport interface Props {\n  done: Dispatch<boolean>;\n}\n\nexport const CreateLocationPanelHOC: FC<Props> = ({ done }) => {\n  // const { createLocation } = useAddLocation();\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(60, 'Too Long!')\n      .required('Required'),\n    note: Yup.string().max(500, 'Too Long!')\n  });\n\n  const formik = useFormik<any>({\n    initialValues: {\n      name: '',\n      lat: '',\n      long: '',\n      note: ''\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n\n    onSubmit: (values: CreateLocationValues) => {\n      // return createLocation({\n      //   name: values.name,\n      //   lat: values.lat,\n      //   long: values.long,\n      //   note: values.note\n      // })\n      //   .then((response: any) => {\n      //     if (!response.errors) {\n      //       done(false);\n      //       toast.success('Location was created', {\n      //         position: 'top-right',\n      //         transition: Slide,\n      //         autoClose: 3000,\n      //         hideProgressBar: false,\n      //         closeOnClick: true,\n      //         pauseOnHover: true\n      //       });\n      //     }\n      //   })\n      //   .catch((error: any) => console.log(error));\n    }\n  });\n\n  const CreateResourcePanelProps: LocationPanelProps = {\n    formik\n  };\n\n  return <LocationPanel {...CreateResourcePanelProps} />;\n};\n","import Select from 'react-select';\nimport React, { FC, useState } from 'react';\nimport styled from 'ui/themes/styled';\nimport { darken, lighten, transitions } from 'polished';\nimport { Props } from './select';\n\nconst WrapperSelect = styled(Select)`\n  margin-bottom: 10px;\n  small {\n    display: block;\n    padding-top: 6px;\n    font-size: 10px;\n    color: #aaa;\n  }\n  b,\n  .select__value-container,\n  .select__single-value {\n    display: block;\n    font-family: 'Arial', sans-serif;\n    font-weight: 600;\n    font-size: 14px;\n    color: #666666;\n    letter-spacing: 1px;\n  }\n  .select__control > div {\n    height: 36px;\n  }\n  .select__value-container > div:not(.select__single-value) {\n    height: 36px;\n    padding: 0;\n    margin: 0;\n    line-height: 36px;\n  }\n  .select__value-container {\n    height: 36px;\n    padding: 0 10px;\n  }\n  .select__control--menu-is-open,\n  .select__control--is-focused {\n    border-color: #05244f !important;\n    box-shadow: none;\n\n    small {\n      display: none;\n    }\n  }\n  .select__control {\n    border: 1px solid #05244f;\n    border-radius: 4px;\n    height: 40px;\n  }\n  ${transitions('background, 0.2s')};\n  margin: '0 10px 0 0 ';\n\n  cursor: 'pointer';\n  .select__option--is-disabled {\n    opacity: 0.5;\n  }\n  &:hover && not:['disabled'] {\n    background: ${props =>\n      props.variant === 'primary' || props.variant === 'danger'\n        ? darken('0.1', props.theme.colors.primary)\n        : lighten('0.3', props.theme.colors.primary)};\n  }\n`;\n\nexport const CustomSelect: FC<Props> = ({\n  onInputChange,\n  onSelect,\n  disabled = false,\n  variant,\n  placeholder = '',\n  name,\n  options,\n  id,\n  value,\n  components,\n  noChange,\n  openMenuOnClick\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const optionsList = options\n    ? options.map(el => {\n        return el.isDisabled\n          ? {\n              id: el.id,\n              value: el.label,\n              isDisabled: el.isDisabled,\n              label: (\n                <span>\n                  <b>{el.label}</b>\n                  {el.note && <small>{el.note}</small>}\n                </span>\n              )\n            }\n          : {\n              id: el.id,\n              value: el.label,\n              label: (\n                <span>\n                  <b>{el.label}</b>\n                  {el.note && <small>{el.note}</small>}\n                  {el.displayUsername && el.id === value.id && <small>{el.displayUsername}</small>}\n                </span>\n              )\n            };\n      })\n    : [];\n\n  return (\n    <WrapperSelect\n      onChange={(option: any) => {\n        onSelect(name, {\n          id: option?.id,\n          label: option?.value,\n          displayUsername: option?.displayUsername\n        });\n        setIsOpen(false);\n      }}\n      variant={variant}\n      placeholder={placeholder}\n      disabled={disabled}\n      isOptionDisabled={(option: any) => option.isDisabled}\n      onInputChange={(value: string) => {\n        if (!noChange && value.length > 2) {\n          if (onInputChange) {\n            onInputChange(name, value);\n          }\n          setIsOpen(true);\n        } else if (!noChange && value.length < 3) {\n          setIsOpen(false);\n        }\n      }}\n      className=\"basic-single\"\n      classNamePrefix=\"select\"\n      value={optionsList.find(el => el.id === value?.id) || null}\n      isDisabled={false}\n      isLoading={false}\n      isClearable={true}\n      isRtl={false}\n      isSearchable={true}\n      name={name}\n      id={id}\n      options={optionsList}\n      components={components}\n      openMenuOnClick={openMenuOnClick}\n      menuIsOpen={isOpen}\n      onFocus={() => {\n        noChange && setIsOpen(true);\n      }}\n      onBlur={() => {\n        setIsOpen(false);\n      }}\n    />\n  );\n};\n","import { IntentActions } from '../../modules/EconomicEventManager';\n\nexport interface Props {\n  onSelect: (name: string, option: IntentActions) => void;\n  onInputChange?: (name: string, value: string) => void;\n  options?: IntentActions[];\n  disabled?: boolean;\n  placeholder?: string;\n  variant: string;\n  id: string | number;\n  name: string;\n  value: IntentActions;\n  components?: any;\n  noChange?: boolean;\n  openMenuOnClick?: boolean;\n}\n\n// You may pass variables as a string and get this string in option label\n// If you want to get a complex string consisting of several variables\n// pass the array of variables in the order they are used in the template and the template string\nexport const setSelectOption = (\n  arr: any[] | null | undefined,\n  variables: string | { variables: string[]; template: string }\n) => {\n  if (typeof variables === 'string') {\n    return arr?.length\n      ? arr.map((el: any) => ({\n          id: el.id,\n          label: el[variables],\n          displayUsername: el.displayUsername\n        }))\n      : [];\n  }\n  const getLabel = (element: any) => {\n    let label = `${variables.template}`;\n\n    variables.variables.forEach(variable => {\n      label = label.replace(variable, `${element[variable]}`);\n    });\n\n    return label;\n  };\n\n  return arr?.length\n    ? arr.map((el: any) => {\n        return {\n          id: el.id,\n          label: getLabel(el)\n        };\n      })\n    : [];\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Image, File } from 'react-feather';\nimport { Box, Flex } from 'rebass/styled-components';\n// import { UploadCloud } from 'react-feather';\n// import { Trans } from '@lingui/macro';\nimport styled from 'ui/themes/styled';\n// import { useInstanceInfoQuery } from 'fe/instance/info/useInstanceInfo.generated';\n// import { Trans } from '@lingui/macro';\n// import Alert from 'ui/elements/Alert';\n// import { AlertWrapper } from '../Modal';\n\ninterface Props {\n  initialUrl: string | undefined | null;\n  onFileSelect(file: File | undefined): unknown;\n  uploadType?: 'resource' | string;\n  filePattern?: FilePattern;\n}\n\ntype FilePattern = 'image/*' | '*';\n\nconst DropzoneArea: React.FC<Props> = ({ initialUrl, uploadType, onFileSelect, filePattern }) => {\n  const [fileUrl, setFileUrl] = useState<undefined | null | string>();\n  // const { data: instanceInfoData } = useInstanceInfoQuery();\n  // const uploadMaxBytes = instanceInfoData?.instance?.uploadMaxBytes || 0;\n\n  const [currentFile, setCurrentFile] = useState<{\n    file: File;\n    localUrl: string;\n  }>();\n\n  useEffect(\n    () => () => {\n      fileUrl && URL.revokeObjectURL(fileUrl);\n    },\n    [fileUrl]\n  );\n\n  useEffect(() => {\n    setFileUrl(initialUrl);\n  }, [initialUrl]);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n    // rejectedFiles,\n    // acceptedFiles\n  } = useDropzone({\n    accept: filePattern,\n    // maxSize: uploadMaxBytes,\n    onDrop: acceptedFiles => {\n      const file = acceptedFiles[0];\n      if (!file) {\n        onFileSelect(void 0);\n        setCurrentFile(void 0);\n        return;\n      }\n      onFileSelect(file);\n      setCurrentFile({ file, localUrl: URL.createObjectURL(file) });\n    }\n  });\n\n  return (\n    <>\n      <Box sx={{ height: '100%' }} {...getRootProps({ className: 'dropzone' })}>\n        <InfoContainer className={isDragActive ? 'active' : 'none'}>\n          {!currentFile && uploadType === 'resource' ? (\n            <Thumb className=\"thumb\">\n              <WrapperIcon>\n                <File size={30} strokeWidth={1} color={'rgba(250,250,250, .5)'} />\n              </WrapperIcon>\n            </Thumb>\n          ) : null}\n          {uploadType !== 'resource' ? (\n            <Thumb className=\"thumb\">\n              <WrapperIcon>\n                <Image size={30} strokeWidth={1} color={'rgba(250,250,250, .5)'} />\n              </WrapperIcon>\n              <Img\n                style={{\n                  backgroundImage: `url(\"${currentFile ? currentFile.localUrl : fileUrl}\")`\n                }}\n              />\n            </Thumb>\n          ) : null}\n          {!currentFile ? null : uploadType === 'resource' ? (\n            currentFile.file.type.indexOf('image') === -1 ? (\n              // <WrapperFile>\n              <FileThumb>\n                <File size={20} />\n                {currentFile && <FileName>{currentFile.file.name}</FileName>}\n              </FileThumb>\n            ) : (\n              // </WrapperFile>\n              <WrapperFile>\n                <Thumb>\n                  <WrapperIcon>\n                    <Image size={30} strokeWidth={1} color={'rgba(250,250,250, .5)'} />\n                  </WrapperIcon>\n                  <Img\n                    style={{\n                      backgroundImage: `url(\"${currentFile.localUrl}\")`\n                    }}\n                  />\n                </Thumb>\n                <FileName>{currentFile && currentFile.file.name}</FileName>\n              </WrapperFile>\n            )\n          ) : null}\n\n          <input {...getInputProps()} />\n\n          {/* <UploadCloud size={30} strokeWidth={1} />\n          {isDragActive ? (\n            <Info>\n              <Trans>Drop the file here ...</Trans>\n            </Info>\n          ) : (\n            <Info>\n              <Trans>Drag 'n' drop a file here, or click to select file</Trans>\n            </Info>\n          )} */}\n          {/* rejectedFile ? (\n            <AlertWrapper>\n              <Alert variant=\"negative\">\n                <Trans>\n                  File {rejectedFile.name} too big, can't exceed{' '}\n                  {Math.floor(uploadMaxBytes / 1024 / 1024)}MB\n                </Trans>\n              </Alert>\n            </AlertWrapper>\n          ) : null */}\n        </InfoContainer>\n      </Box>\n    </>\n  );\n};\n\nexport default DropzoneArea;\n\nconst InfoContainer = styled.div`\n  background: ${props => props.theme.colors.lighter};\n  border-radius: 4px;\n  text-align: center;\n  cursor: pointer;\n  box-sizing: border-box;\n  height: inherit;\n  margin: 0px;\n  &.active {\n    border: 1px dashed ${props => props.theme.colors.primary};\n  }\n  .;\n`;\n\nconst FileName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 5px;\n  font-weight: bold;\n  text-align: center;\n  font-style: italic;\n`;\n\nconst WrapperIcon = styled(Flex)`\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  border-radius: 100px;\n  position: absolute;\n  left: 50%;\n  margin-left: -20px;\n  top: 50%;\n  margin-top: -20px;\n  z-index: 9;\n`;\n\nconst WrapperFile = styled.div`\n  padding: 20px 10px;\n  border-radius: 4px;\n`;\n\nconst FileThumb = styled.div`\n  padding: 20px 10px;\n  border-radius: 4px;\n  background: rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Thumb = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  position: relative;\n  height: 140px;\n  &:after {\n    position: absolute;\n    content: '';\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-radius: 4px;\n    display: block;\n    background: rgba(0, 0, 0, 0.3);\n  }\n  &:hover {\n    &:after {\n      background: rgba(0, 0, 0, 0.1);\n    }\n  }\n  svg {\n    width: 40px;\n  }\n`;\n\nconst Img = styled(Box)`\n    display: block;\n    border-radius: 4px;\n    height: inherit;\n    background-size: cover;\n}\n`;\n","import { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport React, { FC } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Box, Heading } from 'rebass/styled-components';\nimport Button from 'ui/elements/Button';\nimport { FormikHook } from 'ui/@types/types';\nimport { CustomSelect as Select } from 'ui/elements/CustomSelect';\n// import { useMe } from '../../../fe/session/useMe';\nimport * as Types from '../../../graphql/types.generated';\n// import { EconomicResource } from '../../../HOC/pages/inventory/InventoryPage';\nimport { setSelectOption } from '../../elements/CustomSelect/select';\nimport styled from '../../themes/styled';\nimport DropzoneArea from '../DropzoneModal';\nimport { IntentActions } from '../EconomicEventManager';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport Input, { CustomAlert } from '../../elements/Input';\nimport { Actions, Container, CounterChars, Header } from 'ui/modules/Modal';\nimport { Hero, CollectionContainerForm, HeroInfo } from '../CreateCollectionPanel/style';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport type CreateIntentFormValues = {\n  name: string;\n  note?: string;\n  eventNote?: string;\n  hasPointInTime: string;\n  atLocation: IntentActions;\n  action: IntentActions;\n  provider: IntentActions;\n  receiver: IntentActions;\n  hasUnit: IntentActions;\n  hasNumericalValue: number;\n  image: string | File | undefined;\n};\n\nexport type TCreateResourcePanel = {\n  title: string;\n  done: () => void;\n  resource?: any;\n  spatialThings?: Types.Maybe<\n    Types.Maybe<\n      { __typename: 'SpatialThing' } & Pick<Types.SpatialThing, 'name' | 'id' | 'lat' | 'long'>\n    >[]\n  > | null;\n  formik: FormikHook<CreateIntentFormValues>;\n  unitPages?: any;\n  actionList?: any;\n  providerList?: null | { id: string; name: string }[];\n  receiverList?: null | { id: string; name: string }[];\n  toggleCreateLocation: (isShow: boolean) => void;\n  setAction?: (name: string) => void;\n};\n\nexport type SelectOption = {\n  label: string;\n  id: string;\n  displayUsername: string;\n};\n\nexport const CreateResourcePanel: FC<TCreateResourcePanel> = ({\n  title,\n  formik,\n  done,\n  unitPages,\n  actionList,\n  spatialThings,\n  providerList,\n  receiverList,\n  toggleCreateLocation,\n  setAction = () => {}\n}) => {\n  const [providerArr, setProviderArr] = React.useState<any>([]);\n  const [receiverArr, setReceiverArr] = React.useState<any>([]);\n  const [unitLst, setUnitLst] = React.useState<any>([]);\n  const [startDate, setStartDate] = React.useState<any>(new Date());\n  const onIconFileSelected = React.useCallback(\n    (file: File) => formik.setValues({ ...formik.values, image: file }),\n    [formik]\n  );\n  // const { me } = useMe();\n\n  React.useEffect(() => {\n    if (unitPages?.length) {\n      const unit = unitPages.map((el: { id: string; label: string; symbol: string }) => ({\n        id: el.id,\n        label: `${el.label} / ${el.symbol}`\n      }));\n\n      setUnitLst(unit);\n    }\n  }, [unitPages]);\n  /* eslint-disable */\n  React.useEffect(() => {\n    setProviderArr(\n      setSelectOption(providerList, {\n        variables: ['name', 'displayUsername'],\n        template: 'name / displayUsername'\n      })\n    );\n    setReceiverArr(\n      setSelectOption(receiverList, {\n        variables: ['name', 'displayUsername'],\n        template: 'name / displayUsername'\n      })\n    );\n\n    formik.setValues({\n      ...formik.values,\n      hasPointInTime: new Date().toISOString()\n      // provider: {\n      //   id: providerList?.find((el: any) => el.id === me?.user?.id)?.id || '',\n      //   label: providerList?.find((el: any) => el.id === me?.user?.id)?.name || ''\n      // },\n      // receiver: {\n      //   id: receiverList?.find((el: any) => el.id === me?.user?.id)?.id || '',\n      //   label: receiverList?.find((el: any) => el.id === me?.user?.id)?.name || ''\n      // }\n    });\n  }, [providerList, receiverList]);\n\n  React.useEffect(() => {\n    setUnitLst(\n      setSelectOption(unitPages?.edges, {\n        variables: ['label', 'symbol'],\n        template: 'label / symbol'\n      })\n    );\n  }, [unitPages]);\n\n  const initialIconUrl = 'string' === typeof formik.values.image ? formik.values.image : '';\n\n  return (\n    <Container>\n      <form onSubmit={formik.handleSubmit}>\n        <Header>\n          <Heading m={2}>\n            <Trans>{title}</Trans>\n          </Heading>\n        </Header>\n\n        <Hero>\n          <HeroInfo>\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <Box sx={{ width: '140', height: '140' }} className=\"item_photo\">\n                  <DropzoneArea\n                    initialUrl={initialIconUrl}\n                    onFileSelect={onIconFileSelected}\n                    filePattern=\"image/*\"\n                  />\n                </Box>\n                <div className=\"item_info\">\n                  <Box>\n                    <FormGroup>\n                      <FormLabel>{i18nMark('Resource')}</FormLabel>\n                      <Input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        disabled={formik.isSubmitting}\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Name of your resource')}\n                        value={formik.values.name}\n                      />\n                      <CounterChars>{60 - formik.values.name.length}</CounterChars>\n                    </FormGroup>\n                    {formik.errors.name && (\n                      <CustomAlert variant=\"negative\">{formik.errors.name}</CustomAlert>\n                    )}\n                  </Box>\n                  <Box>\n                    <FormGroup>\n                      <FormLabel>Event note</FormLabel>\n                      <Input\n                        id=\"eventNote\"\n                        type=\"textarea\"\n                        name=\"eventNote\"\n                        onChange={formik.handleChange}\n                        placeholder={i18nMark('Event Note')}\n                        value={formik.values.eventNote}\n                      />\n                    </FormGroup>\n                    <CounterChars>\n                      {formik.values.eventNote ? 500 - formik.values.eventNote.length : 500}\n                    </CounterChars>\n                    {formik.errors.eventNote && (\n                      <CustomAlert variant=\"negative\">{formik.errors.eventNote}</CustomAlert>\n                    )}\n                  </Box>\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Provider</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      placeholder={i18nMark('Provider')}\n                      options={providerArr}\n                      variant=\"primary\"\n                      value={formik.values.provider}\n                      id=\"provider\"\n                      name=\"provider\"\n                      components={{ DropdownIndicator: () => null }}\n                      onInputChange={(name: string, value: string) => {\n                        let newList = providerList?.filter(item =>\n                          // @ts-ignore\n                          item?.displayUsername?.toLowerCase().includes(value.toLowerCase())\n                        );\n\n                        setProviderArr(\n                          setSelectOption(newList, {\n                            variables: ['name', 'displayUsername'],\n                            template: 'name / displayUsername'\n                          })\n                        );\n                      }}\n                      openMenuOnClick={false}\n                    />\n                  </FormGroup>\n                  {formik.errors.provider && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.provider && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Receiver</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      placeholder={i18nMark('Receiver')}\n                      options={receiverArr}\n                      variant=\"primary\"\n                      value={formik.values.receiver}\n                      id=\"receiver\"\n                      name=\"receiver\"\n                      components={{ DropdownIndicator: () => null }}\n                      onInputChange={(name: string, value: string) => {\n                        let newList = receiverList?.filter(item =>\n                          // @ts-ignore\n                          item?.displayUsername?.toLowerCase().includes(value.toLowerCase())\n                        );\n\n                        setReceiverArr(\n                          setSelectOption(newList, {\n                            variables: ['name', 'displayUsername'],\n                            template: 'name / displayUsername'\n                          })\n                        );\n                      }}\n                      openMenuOnClick={false}\n                    />\n                  </FormGroup>\n                  {formik.errors.receiver && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.receiver && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <Box>\n                    <FormGroup>\n                      <FormLabel>Actions</FormLabel>\n                      <Select\n                        onSelect={(name, option) => {\n                          setAction(option.id);\n                          formik.setValues({ ...formik.values, action: option });\n                        }}\n                        options={actionList}\n                        variant=\"primary\"\n                        id=\"actions\"\n                        name=\"actions\"\n                        placeholder={i18nMark('Select action')}\n                        value={formik.values.action}\n                        noChange={true}\n                        onInputChange={() => {}}\n                        openMenuOnClick={true}\n                      />\n                    </FormGroup>\n                    {formik.errors.action && (\n                      <CustomAlert variant=\"negative\">\n                        {formik.errors.action && 'Required'}\n                      </CustomAlert>\n                    )}\n                  </Box>\n                  <Box>\n                    <FormLabel>Event date</FormLabel>\n                    <div style={{ width: '100%', border: '1px solid #05244f', padding: '0 10px' }}>\n                      <DatePicker\n                        selected={startDate}\n                        onChange={(date: any) => {\n                          setStartDate(date);\n                          formik.setValues({\n                            ...formik.values,\n                            // @ts-ignore\n                            hasPointInTime: date.toISOString()\n                          });\n                        }}\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    </div>\n                  </Box>\n                </div>\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>Location</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      options={spatialThings?.map((el: any) => ({\n                        id: el.id,\n                        value: el.id,\n                        label: el.name\n                      }))}\n                      placeholder={i18nMark('CustomSelect location')}\n                      value={formik.values.atLocation}\n                      variant=\"primary\"\n                      id=\"atLocation\"\n                      name=\"atLocation\"\n                      noChange={true}\n                      onInputChange={() => {}}\n                      openMenuOnClick={true}\n                    />\n                    <LocationBlockStyle>\n                      <FormLabel>\n                        {i18nMark(\n                          'If you did not find your locations in the list, you can create it'\n                        )}\n                      </FormLabel>\n                      <Button variant=\"show-more\" onClick={() => toggleCreateLocation(true)}>\n                        <Trans>Create Location</Trans>\n                      </Button>\n                    </LocationBlockStyle>\n                  </FormGroup>\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <div className=\"d-flex\">\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>unit</FormLabel>\n                    <Select\n                      onSelect={(name, option) => {\n                        formik.setValues({ ...formik.values, [name]: option });\n                      }}\n                      options={unitLst}\n                      variant=\"primary\"\n                      id=\"hasUnit\"\n                      name=\"hasUnit\"\n                      placeholder={i18nMark('Unit')}\n                      value={formik.values.hasUnit}\n                      noChange={true}\n                      onInputChange={() => {}}\n                      openMenuOnClick={true}\n                    />\n                  </FormGroup>\n                  {formik.errors.hasUnit && (\n                    <CustomAlert variant=\"negative\">\n                      {formik.errors.hasUnit && 'Required'}\n                    </CustomAlert>\n                  )}\n                </div>\n                <div className=\"item_col-6\">\n                  <FormGroup>\n                    <FormLabel>numerical value</FormLabel>\n                    <Input\n                      type=\"number\"\n                      id=\"hasNumericalValue\"\n                      name=\"hasNumericalValue\"\n                      onChange={formik.handleChange}\n                      placeholder={i18nMark('Numerical Value')}\n                      value={formik.values.hasNumericalValue}\n                    />\n                  </FormGroup>\n                  {formik.errors.hasNumericalValue && (\n                    <CustomAlert variant=\"negative\">{formik.errors.hasNumericalValue}</CustomAlert>\n                  )}\n                </div>\n              </div>\n            </CollectionContainerForm>\n\n            <CollectionContainerForm>\n              <FormGroup>\n                <FormLabel>Resource note</FormLabel>\n                <Input\n                  id=\"note\"\n                  type=\"textarea\"\n                  name=\"note\"\n                  onChange={formik.handleChange}\n                  placeholder={i18nMark('Resource note')}\n                  value={formik.values.note}\n                />\n              </FormGroup>\n              <CounterChars>\n                {formik.values.note ? 500 - formik.values.note.length : 500}\n              </CounterChars>\n              {formik.errors.note && (\n                <CustomAlert variant=\"negative\">{formik.errors.note}</CustomAlert>\n              )}\n            </CollectionContainerForm>\n          </HeroInfo>\n        </Hero>\n        <Actions>\n          <Button\n            variant=\"primary\"\n            isSubmitting={formik.isSubmitting}\n            isDisabled={formik.isSubmitting}\n            type=\"submit\"\n            style={{ marginLeft: '10px' }}\n          >\n            <Trans>Save</Trans>\n          </Button>\n          <Button variant=\"outline\" onClick={done}>\n            <Trans>Cancel</Trans>\n          </Button>\n        </Actions>\n      </form>\n      <ToastContainer />\n    </Container>\n  );\n};\n\nconst LocationBlockStyle = styled('div')`\n  text-align: right;\n  margin: 10px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-end;\n\n  & > * {\n    padding: 5px 0;\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport { LocaleContext } from 'context/global/localizationCtx';\nimport { logo_small_url, my_timeline } from 'mn-constants';\nimport { ellipsis } from 'polished';\nimport * as React from 'react';\nimport { Globe } from 'react-feather';\nimport { NavLink } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\n// import Dropdown from \"./dropdown\";\nimport Avatar from 'ui/elements/Avatar';\n// import Loader from \"../../components/elements/Loader/Loader\";\nimport styled from '../../themes/styled';\n\nexport enum Status {\n  Loading,\n  Loaded\n}\n\nconst SidebarComponent = styled(Flex)`\n  width: 240px;\n  // ${media.lessThan('medium')`\n  //   width: 50px;\n  // `}\n`;\n\nconst InternalWrapper = styled(Box)<{ isOpen: boolean }>`\n  transition: 'all 250ms ease';\n  flex: 1;\n`;\n\nconst SidebarFixed = styled(Box)`\n  justify-content: space-between;\n  height: 100%;\n  display: flex;\n  ${media.lessThan('1280px')`\nwidth: auto;\n`} ${media.lessThan('860px')`\n    position: relative;\nwidth: 100%\n`};\n`;\n\nconst SidebarOverflow = styled(Box)`\n  overflow-y: auto;\n  flex: 1;\n`;\n\n// const Header = styled(Box)`\n//   cursor: pointer;\n//   img {\n//     min-width: 36px;\n//     height: 36px;\n//     border-radius: 36px;\n//   }\n//   input {\n//     margin: 0 8px !important;\n//     border-radius: 100px;/1\n//     border-width: 1px;\n//     ${media.lessThan('1280px')`\n// display: none;\n//     `};\n//   }\n// `;\nconst Nav = styled(Box)`\n  a {\n    text-decoration: none;\n  }\n`;\n//\n// const CommunityLink = styled(NavLink)`\n//   margin-bottom: 0px;\n//   img {\n//     width: 36px;\n//     height: 36px;\n//   }\n//   &.active {\n//     > div {\n//       background: ${props => props.theme.colors.primary};\n//     }\n//     div {\n//       color: ${props => props.theme.colors.appInverse} !important;\n//     }\n//     position: relative;\n//   }\n// `;\n\nconst SidebarLink = styled(NavLink)`\n  position: relative;\n  color: inherit;\n  img {\n    width: 36px;\n    height: 36px;\n  }\n  &.active {\n    div {\n      color: ${props => props.theme.colors.primary};\n      position: relative;\n    }\n  }\n  div {\n    color: ${props => (props.isActive ? props.theme.colors.primary : props.theme.colors.darker)};\n  }\n`;\n\nconst NavItem = styled(Flex)`\n  border-radius: 4px;\n  padding: 0px 4px;\n  &:hover {\n    background: ${props => props.theme.colors.medium};\n  }\n  ${media.lessThan('1280px')`\nimg {\n    margin-right: 0;\n}\n`};\n`;\n\nconst ItemTitle = styled(Text)`\n  height: 50px;\n  line-height: 50px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.darker};\n  a:focus,\n  a:active {\n    color: inherit;\n  }\n  ${ellipsis('220px')};\n`;\n\n// const Right = styled(Box)`\n// color: ${props => props.theme.colors.medium};\n// //${media.lessThan('1280px')`\n// //display: none;\n// //`};\n// `;\n\nconst ItemTitleDir = styled(ItemTitle)`\n  margin-left: 8px;\n  .--rtl & {\n    margin-right: 8px;\n    margin-left: 0px;\n  }\n`;\n\n// const HeaderName = styled(Text)`\n//   flex: 1;\n//   ${ellipsis('180px')};\n// `;\n\nexport interface CommunityPreview {\n  link: string;\n  name: string;\n  icon: string;\n}\n\ninterface SidebarLoaded {\n  status: Status.Loaded;\n  discoverPath: string;\n  homePath: string;\n  isSidebarOpen: boolean;\n  communities: CommunityPreview[];\n  LoadMoreFormik: FormikHook | null;\n}\n\nexport interface SidebarLoading {\n  status: Status.Loading;\n  isSidebarOpen: boolean;\n}\n\nexport type Props = SidebarLoaded | SidebarLoading;\n\nexport const Sidebar: React.FC<Props> = props => {\n  const { i18n } = React.useContext(LocaleContext);\n\n  return (\n    <>\n      {props.isSidebarOpen ? (\n        <SidebarComponent className=\"sidebar\">\n          <InternalWrapper>\n            <SidebarFixed>\n              {props.status === Status.Loading ? (\n                <Text>Loading</Text>\n              ) : (\n                <SidebarOverflow>\n                  <>\n                    <Nav>\n                      <SidebarLink exact to={props.discoverPath}>\n                        <NavItem alignItems={'center'}>\n                          <Box height=\"50px\">\n                            <Globe size={36} strokeWidth=\"1\" />\n                          </Box>\n                          <ItemTitleDir variant=\"link\">\n                            <Trans>Discover</Trans>\n                          </ItemTitleDir>\n                        </NavItem>\n                      </SidebarLink>\n                      <SidebarLink exact to={props.homePath}>\n                        <NavItem alignItems={'center'}>\n                          <Avatar size=\"s\" src={logo_small_url} />\n                          <ItemTitleDir variant=\"link\">{i18n._(my_timeline)}</ItemTitleDir>\n                        </NavItem>\n                      </SidebarLink>\n                    </Nav>\n                  </>\n                </SidebarOverflow>\n              )}\n            </SidebarFixed>\n          </InternalWrapper>\n        </SidebarComponent>\n      ) : null}\n    </>\n  );\n};\n\nexport default Sidebar;\n","import { useFormik } from 'formik';\nimport React, { FC } from 'react';\nimport { BasicCreateCollectionFormValues } from 'ui/modules/CreateCollectionPanel';\nimport * as Yup from 'yup';\nimport { TestUrlOrFile } from 'HOC/lib/formik-validations';\n// import { useCreateResource } from '../../../fe/resource/create/useCreateResource';\n\nimport {\n  CreateResourcePanel,\n  TCreateResourcePanel,\n  CreateIntentFormValues\n} from '../../../ui/modules/CreateResourcePanel';\n// import { EconomicResource } from '../../pages/inventory/InventoryPage';\n// import { useSpatialThingsPagesQuery } from '../EconomicEventManager/EconomicEventManager.generated';\n// import { EconomicEventManagerHOC } from '../EconomicEventManager/EconomicEventManagerHOC';\n\nexport const validationSchema: Yup.ObjectSchema<BasicCreateCollectionFormValues> = Yup.object<\n  BasicCreateCollectionFormValues\n>({\n  name: Yup.string()\n    .min(2)\n    .max(60)\n    .required(),\n  summary: Yup.string().max(500),\n  icon: Yup.mixed<string | File>().test(...TestUrlOrFile)\n});\n\nexport interface Props {\n  done: () => void;\n  toggleCreateLocation: (isShow: boolean) => void;\n  resource?: any;\n}\n\nexport const CreateResourcePanelHOC: FC<Props> = ({\n  done,\n  resource,\n  toggleCreateLocation,\n  ...props\n}) => {\n  // const spatialThingsQ = useSpatialThingsPagesQuery();\n  // const spatialThings = spatialThingsQ.data?.spatialThingsPages;\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(60, 'Too Long!')\n      .required('Required'),\n    note: Yup.string().max(500, 'Too Long!'),\n    action: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    provider: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    receiver: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    hasUnit: Yup.object().shape({\n      id: Yup.string().required('Required')\n    }),\n    hasNumericalValue: Yup.string()\n      .required('Required')\n      .notOneOf([0, '0', null, undefined], 'Not null')\n  });\n\n  const formik = useFormik<any>({\n    initialValues: {\n      name: resource?.name || '',\n      note: resource?.note || '',\n      eventNote: resource?.eventNote || '',\n      hasPointInTime: resource?.hasPointInTime || '',\n      image: resource?.image || '',\n      atLocation: {\n        id: resource?.currentLocation?.id || '',\n        label: ''\n      },\n      action: {\n        id: '',\n        label: ''\n      },\n      provider: {\n        id: '',\n        label: '',\n        note: ''\n      },\n      receiver: {\n        id: '',\n        label: '',\n        note: ''\n      },\n      hasUnit: {\n        id: '',\n        label: '',\n        note: ''\n      },\n      hasNumericalValue: 0\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema: SignupSchema,\n    enableReinitialize: true,\n\n    onSubmit: (values: CreateIntentFormValues) => {\n      //   return create({\n      //     name: values.name,\n      //     action: values.action.id,\n      //     note: values.note,\n      //     eventNote: values.eventNote,\n      //     hasPointInTime: values.hasPointInTime,\n      //     atLocation: values.atLocation?.id || '',\n      //     provider: values.provider.id,\n      //     receiver: values.receiver.id,\n      //     hasUnit: values.hasUnit.id,\n      //     hasNumericalValue: values.hasNumericalValue,\n      //     image: values.image\n      //   })\n      //     .then((response: any) => {\n      //       if (!response.errors) {\n      //         const newId = response?.data?.createEconomicEvent?.economicResource?.id;\n      //         const redirect = `/resource/${newId} `;\n      //         done();\n      //         history.replace(redirect);\n      //\n      //         toast.success('Resource was created', {\n      //           position: 'top-right',\n      //           transition: Slide,\n      //           autoClose: 3000,\n      //           hideProgressBar: false,\n      //           closeOnClick: true,\n      //           pauseOnHover: true\n      //         });\n      //       }\n      //     })\n      //     .catch((error: any) => console.log(error));\n    }\n  });\n\n  const CreateResourcePanelProps: TCreateResourcePanel = {\n    ...props,\n    title: 'Create a new Resource',\n    formik,\n    // spatialThings: spatialThings?.edges || null,\n    toggleCreateLocation,\n    done\n  };\n\n  return (\n    // <EconomicEventManagerHOC>\n    <CreateResourcePanel {...CreateResourcePanelProps} />\n    // </EconomicEventManagerHOC>\n  );\n};\n","import { useMe } from 'fe/session/useMe';\nimport { SideBarContext } from 'HOC/context/SideBar';\nimport { useNotifyMustLogin } from 'HOC/lib/notifyMustLogin';\n// import { CreateCommunityPanelHOC } from 'HOC/modules/CreateCommunityPanel/createCommunityPanelHOC';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\nimport React, { FC, useContext, useMemo, useReducer } from 'react';\nimport { MainHeader, Props as MainHeaderProps } from 'ui/modules/MainHeader';\nimport Modal from 'ui/modules/Modal';\nimport { CreateLocationPanelHOC } from '../CreateLocationPanel/CreateLocationPanelHOK';\nimport { CreateResourcePanelHOC } from '../CreateResourcePanel/CreateResourcePanelHOC';\n// import { CreateIntentPanelHOC } from '../CreateIntentPanel/createIntentPanelHOC';\n\nexport interface MainHeaderHOC {}\nexport const MainHeaderHOC: FC<MainHeaderHOC> = () => {\n  const meQ = useMe();\n\n  const user = meQ.me?.user;\n  const notifiedMustLogin = useNotifyMustLogin();\n  const [showCreateLocation, toggleShowCreateLocation] = React.useState(false);\n\n  const [showCreateCommunity, toggleShowCreateCommunity] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const [showCreateIntent, toggleShowCreateIntent] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const [showCreateResource, toggleShowCreateResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const CreateCommunityModal = showCreateCommunity ? (\n    <Modal closeModal={toggleShowCreateCommunity}>\n      {/*<CreateCommunityPanelHOC done={toggleShowCreateCommunity} />*/}\n    </Modal>\n  ) : null;\n\n  const CreateIntentModal = showCreateIntent ? (\n    <Modal closeModal={toggleShowCreateIntent}>\n      {/*<CreateIntentPanelHOC done={toggleShowCreateIntent} />*/}\n    </Modal>\n  ) : null;\n\n  const CreateResourceModal = showCreateResource ? (\n    <Modal closeModal={toggleShowCreateResource}>\n      {showCreateLocation ? (\n        <CreateLocationPanelHOC done={toggleShowCreateLocation} />\n      ) : (\n        <CreateResourcePanelHOC\n          done={toggleShowCreateResource}\n          toggleCreateLocation={toggleShowCreateLocation}\n        />\n      )}\n    </Modal>\n  ) : null;\n\n  const { toggleOpen: toggleSideBar } = useContext(SideBarContext);\n\n  const [isOpenDropdown, toggleDropdown] = useReducer(is => !is, false);\n  const headerProps = useMemo<MainHeaderProps>(() => {\n    const props: MainHeaderProps = {\n      Search: <SearchBox key=\"search\" />,\n      user: user\n        ? {\n            icon: '',\n            link: `/user/${user.id}`,\n            name: user.character?.username || ''\n          }\n        : null,\n      toggleSideBar,\n      createCommunity: toggleShowCreateCommunity,\n      createIntent: toggleShowCreateIntent,\n      createResource: toggleShowCreateResource,\n      isOpenDropdown,\n      toggleDropdown\n    };\n    return props;\n  }, [user, toggleSideBar, isOpenDropdown]);\n  return (\n    <>\n      {CreateCommunityModal}\n      {CreateIntentModal}\n      {CreateResourceModal}\n      <MainHeader {...headerProps} />\n    </>\n  );\n};\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Box, Text } from 'rebass/styled-components';\n// import { FormikHook } from 'ui/@types/types';\nimport {\n  HomeBox,\n  // MenuList\n  List,\n  // ObjectsList,\n  MainContainer,\n  Wrapper,\n  WrapperCont\n} from 'ui/elements/Layout';\nimport styled from 'ui/themes/styled';\nimport { ReactElement } from 'react';\n\nexport interface Props {\n  // nextCommunitiesFormik?: FormikHook;\n  // nextCollectionsFormik?: FormikHook;\n  // nextInboxFormik: FormikHook | null;\n  // FollowedCommunitiesElements: ReactElement;\n  // FollowedCollectionsElements: ReactElement;\n  InboxElements: ReactElement;\n  basePath: string;\n}\n\nexport const Home: React.FC<Props> = ({\n  basePath,\n  InboxElements\n}: // nextInboxFormik\n// nextCommunitiesFormik,\n// nextCollectionsFormik,\n// FollowedCommunitiesElements,\n// FollowedCollectionsElements\nProps) => {\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            <Title px={2}>\n              <Text variant=\"suptitle\">\n                <Trans>My timeline</Trans>\n              </Text>\n            </Title>\n            {/* <Menu basePath={basePath} /> */}\n            <Switch>\n              {/* <Route path={`${basePath}/mycommunities`}>\n                <ObjectsList>{FollowedCommunitiesElements}</ObjectsList>\n                {nextCommunitiesFormik && (\n                  <LoadMore LoadMoreFormik={nextCommunitiesFormik} />\n                )}\n              </Route>\n              <Route path={`${basePath}/mycollections`}>\n                <ObjectsList>{FollowedCollectionsElements}</ObjectsList>\n                {nextCollectionsFormik && (\n                  <LoadMore LoadMoreFormik={nextCollectionsFormik} />\n                )}\n              </Route> */}\n              <Route path={`${basePath}`}>\n                <List>{InboxElements}</List>\n                {/*{nextInboxFormik && <LoadMore LoadMoreFormik={nextInboxFormik} />}*/}\n              </Route>\n            </Switch>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nexport default Home;\n\nconst Title = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  height: 40px;\n  line-height: 40px;\n  border-bottom: ${props => props.theme.colors.border};\n`;\n\n// const Menu = ({ basePath }: { basePath: string }) => {\n//   return (\n//     <MenuList>\n//       <NavLink exact to={`${basePath}`}>\n//         <Trans>My Timeline</Trans>\n//       </NavLink>\n//       <>\n//         {/* <NavLink to={`${basePath}/mycommunities`}>\n//           <Trans>Joined communities</Trans>\n//         </NavLink>\n//         <NavLink to={`${basePath}/mycollections`}>\n//           <Trans>Followed collections</Trans>\n//         </NavLink> */}\n//       </>\n//     </MenuList>\n//   );\n// };\n","import { useMyInboxActivities } from 'fe/activities/inbox/my/useMyInboxActivities';\n// import { useMyFollowedCollections } from 'fe/collection/myFollowed/myFollowedCollections';\n// import { useMyFollowedCommunities } from 'fe/community/myFollowed/myFollowedCommunities';\n// import { ActivityPreviewHOC } from 'HOC/modules/previews/activity/ActivityPreview';\n// import { CollectionPreviewHOC } from 'HOC/modules/previews/collection/CollectionPreview';\n// import { CommunityPreviewHOC } from 'HOC/modules/previews/community/CommunityPreview';\nimport React, { FC, useMemo } from 'react';\nimport { Home, Props } from 'ui/pages/home';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\n// import { MyFollowedCommunityDataFragment } from 'fe/community/myFollowed/myFollowedCommunities.generated';\n// import { MyFollowedCollectionDataFragment } from 'fe/collection/myFollowed/myFollowedCollections.generated';\n\nexport interface HomePageHOC {\n  basePath: string;\n}\n\nconst homeMyTimelinePageTitle = t`My Activities`;\n\nexport const HomePageHOC: FC<HomePageHOC> = ({ basePath }) => {\n  // const { myCommunityFollowsPage } = useMyFollowedCommunities();\n  // const [nextCommunitiesFormik] = useFormikPage(myCommunityFollowsPage);\n  // const FollowedCommunitiesElements = useMemo<\n  //   Props['FollowedCommunitiesElements']\n  // >(() => {\n  //   return (\n  //     <>\n  //       {myCommunityFollowsPage\n  //         .edges!.map(follow => follow.context)\n  //         .filter(\n  //           (context): context is MyFollowedCommunityDataFragment =>\n  //             context.__typename === 'Community'\n  //         )\n  //         .map(community => (\n  //           <CommunityPreviewHOC\n  //             communityId={community.id}\n  //             key={community.id}\n  //           />\n  //         ))}\n  //     </>\n  //   );\n  // }, [myCommunityFollowsPage]);\n\n  // const {\n  //   myCollectionFollowsPage: myFollowedCollectionsPage\n  // } = useMyFollowedCollections();\n  // const [nextCollectionsFormik] = useFormikPage(myFollowedCollectionsPage);\n  // const FollowedCollectionsElements = useMemo<\n  //   Props['FollowedCollectionsElements']\n  // >(() => {\n  //   return (\n  //     <>\n  //       {myFollowedCollectionsPage\n  //         .edges!.map(follow => follow.context)\n  //         .filter(\n  //           (context): context is MyFollowedCollectionDataFragment =>\n  //             context.__typename === 'Collection'\n  //         )\n  //         .map(collection => (\n  //           <CollectionPreviewHOC\n  //             collectionId={collection.id}\n  //             key={collection.id}\n  //           />\n  //         ))}\n  //     </>\n  //   );\n  // }, [myFollowedCollectionsPage]);\n  usePageTitle(homeMyTimelinePageTitle);\n\n  const { activitiesPage } = useMyInboxActivities();\n  const InboxElements = useMemo<Props['InboxElements']>(() => {\n    return (\n      <>\n        {activitiesPage.edges!.map(\n          userActivityEdge =>\n            userActivityEdge && (\n              <div>ActivityPreviewHOC</div>\n              // <ActivityPreviewHOC activityId={userActivityEdge?.id} key={userActivityEdge?.id} />\n            )\n        )}\n      </>\n    );\n  }, [activitiesPage]);\n\n  const homeProps = useMemo<Props>(() => {\n    const props: Props = {\n      InboxElements,\n      // FollowedCollectionsElements,\n      // FollowedCommunitiesElements,\n      // nextCollectionsFormik,\n      // nextCommunitiesFormik,\n      // nextInboxFormik,\n      basePath\n    };\n    return props;\n  }, [\n    InboxElements,\n    // FollowedCollectionsElements,\n    // FollowedCommunitiesElements,\n    // nextCollectionsFormik,\n    // nextCommunitiesFormik,\n    basePath\n  ]);\n  return <Home {...homeProps} />;\n};\n","// import * as GQL from './useMyInboxActivities.generated';\n\nexport const useMyInboxActivities = () => {\n  // const activitiesQ = GQL.useMyInboxActivitiesQuery({\n  //   variables: { limit: DEFAULT_PAGE_SIZE }\n  // });\n  return {\n    activitiesPage: { edges: [] }\n  };\n};\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Heading, Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\n// import { WrapperPanel } from 'ui/elements/Panel';\nimport LogoContainer from 'ui/elements/Logo';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 432px;\n  margin-top: 60px;\n  padding: 16px;\n  & button {\n    margin-top: 16px;\n    width: 100%;\n    color: #fff !important;\n    text-transform: uppercase\n      &:hover {\n      background: #d67218 !important;\n    }\n  }\n`;\n\nexport const NotFound = () => {\n  return (\n    <>\n      <Container>\n        <Box sx={{ textAlign: 'center' }}>\n          <LogoContainer />\n          <Heading>\n            <span aria-label=\"icon\" role=\"img\">\n              🤔\n            </span>\n            <Trans>Page not found</Trans>\n          </Heading>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\nimport React, { FC } from 'react';\nimport { NotFound } from 'ui/pages/notFound';\n\nexport interface NotFoundHOC {}\n\nconst notFoundPageTitle = t`Page Not Found`;\n\nexport const NotFoundHOC: FC<NotFoundHOC> = () => {\n  usePageTitle(notFoundPageTitle, {});\n  return <NotFound />;\n};\n","import React, { FC, useMemo } from 'react';\nimport { HomePageHOC } from 'HOC/pages/home/HomeHoc';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { RedirectAnonymousToLogin } from './wrappers/RedirectBySession';\nimport { locationHelper } from './lib/helper';\n\ninterface HomePageRouter {\n  tab?: string;\n}\nconst HomePageRouter: FC<RouteComponentProps<HomePageRouter>> = ({ match }) => {\n  const homeProps: any | null = useMemo(\n    () => ({\n      basePath: ''\n    }),\n    []\n  );\n\n  if (!homeProps) {\n    return <NotFoundHOC />;\n  }\n  return (\n    <RedirectAnonymousToLogin>\n      <WithSidebarTemplate>\n        <HomePageHOC {...homeProps} />\n      </WithSidebarTemplate>\n    </RedirectAnonymousToLogin>\n  );\n};\n\nexport const HomePageRoute: RouteProps = {\n  exact: true,\n  path: '/',\n  component: HomePageRouter\n};\n\nexport const homeLocation = locationHelper<undefined, undefined>(HomePageRoute);\n","// import { useMyFollowedCommunities } from 'fe/community/myFollowed/myFollowedCommunities';\nimport React, { FC, useMemo, useContext } from 'react';\nimport {\n  // CommunityPreview,\n  Props as PropsUI,\n  Sidebar as SidebarUI,\n  Status as StatusUI\n} from 'ui/modules/Sidebar/index';\n// import { MyFollowedCommunityDataFragment } from 'fe/community/myFollowed/myFollowedCommunities.generated';\nimport { SideBarContext } from 'HOC/context/SideBar';\nimport { discoverLocation } from 'routes/DiscoverPageRoute';\nimport { homeLocation } from 'routes/HomePageRoute';\n// import { communityLocation } from 'routes/CommunityPageRoute';\n\nexport interface SidebarHOC {}\nexport const SidebarHOC: FC<SidebarHOC> = () => {\n  const { isOpen: isSidebarOpen } = useContext(SideBarContext);\n  // const { myCommunityFollowsPage } = useMyFollowedCommunities();\n  // const [LoadMoreFormik] = myCommunityFollowsPage.formiks;\n  // const communities = useMemo(\n  //   () =>\n  //     myCommunityFollowsPage.edges\n  //       .map(follow => follow.context)\n  //       .filter(\n  //         (context): context is MyFollowedCommunityDataFragment =>\n  //           context.__typename === 'Community'\n  //       )\n  //       .map<CommunityPreview>(community => {\n  //         return {\n  //           icon: community.icon?.url || '',\n  //           link: communityLocation.getPath(\n  //             { communityId: community.id, tab: undefined },\n  //             undefined\n  //           ),\n  //           name: community.name\n  //         };\n  //       }),\n  //   [myCommunityFollowsPage]\n  // );\n\n  const propsUI = useMemo<PropsUI>(() => {\n    const props: any = {\n      isSidebarOpen,\n      status: StatusUI.Loaded,\n      // communities,\n      // LoadMoreFormik,\n      discoverPath: discoverLocation.getPath({ tab: undefined }, undefined),\n      homePath: homeLocation.getPath(undefined, undefined)\n    };\n    return props;\n  }, [isSidebarOpen]);\n  return <SidebarUI {...propsUI} />;\n};\n","import styled from 'ui/themes/styled';\nimport React, { FC, ReactElement, useState } from 'react';\nimport media from 'styled-media-query';\nimport { Box, Flex } from 'rebass/styled-components';\nimport { Settings, LogOut, PlusSquare } from 'react-feather';\nimport Avatar from 'ui/elements/Avatar';\nimport { NavLink } from 'react-router-dom';\n// import { CreateMenuHOK } from '../../../HOC/modules/CreateMenuHOK/CreateMenuHOK';\n\nexport const Burger: FC<{ open: boolean; setOpen: (_: boolean) => unknown }> = ({\n  open,\n  setOpen\n}) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\nexport interface MenuProps {\n  open: boolean;\n  Side: ReactElement;\n  setOpen(_: boolean): any;\n  userImage: string;\n  name: string;\n  username: string;\n  signout(): any;\n}\nexport const Menu: FC<MenuProps> = ({\n  open,\n  Side,\n  setOpen,\n  userImage,\n  name,\n  username,\n  signout\n}) => {\n  const [isCreateOpen, toggleCreate] = useState(false);\n\n  return (\n    <div>\n      {open && <Background onClick={() => setOpen(false)} />}\n      <StyledMenu open={open}>\n        <Profile>\n          <User>\n            <Avatar size=\"s\" src={userImage} />\n            <Title>{name}</Title>\n            <Username>{username}</Username>\n            <RightMenuWrapper>\n              {/*<CreateMenuHOK open={isCreateOpen} openHandler={toggleCreate} />*/}\n              <Span to={'/settings'}>\n                <Settings size=\"24\" strokeWidth={1} color={'#333'} />\n              </Span>\n              <CreateMenuSpan role=\"button\" onClick={() => toggleCreate(!isCreateOpen)}>\n                <PlusSquare size={16} color={'#333'} />\n                <span>Create</span>\n              </CreateMenuSpan>\n            </RightMenuWrapper>\n          </User>\n          {/* <Button variant=\"primary\">Create a new community</Button> */}\n        </Profile>\n\n        <Communities>{Side}</Communities>\n\n        <Bottom>\n          <List>\n            <Item onClick={signout}>\n              <LogOut size={18} />\n              <Box ml={2}>Sign out</Box>\n            </Item>\n          </List>\n        </Bottom>\n      </StyledMenu>\n    </div>\n  );\n};\n\nconst Bottom = styled(Box)``;\n\nconst Profile = styled(Box)`\n  padding: 16px;\n  border-bottom: ${props => props.theme.colors.border};\n`;\nconst User = styled(Box)`\n  position: relative;\n  > div:first-of-type {\n    width: 60px;\n    height: 60px;\n    border-radius: 60px;\n  }\n`;\n\nconst RightMenuWrapper = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n  line-height: initial;\n  ${media.lessThan('small')`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 120px;\n  `}\n`;\nconst CreateMenuSpan = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid #333;\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nconst Span = styled(NavLink)`\n  display: inline-block;\n  margin-right: 12px;\n`;\n\nconst Title = styled(Box)`\n  line-height: initial;\n  margin-top: 8px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.dark};\n`;\nconst Username = styled(Box)`\n  line-height: initial;\n  margin-top: 8px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.mediumdark};\n`;\nconst Communities = styled(Box)`\n  overflow: scroll;\n  padding: 16px;\n`;\n\nconst List = styled.div<{ lined?: boolean }>`\n  border-top: 1px solid ${props => props.theme.colors.medium};\n`;\nconst Item = styled(Flex)`\n  line-height: 60px;\n  height: 60px;\n  cursor: pointer;\n  align-items: center;\n  margin: 0 auto;\n  text-align: center;\n  width: 100px;\n  svg {\n    stroke: ${props => props.theme.colors.dark};\n  }\n  div {\n    font-weight: 600;\n    color: ${props => props.theme.colors.dark};\n  }\n  & span {\n    display: inline-block;\n    margin-right: 8px;\n  }\n  & a {\n    color: inherit !important;\n    text-decoration: none;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Background = styled(Box)<{ open: boolean }>`\n  z-index: 4000;\n  background: rgba(0, 0, 0, 0.9);\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  height: calc(100vh - 65px);\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n`;\n\nexport const StyledBurger = styled.button<{ open: boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 18px;\n  height: 18px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n  line-height: 75px;\n  margin: 0 auto;\n  margin-top: 26px;\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 18px;\n    height: 2px;\n    background: ${({ theme, open }) => (open ? theme.colors.primary : theme.colors.darker)};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? '0' : '1')};\n      transform: ${({ open }) => (open ? 'translateX(20px)' : 'translateX(0)')};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\n    }\n  }\n`;\n\nexport const StyledMenu = styled.nav<{ open: boolean }>`\n  background: ${({ theme }) => theme.colors.appInverse};\n  height: calc(100vh - 65px);\n  min-width: 230px;\n  text-align: left;\n  position: fixed;\n  z-index: 4020;\n  top: 0;\n  left: 0;\n  right: 80px;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(-100%)')};\n  overflow: hidden;\n  display: grid;\n  grid-template-rows: 160px 1fr 60px;\n  ${media.lessThan('small')`\n    width: 100%;\n    right: 0;\n  `}\n`;\n","import React, { ReactElement } from 'react';\nimport { Box } from 'rebass/styled-components';\nimport styled from 'ui/themes/styled';\nimport media from 'styled-media-query';\nimport { ChevronLeft } from 'react-feather';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Burger, Menu } from 'ui/modules/Burger';\nimport Avatar from 'ui/elements/Avatar';\nimport { Image } from 'rebass';\nimport { logo_small_url } from 'mn-constants';\n\nexport interface SidebarProps {\n  SidebarBox: ReactElement;\n  HeaderBox: ReactElement;\n  SearchBox: ReactElement;\n  userImage: string;\n  userLink: string;\n  username: string;\n  name: string;\n  signout(): any;\n}\n\nexport const WithSidebar: React.FC<SidebarProps> = ({\n  SidebarBox,\n  HeaderBox,\n  SearchBox,\n  children,\n  userImage,\n  userLink,\n  username,\n  name,\n  signout\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  return (\n    <Page>\n      <Menu\n        username={username}\n        name={name}\n        userImage={userImage}\n        signout={signout}\n        open={open}\n        setOpen={setOpen}\n        Side={SidebarBox}\n      />\n      <SearchBar>\n        <Icon onClick={() => history.goBack()}>\n          <ChevronLeft size=\"20\" />\n        </Icon>\n        {SearchBox}\n      </SearchBar>\n      <Header>{HeaderBox}</Header>\n      <Wrapper>\n        <Panel className=\"panel_sidebar\">\n          <Sidebar>{SidebarBox}</Sidebar>\n        </Panel>\n        <Panel>\n          <Content>{children}</Content>\n        </Panel>\n      </Wrapper>\n      <Footer>\n        <FootWrapper>\n          <Burger open={open} setOpen={setOpen} />\n        </FootWrapper>\n        <FootWrapper>\n          <NavLink to=\"/\">\n            <Logo>\n              <Image src={logo_small_url} />\n            </Logo>\n          </NavLink>\n        </FootWrapper>\n        <FootWrapper>\n          <Bavatar>\n            <NavLink to={userLink}>\n              <Avatar src={userImage} size=\"m\" />\n            </NavLink>\n          </Bavatar>\n        </FootWrapper>\n      </Footer>\n    </Page>\n  );\n};\n\nconst Logo = styled(Box)`\n  img {\n    width: 36px;\n    height: 36px;\n    border-radius: 36px;\n    margin-top: 15px;\n  }\n`;\n\nconst Bavatar = styled(Box)`\n  div {\n    max-width: 36px;\n    height: 36px;\n    min-width: 36px;\n    margin: 15px auto 0;\n    border-radius: 36px;\n  }\n`;\n\nexport const Icon = styled(Box)`\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  min-width: 40px;\n  border-radius: 40px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background: ${props => props.theme.colors.lighter};\n    svg {\n      stroke: ${props => props.theme.colors.primary};\n    }\n  }\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n    margin: 0 auto;\n  }\n`;\n\nconst SearchBar = styled(Box)`\nheight: 75px;\nline-height: 75px;\ntext-align: center;\nbackground: ${props => props.theme.colors.appInverse}\nborder-bottom: ${props => props.theme.colors.border};\ndisplay: flex;\nalign-items: center;\ninput {\n  width: 100%;\n  border-radius: 4px;\n  max-width: 500px;\n  height: 40px;\n  margin: 0;\n  border: 0;\n  background: ${props => props.theme.colors.app};\n}\n.ais-SearchBox {\n  border: 0;\n  height: auto;\n  margin: 0;\n  width: auto;\n  margin: 0;\n  margin-right: 24px;\n  flex:1;\n}\n${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst FootWrapper = styled(Box)`\n  height: 75px;\n  line-height: 75px;\n  text-align: center;\n`;\n\nconst Footer = styled(Box)`\n  position: fixed;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 500;\n  background: ${props => props.theme.colors.appInverse}\n  display: grid;\n  border-top: ${props => props.theme.colors.border};\n  grid-template-columns: 1fr 1fr 1fr;\n  ${media.greaterThan('medium')`\n    display: none;\n  `}\n`;\n\nconst Panel = styled(Box)`\n  display: grid;\n  grid-template-rows: auto;\n  &.panel_sidebar {\n    ${media.lessThan('medium')`\n    display: none;\n  `}\n  }\n`;\n\nconst Page = styled(Box)`\n  display: grid;\n  // ${media.greaterThan('large')`\n  //   grid-template-rows: 50px auto;\n  //   row-gap: 8px;\n  // `}\n  ${media.lessThan('medium')`\n    display: block;\n  `}\n`;\n\nconst Wrapper = styled(Box)`\n  max-width: 1096px;\n  margin: 0 auto;\n  display: grid;\n  \n  ${media.greaterThan('medium')`\n  grid-template-rows: auto;\n  grid-template-columns: 240px 1fr;\n  column-gap: 8px;\n  `}\n  ${media.lessThan('medium')`\n    overflow: overlay;\n    grid-template-rows: auto;\n    grid-template-columns:1fr;\n    column-gap: 0px;\n    margin: 0;\n  `}\n  ${media.lessThan('small')`\n    grid-template-rows: auto;\n    grid-template-columns:1fr;\n    column-gap: 0px;\n    margin: 0;\n  `}\n`;\n\nconst Sidebar = styled(Box)`\n  overflow: auto;\n`;\n\nconst Content = styled(Box)`\n  // Enable to put the right side scrollbar next to the content\n  //overflow: auto;\n`;\n\nconst Header = styled(Box)`\n  ${media.lessThan('medium')`\n    display: none;\n  `}\n`;\n","import * as Types from '../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type UserDataQueryVariables = {\n  username: Types.Scalars['String']\n};\n\n\nexport type UserDataQuery = (\n  { __typename: 'RootQueryType' }\n  & { user: Types.Maybe<(\n    { __typename: 'User' }\n    & { userActivities: Types.Maybe<Array<Types.Maybe<(\n      { __typename: 'Activity' }\n      & Pick<Types.Activity, 'id'>\n      & { verb: Types.Maybe<(\n        { __typename: 'Verb' }\n        & Pick<Types.Verb, 'verb' | 'verbDisplay'>\n      )> }\n    )>>>, posts: Types.Maybe<Array<Types.Maybe<(\n      { __typename: 'Post' }\n      & Pick<Types.Post, 'id'>\n      & { postContent: Types.Maybe<(\n        { __typename: 'PostContent' }\n        & Pick<Types.PostContent, 'htmlBody' | 'summary' | 'title'>\n      )> }\n    )>>> }\n    & HeroUserUserDataFragment\n  )> }\n);\n\nexport type HeroUserUserDataFragment = (\n  { __typename: 'User' }\n  & Pick<Types.User, 'id'>\n  & { profile: Types.Maybe<(\n    { __typename: 'Profile' }\n    & Pick<Types.Profile, 'name' | 'summary'>\n  )>, character: Types.Maybe<(\n    { __typename: 'Character' }\n    & Pick<Types.Character, 'username'>\n  )> }\n);\n\nexport const HeroUserUserDataFragmentDoc = gql`\n    fragment HeroUserUserData on User {\n  id\n  profile {\n    name\n    summary\n  }\n  character {\n    username\n  }\n}\n    `;\nexport const UserDataDocument = gql`\n    query userData($username: String!) {\n  user(filter: {username: $username}) {\n    ...HeroUserUserData\n    userActivities {\n      id\n      verb {\n        verb\n        verbDisplay\n      }\n    }\n    posts {\n      id\n      postContent {\n        htmlBody\n        summary\n        title\n      }\n    }\n  }\n}\n    ${HeroUserUserDataFragmentDoc}`;\n\n/**\n * __useUserDataQuery__\n *\n * To run a query within a React component, call `useUserDataQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserDataQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserDataQuery({\n *   variables: {\n *      username: // value for 'username'\n *   },\n * });\n */\nexport function useUserDataQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UserDataQuery, UserDataQueryVariables>) {\n        return ApolloReactHooks.useQuery<UserDataQuery, UserDataQueryVariables>(UserDataDocument, baseOptions);\n      }\nexport function useUserDataLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UserDataQuery, UserDataQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UserDataQuery, UserDataQueryVariables>(UserDataDocument, baseOptions);\n        }\nexport type UserDataQueryHookResult = ReturnType<typeof useUserDataQuery>;\nexport type UserDataLazyQueryHookResult = ReturnType<typeof useUserDataLazyQuery>;\nexport type UserDataQueryResult = ApolloReactCommon.QueryResult<UserDataQuery, UserDataQueryVariables>;\n\n\nexport interface UserDataQueryOperation {\n  operationName: 'userData'\n  result: UserDataQuery\n  variables: UserDataQueryVariables\n  type: 'query'\n}\nexport const UserDataQueryName:UserDataQueryOperation['operationName'] = 'userData'\n\nexport const UserDataQueryRefetch = (\n  variables:UserDataQueryVariables, \n  context?:any\n)=>({\n  query:UserDataDocument,\n  variables,\n  context\n})\n      \n","// import { User } from 'graphql/types.generated';\nimport * as GQL from './useUser.generated';\nimport { useMe } from 'fe/session/useMe';\n// import { useFollowContext } from 'fe/context/follow/useFollowContext';\n\nexport const useUser = (userId: string) => {\n  const userQ = GQL.useUserDataQuery({ variables: { username: 'pral2a' } });\n  const { me } = useMe();\n\n  const user = userQ.data?.user;\n  const isMe = !!(me && user && me?.user?.id === user.id);\n  // const { toggleFollow } = useFollowContext(user);\n\n  // return useMemo(() => {\n  // const user = userQ.data?.user;\n  // const totalCollections = user?.collectionFollows?.totalCount;\n  // const totalCommunities = user?.communityFollows?.totalCount;\n  // const totalUsers = user?.userFollows?.totalCount;\n  // const totalActivities = user?.outbox?.totalCount;\n  // const isMe = !!(me && user && me.user.id === user.id);\n  return {\n    isMe,\n    // isAdmin,\n    user\n    // toggleFollow,\n    // totalCollections,\n    // totalCommunities,\n    // totalUsers,\n    // totalActivities\n  };\n  // }, []);\n};\n","import styled from 'ui/themes/styled';\nimport { Text } from 'rebass/styled-components';\nimport 'github-markdown-css/github-markdown.css';\nimport DOMPurify from 'dompurify';\nimport React from 'react';\nimport { typography } from 'mn-constants';\n\nconst Comment = styled(Text)`\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none;\n  font-size: ${typography.size.s2} !important;\n  letter-spacing: 0 !important;\n  font-family: ${props => props.theme.fontFamily} !important;\n  &.markdown-body {\n    box-sizing: border-box;\n    min-width: 200px;\n    max-width: 568px;\n  }\n`;\n\nexport interface Props {\n  content: string;\n}\n\nexport const MDComment: React.SFC<Props> = ({ content }) => (\n  <Comment\n    className={'markdown-body'}\n    dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(content) }}\n    variant=\"text\"\n  />\n);\n","import { Trans } from '@lingui/macro';\nimport React, { FC } from 'react';\nimport { Flag, MapPin, MoreVertical } from 'react-feather';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { FormikHook } from 'ui/@types/types';\nimport Button from 'ui/elements/Button';\n// import { NavLink } from 'react-router-dom';\nimport { MDComment } from 'ui/elements/Layout/comment';\nimport { Dropdown, DropdownItem } from 'ui/modules/Dropdown';\nimport styled from 'ui/themes/styled';\n\nexport enum Status {\n  Loading,\n  Loaded\n}\n\nexport interface Loading {\n  status: Status.Loading;\n}\n\nexport interface Loaded {\n  status: Status.Loaded;\n  me: boolean;\n  image: string;\n  icon: string;\n  name: string;\n  isFlagged: boolean;\n  displayUsername: string;\n  location: string;\n  summary: string;\n}\n\nexport interface LoadedMe extends Loaded {\n  me: true;\n  isAdmin: boolean;\n}\n\nexport interface LoadedOther extends Loaded {\n  me: false;\n  following: boolean;\n  toggleFollowFormik: FormikHook<{}>;\n  isOpenDropdown: boolean;\n  toggleDropdown(): unknown;\n  flag(): any;\n}\n\nexport type Props = LoadedMe | LoadedOther | Loading | any;\n\nexport const HeroUser: FC<Props> = props => {\n  if (props.status === Status.Loading) {\n    return null;\n  }\n\n  return (\n    <ProfileBox p={1}>\n      <Hero>\n        <HeroBg src={props.image} />\n        <FlexProfile>\n          <WrapperHero>\n            <Img\n              style={{\n                backgroundImage: `url(\"${props.icon}\")`\n              }}\n            />\n          </WrapperHero>\n          <HeroAction mr={2}>\n            {props.me ? (\n              <></>\n            ) : (\n              <>\n                <Button\n                  mr={2}\n                  variant={props.following ? 'danger' : 'primary'}\n                  isSubmitting={props.toggleFollowFormik.isSubmitting}\n                  isDisabled={props.toggleFollowFormik.isSubmitting}\n                  onClick={props.toggleFollowFormik.submitForm}\n                >\n                  {props.following ? <Trans>Unfollow</Trans> : <Trans>Follow</Trans>}\n                </Button>\n                <More>\n                  <MoreVertical size={20} onClick={props.toggleDropdown} />\n                  {props.isOpenDropdown && (\n                    <RightDd>\n                      <Dropdown orientation={'bottom'} close={props.toggleDropdown}>\n                        <DropdownItem onClick={props.flag}>\n                          <Flag size={20} color={'rgb(101, 119, 134)'} />\n                          <Text sx={{ flex: 1 }} ml={2}>\n                            {!props.isFlagged ? (\n                              <Trans>Flag this user</Trans>\n                            ) : (\n                              <Trans>Unflag this user</Trans>\n                            )}{' '}\n                          </Text>\n                        </DropdownItem>\n                      </Dropdown>\n                    </RightDd>\n                  )}\n                </More>\n              </>\n            )}\n          </HeroAction>\n        </FlexProfile>\n        <HeroInfo ml={3}>\n          <HeroTitle sx={{ fontSize: '18px' }} mt={2} variant=\"heading\" fontWeight={'bold'}>\n            {props.user?.profile?.name}\n          </HeroTitle>\n          <Username mt={1}>\n            @{props.user?.character?.username}\n            {props.me && props.isAdmin && <AdminBadge ml={2}>Admin</AdminBadge>}\n          </Username>\n\n          <Box mt={2}>\n            <MDComment content={props.summary} />\n          </Box>\n          {props.location ? (\n            <Location mt={2}>\n              <span>\n                <MapPin strokeWidth={1} size={20} />\n              </span>\n              {props.location}\n            </Location>\n          ) : null}\n        </HeroInfo>\n      </Hero>\n    </ProfileBox>\n  );\n};\n\nconst RightDd = styled(Box)`\n  .dropdown {\n    right: 0;\n    left: auto;\n\n    ${media.lessThan('860px')`\n      right: initial;\n      left: 10px;\n    `};\n  }\n`;\n\nconst AdminBadge = styled(Box)`\n  padding: 1px 8px;\n  border: 1px solid ${props => props.theme.colors.primary};\n  border-radius: 2px;\n  color: ${props => props.theme.colors.primary};\n  display: inline-block;\n`;\n\nconst More = styled(Box)`\n  position: relative;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  border: ${props => props.theme.colors.border};\n  border-radius: 4px;\n  svg {\n    margin: 0 auto;\n    stroke: ${props => props.theme.colors.mediumdark};\n  }\n`;\n\nconst HeroAction = styled(Flex)`\n  align-items: center;\n`;\n\nconst HeroTitle = styled(Text)`\n  color: ${props => props.theme.colors.darker};\n`;\n\nconst FlexProfile = styled(Flex)`\n  justify-content: space-between;\n  ${media.lessThan('860px')`\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`};\n`;\n\nconst ProfileBox = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n  padding-bottom: 16px;\n`;\n\nconst Username = styled(Text)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n`;\n\nconst Location = styled(Flex)`\n  color: ${props => props.theme.colors.mediumdark};\n  font-weight: 500;\n  line-height: 26px;\n  border-radius: 100px;\n  align-items: center;\n  span {\n    margin-right: 8px;\n    & svg {\n      stroke: ${props => props.theme.colors.mediumdark};\n      vertical-align: text-bottom;\n    }\n    .--rtl & {\n      margin-left: 8px;\n      margin-right: 0px;\n    }\n  }\n`;\n\nconst HeroBg = styled.div<{ src: string }>`\n  height: 250px;\n  margin: -4px;\n  background: ${props => props.theme.colors.light};\n  background-image: url(\"${props => (props.src ? props.src : props.theme.colors.light)}\");\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n`;\n\nconst WrapperHero = styled.div`\n  padding: 24px;\n  padding-top: 0;\n  z-index: 9999;\n  position: relative;\n  margin-top: -60px;\n  padding-bottom: 0;\n`;\n\nconst Img = styled.div`\n  width: 120px;\n  height: 120px;\n  border-radius: 6px;\n  background: ${props => props.theme.colors.light};\n  border: 3px solid ${props => props.theme.colors.appInverse};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 16px;\n`;\n\nconst Hero = styled.div`\n  width: 100%;\n  position: relative;\n  border-radius: 6px;\n`;\n\nconst HeroInfo = styled(Box)`\n  & button {\n    span {\n      vertical-align: sub;\n      display: inline-block;\n      height: 30px;\n      margin-right: 4px;\n    }\n  }\n`;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useUser } from 'fe/user/useUser';\nimport { useFormik } from 'formik';\nimport { useNotifyMustLogin } from 'HOC/lib/notifyMustLogin';\nimport React, { FC, useMemo, useReducer } from 'react';\nimport { HeroUser as HeroUserUI, Props, Status } from 'ui/modules/HeroUser';\nimport Modal from 'ui/modules/Modal';\n\nexport interface HeroUser {\n  userName: string;\n}\nexport const HeroUser: FC<HeroUser> = ({ userName }) => {\n  const { user, isMe } = useUser(userName);\n  const [isOpenDropdown, toggleDropdown] = useReducer(is => !is, false);\n\n  const toggleFollowFormik = useFormik({\n    initialValues: {},\n    onSubmit: () => {}\n  });\n  const notifiedMustLogin = useNotifyMustLogin();\n\n  const [isFlagging, toggleFlagging] = useReducer(is => {\n    return notifiedMustLogin() ? false : !is;\n  }, false);\n\n  const FlagModal =\n    user && isFlagging ? <Modal closeModal={toggleFlagging}>FlagModal</Modal> : null;\n  const userHeroProps = useMemo<Props>(() => {\n    if (!user) {\n      return {\n        status: Status.Loading\n      };\n    }\n\n    const loadedProps: any = {\n      user\n    };\n\n    if (isMe) {\n      const props: any = {\n        me: isMe,\n        ...loadedProps\n      };\n\n      return props;\n    } else {\n      const props: any = {\n        flag: toggleFlagging,\n        me: isMe,\n        isOpenDropdown,\n        toggleDropdown,\n        toggleFollowFormik,\n        ...loadedProps\n      };\n\n      return props;\n    }\n  }, [isMe, user, toggleFollowFormik, isOpenDropdown]);\n\n  return (\n    <>\n      {FlagModal}\n      <HeroUserUI {...userHeroProps} />\n    </>\n  );\n};\n","import { Trans } from '@lingui/macro';\nimport { ellipsis } from 'polished';\nimport * as React from 'react';\nimport { Link } from 'react-feather';\nimport { Route, Switch } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport { FormikHook } from 'ui/@types/types';\nimport {\n  HomeBox,\n  List,\n  MainContainer,\n  MenuList,\n  MenuItem,\n  WrapperCont,\n  ButtonIcon\n} from 'ui/elements/Layout';\nimport { Nav, NavItem, Panel, PanelTitle, WrapperPanel } from 'ui/elements/Panel';\nimport { LoadMore } from 'ui/modules/Loadmore';\nimport styled from 'ui/themes/styled';\nimport { ReactElement } from 'react';\n\nexport interface Props {\n  userInfo: any;\n  ActivityBoxes: ReactElement;\n  LikesBoxes: ReactElement; // FIX ME remove ? after add LikesBoxes at HOC\n  HeroUserBox: ReactElement;\n  CommunityBoxes: ReactElement;\n  CollectionsBoxes: ReactElement;\n  UserBoxes: ReactElement;\n  InventoryBoxes: ReactElement;\n  basePath: string;\n  totalCommunities: string;\n  totalActivities: string;\n  totalCollections: string;\n  totalUsers: string;\n  userLink: string;\n  userName: string;\n  loadMoreActivities: FormikHook | null;\n  loadMoreLikes: FormikHook | null;\n  loadMoreCommunities: FormikHook | null;\n  loadMoreCollections: FormikHook | null;\n  loadMoreFollowing: FormikHook | null;\n}\n\n// const UsersIcon = require('react-feather/dist/icons/users').default;\n// const StartedIcon = require('react-feather/dist/icons/pie-chart').default;\nconst ActivityIcon = require('react-feather/dist/icons/activity').default;\nconst PackageIcon = require('react-feather/dist/icons/package').default;\n\nexport const User: React.FC<Props> = ({\n  userInfo,\n  HeroUserBox,\n  ActivityBoxes,\n  InventoryBoxes,\n  basePath,\n  totalCommunities,\n  userLink,\n  totalCollections,\n  totalUsers,\n  loadMoreActivities\n}) => {\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <Box mb={2}>\n            {HeroUserBox}\n            <Menu\n              basePath={basePath}\n              totalCommunities={totalCommunities}\n              totalCollections={totalCollections}\n              totalUsers={totalUsers}\n            />\n          </Box>\n          <Switch>\n            <Route path={`${basePath}/inventory`}>{InventoryBoxes}</Route>\n            <Route exact path={`${basePath}/`}>\n              <List>{ActivityBoxes}</List>\n              {loadMoreActivities && <LoadMore LoadMoreFormik={loadMoreActivities} />}\n            </Route>\n          </Switch>\n        </WrapperCont>\n      </HomeBox>\n      <WrapperPanel>\n        {userLink?.length > 0 ? (\n          <Panel>\n            <PanelTitle fontWeight={'bold'}>Relevant links</PanelTitle>\n            <Nav>\n              <NavItem>\n                <Flex>\n                  <Link size={20} />{' '}\n                  <a href={userLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <TextLink ml={2} flex={1}>\n                      {userLink}\n                    </TextLink>\n                  </a>\n                </Flex>\n              </NavItem>\n            </Nav>\n          </Panel>\n        ) : null}\n      </WrapperPanel>\n    </MainContainer>\n  );\n};\n\nconst Menu = ({\n  basePath,\n  totalCommunities\n}: {\n  basePath: string;\n  totalCommunities: string;\n  totalCollections: string;\n  totalUsers: string;\n}) => {\n  return (\n    <MenuList p={3} pt={3}>\n      <MenuItem exact to={`${basePath}`}>\n        <div className=\"text-holder\">\n          <Trans>Recent activity</Trans>\n        </div>\n        <ButtonIcon className=\"icon-holder\">\n          <ActivityIcon size=\"24\" />\n        </ButtonIcon>\n      </MenuItem>\n      <MenuItem exact to={`${basePath}/inventory`}>\n        <div className=\"text-holder\">\n          <Trans>Inventory</Trans>\n        </div>\n        <ButtonIcon className=\"icon-holder\">\n          <PackageIcon size=\"24\" />\n        </ButtonIcon>\n      </MenuItem>\n    </MenuList>\n  );\n};\n\nconst TextLink = styled(Text)`\n  ${ellipsis('250px')};\n  color: ${props => props.theme.colors.dark};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Box, Text } from 'rebass/styled-components';\n// import { PrimaryAccountable } from 'HOC/pages/inventory/InventoryPage';\nimport Avatar from '../../../elements/Avatar';\nimport { Title } from '../../../pages/resource';\nimport styled from '../../../themes/styled';\n\n// export interface Props {\n//   data?: PrimaryAccountable;\n// }\n\nconst PrimaryAccountablePerson: React.FC<any> = ({ data }) => {\n  return (\n    <PersonWrapper>\n      <Box mb={2} style={{ display: 'flex' }}>\n        <Avatar size=\"default\" src={`${process.env.REACT_APP_UPLOADS}/${data?.image}`} />\n        <div className=\"wrapper_info\">\n          <b>\n            <Trans>Primary Accountable: </Trans>\n          </b>\n          <Title variant=\"heading\">\n            <Trans>{data?.name}</Trans>\n          </Title>\n          <Trans>\n            <Text variant=\"text\">\n              <b>Relationships As Object: </b>\n              {data?.relationshipsAsObject + ''}\n            </Text>\n          </Trans>\n        </div>\n      </Box>\n    </PersonWrapper>\n  );\n};\n\nexport default PrimaryAccountablePerson;\n\nexport const PersonWrapper = styled('div')`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  border: 1px solid #eee;\n  padding: 10px;\n  width: 100%;\n\n  .d-flex {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .wrapper_info {\n    margin-left: 20px;\n  }\n\n  .intent {\n    padding: 10px 0;\n    &:not(:last-child) {\n      border-bottom: 1px solid #eee;\n    }\n  }\n`;\n","import { Trans } from '@lingui/macro';\nimport { ApolloError } from 'apollo-client';\nimport * as React from 'react';\nimport { Box, Text } from 'rebass/styled-components';\nimport { Link } from 'react-router-dom';\n// import { EconomicResource } from '../../../HOC/pages/inventory/InventoryPage';\nimport { HomeBox, MainContainer, Wrapper, WrapperCont } from 'ui/elements/Layout';\nimport Button from 'ui/elements/Button';\nimport { PersonWrapper } from '../../modules/Resource/PrimaryAccountablePerson';\nimport styled from '../../themes/styled';\nimport { Map } from 'ui/elements/Map';\nimport media from 'styled-media-query';\nimport { format } from 'date-fns';\n\nconst ArrowDownIcon = require('react-feather/dist/icons/chevron-down').default;\nconst ArrowUpIcon = require('react-feather/dist/icons/chevron-up').default;\nconst MapIcon = require('react-feather/dist/icons/map').default;\nconst BoxIcon = require('react-feather/dist/icons/box').default;\nconst PenIcon = require('react-feather/dist/icons/edit').default;\nconst EditIcon = require('react-feather/dist/icons/edit-3').default;\nconst UserIcon = require('react-feather/dist/icons/user').default;\nconst ClockIcon = require('react-feather/dist/icons/clock').default;\nconst RemoveIcon = require('react-feather/dist/icons/trash-2').default;\nconst EyeIcon = require('react-feather/dist/icons/eye').default;\nconst Calendar = require('react-feather/dist/icons/calendar').default;\n\nconst QRCode = require('qrcode.react');\n\nexport interface Props {\n  openEditModal: () => void;\n  openUpdateResourceModal: () => void;\n  openDeleteResourceModal: () => void;\n  resource?: any;\n  error?: ApolloError | undefined;\n  loading: boolean;\n}\n\nexport const ResourceItem: React.FC<Props> = ({\n  resource,\n  openEditModal,\n  openUpdateResourceModal,\n  openDeleteResourceModal\n}) => {\n  const URL = window.location.href;\n\n  const [showList, setShowList] = React.useState({\n    first: false,\n    second: false\n  });\n\n  return (\n    <MainContainer>\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            <ActionsWrapper>\n              <Button mr={2} onClick={openEditModal} variant=\"button\">\n                <Trans>Perform event</Trans>\n              </Button>\n              <Button ml={2} onClick={openUpdateResourceModal} variant=\"error\">\n                <EditIcon size=\"16\" className=\"ml-2\" /> <Trans>Edit</Trans>\n              </Button>\n              <Button ml={2} onClick={openDeleteResourceModal} variant=\"error\">\n                <RemoveIcon size=\"16\" className=\"ml-2\" /> <Trans>Delete</Trans>\n              </Button>\n            </ActionsWrapper>\n            <InventoryWrapper>\n              <LeftColWrapper>\n                <ImageWrapper>\n                  {resource?.image && <img src={resource.image} alt={resource.name} />}\n                </ImageWrapper>\n                <QRCodeWrapper>{resource?.id && <QRCode value={URL} />}</QRCodeWrapper>\n              </LeftColWrapper>\n              <InfoWrapper>\n                <Box mb={2}>\n                  <Title variant=\"heading\">\n                    {' '}\n                    <Trans>{resource && resource.name}</Trans>\n                  </Title>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <PenIcon size=\"16\" />\n                    </Icon>\n                    <b>\n                      <Trans>Note:</Trans>{' '}\n                    </b>{' '}\n                    <Trans>{resource?.note ? resource.note : 'Not provided'}</Trans>\n                  </Text>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <MapIcon size=\"16\" />\n                    </Icon>\n                    <b>\n                      <Trans>Location:</Trans>\n                    </b>{' '}\n                    {resource?.currentLocation?.name\n                      ? resource.currentLocation.name\n                      : 'Not provided'}\n                  </Text>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <BoxIcon size=\"16\" />\n                    </Icon>\n                    <b>Quantity in stock:</b>{' '}\n                    <span\n                      style={{\n                        color:\n                          resource?.onhandQuantity && resource.onhandQuantity.hasNumericalValue < 0\n                            ? 'red'\n                            : 'inherit'\n                      }}\n                    >\n                      {resource?.onhandQuantity\n                        ? `${resource?.onhandQuantity?.hasNumericalValue} ${resource?.onhandQuantity?.hasUnit.label}`\n                        : 'Not provided'}\n                    </span>\n                  </Text>\n                </Box>\n                <Box>\n                  <Text variant=\"text\">\n                    <Icon>\n                      <UserIcon size=\"16\" />\n                    </Icon>\n                    <b>\n                      <Trans>Owner:</Trans>\n                    </b>{' '}\n                    {resource?.primaryAccountable\n                      ? resource?.primaryAccountable.name\n                      : 'Not provided'}\n                  </Text>\n                </Box>\n                <Box p={3}>\n                  <Text variant=\"subhead\">\n                    <Icon>\n                      <ClockIcon size=\"16\" />\n                    </Icon>\n                    History:{' '}\n                    {resource?.track?.length > 0 || resource?.trace?.length > 0\n                      ? ''\n                      : 'Not available'}\n                  </Text>\n                </Box>\n                {resource?.track?.map((track: any) => {\n                  return (\n                    <TrackWrapper key={track.id}>\n                      <Badge>\n                        {track.action ? (\n                          <Trans>{track.action.label}</Trans>\n                        ) : (\n                          <Trans>Not provided</Trans>\n                        )}\n                      </Badge>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <EyeIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Result: </Trans>\n                          </b>{' '}\n                          {track.toResourceInventoriedAs ? (\n                            <Link\n                              to={`/resource/${track.toResourceInventoriedAs.id}`}\n                              key={track.toResourceInventoriedAs.id}\n                            >\n                              {track.toResourceInventoriedAs.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <PenIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Track note: </Trans>\n                          </b>{' '}\n                          {track.note ? track.note : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <Calendar size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Event Date: </Trans>\n                          </b>{' '}\n                          {track.hasPointInTime\n                            ? format(new Date(track.hasPointInTime), 'dd.MM.yyyy')\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <BoxIcon size=\"16\" />\n                          </Icon>\n                          <b>Quantity: </b>{' '}\n                          {track.resourceQuantity?.hasNumericalValue\n                            ? `${track.resourceQuantity?.hasNumericalValue} ${track.resourceQuantity?.hasUnit.label}`\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Provider:</Trans>\n                          </b>{' '}\n                          {track.provider ? (\n                            <Link to={`/user/${track.provider.id}`} key={track.provider.id}>\n                              {track.provider.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Receiver:</Trans>\n                          </b>{' '}\n                          {track.receiver ? (\n                            <Link to={`/user/${track.receiver.id}`} key={track.receiver.id}>\n                              {track.receiver.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                    </TrackWrapper>\n                  );\n                })}\n                {resource?.trace?.map((trace: any) => {\n                  return (\n                    <TrackWrapper key={trace.id}>\n                      <Badge>\n                        {trace.action ? (\n                          <Trans>{trace.action.label}</Trans>\n                        ) : (\n                          <Trans>Not provided</Trans>\n                        )}\n                      </Badge>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <EyeIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Source: </Trans>\n                          </b>{' '}\n                          {trace.resourceInventoriedAs ? (\n                            <Link\n                              to={`/resource/${trace.resourceInventoriedAs.id}`}\n                              key={trace.resourceInventoriedAs.id}\n                            >\n                              {trace.resourceInventoriedAs.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <PenIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Trace note: </Trans>\n                          </b>{' '}\n                          {trace.note ? trace.note : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <BoxIcon size=\"16\" />\n                          </Icon>\n                          <b>Quantity:</b>{' '}\n                          {trace.resourceQuantity?.hasNumericalValue\n                            ? `${trace.resourceQuantity?.hasNumericalValue} ${trace.resourceQuantity?.hasUnit.label}`\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <Calendar size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Event Date: </Trans>\n                          </b>{' '}\n                          {trace.hasPointInTime\n                            ? format(new Date(trace.hasPointInTime), 'dd.MM.yyyy')\n                            : 'Not provided'}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Provider:</Trans>\n                          </b>{' '}\n                          {trace.provider ? (\n                            <Link to={`/user/${trace.provider.id}`} key={trace.provider.id}>\n                              {trace.provider.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                      <Box mr={1}>\n                        <Text variant=\"text\">\n                          <Icon>\n                            <UserIcon size=\"16\" />\n                          </Icon>\n                          <b>\n                            <Trans>Receiver:</Trans>\n                          </b>{' '}\n                          {trace.receiver ? (\n                            <Link to={`/user/${trace.receiver.id}`} key={trace.receiver.id}>\n                              {trace.receiver.name}\n                            </Link>\n                          ) : (\n                            'Not available'\n                          )}\n                        </Text>\n                      </Box>\n                    </TrackWrapper>\n                  );\n                })}\n                <Box p={3}>\n                  <Text variant=\"subhead\">\n                    <Icon>\n                      <MapIcon size=\"16\" />\n                    </Icon>\n                    Location:\n                  </Text>\n                </Box>\n                <Map\n                  zoom={13}\n                  markers={[\n                    {\n                      position: {\n                        lng: resource?.currentLocation?.long || 2.2,\n                        lat: resource?.currentLocation?.lat || 41.4\n                      }\n                    }\n                  ]}\n                ></Map>\n                <PersonWrapper>\n                  <div className=\"d-flex\">\n                    <Text variant=\"heading\">\n                      <Trans>More info</Trans>\n                    </Text>\n                    <Button\n                      mr={2}\n                      onClick={() =>\n                        setShowList({\n                          ...showList,\n                          first: !showList.first\n                        })\n                      }\n                      variant=\"show-more\"\n                    >\n                      {showList.first ? (\n                        <>\n                          <ArrowUpIcon size=\"16\" />\n                          <Trans>Hide data</Trans>\n                        </>\n                      ) : (\n                        <>\n                          <ArrowDownIcon size=\"16\" />\n                          <Trans>Show data</Trans>\n                        </>\n                      )}\n                    </Button>\n                  </div>\n\n                  {showList.first ? (\n                    <div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>contained In:</Trans>\n                          </b>{' '}\n                          {resource?.containedIn + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>contains:</Trans>\n                          </b>{' '}\n                          {resource?.contains + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>lot:</Trans>\n                          </b>{' '}\n                          {resource?.lot + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>stage:</Trans>\n                          </b>{' '}\n                          {resource?.stage + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>trace length:</Trans>\n                          </b>{' '}\n                          {resource?.trace.length}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>tracking Identifier:</Trans>\n                          </b>{' '}\n                          {resource?.trackingIdentifier + ''}\n                        </Text>\n                      </div>\n                      <div className=\"intent\">\n                        <Text variant=\"text\">\n                          <b>\n                            <Trans>unit Of Effort:</Trans>\n                          </b>{' '}\n                          {resource?.unitOfEffort + ''}\n                        </Text>\n                      </div>\n                    </div>\n                  ) : null}\n                </PersonWrapper>\n              </InfoWrapper>\n            </InventoryWrapper>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nexport const Badge = styled(Text)`\n  background: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.light};\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 10px;\n  border-radius: 4px;\n  padding: 3px 5px;\n  width: auto;\n  display: inline-block;\n  margin-bottom: 10px;\n`;\nexport const Title = styled(Text)`\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none !important;\n`;\n\nexport const Icon = styled(Box)`\n  width: 30px;\n  display: inline-block;\n  svg {\n    stroke: ${props => props.theme.colors.mediumdark};\n  }\n`;\n\nexport const InventoryWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  flex-grow: 0;\n  background: #fff;\n  height: auto;\n  padding: 1em;\n  margin-bottom: 10px;\n\n  ${media.lessThan('medium')`\n        display: block;\n      `};\n`;\n\nexport const LeftColWrapper = styled('div')`\n  ${media.lessThan('medium')`\n        display: flex;\n        margin-bottom: 20px;\n      `};\n`;\nexport const TrackWrapper = styled('div')`\n  padding: 10px 10px 10px 20px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const ActionsWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  padding: 15px 0 0;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  button {\n    margin-right: 0;\n  }\n\n  ${media.lessThan('medium')`\n        padding: 10px 15px 0;\n      `};\n`;\n\nexport const InfoWrapper = styled('div')`\n  flex-basis: calc(100% - 160px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const ImageWrapper = styled('div')`\n  flex-basis: 140px;\n  width: 140px;\n  height: 140px;\n  border-radius: 4px;\n  background-color: #f3f3f3;\n\n  img {\n    width: 100%;\n    height: 140px;\n    object-fit: cover;\n    border-radius: 4px;\n  }\n`;\nexport const QRCodeWrapper = styled(ImageWrapper)`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${media.lessThan('medium')`\n        margin-top: 0;\n        margin-left: 20px;\n      `};\n`;\n\nexport const IconWrapper = styled(ImageWrapper)`\n  flex-basis: 100px;\n  width: 100px;\n  height: 100px;\n\n  img {\n    height: 100px;\n  }\n`;\n","export const PAGE_LIMIT = 5;\nexport const PAGE_START = 1;\nexport const MAX_PAGINATION_NUMBERS = 4;\nexport const NAME = 'name';\nexport const CREATE = 'create';\nexport const ASC = 'ASC';\nexport const DES = 'DES';\nexport const DEFAULT_SORT_PARAM = 'name';\n","import { Textarea } from '@rebass/forms';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Flex } from 'rebass/styled-components';\n// import { dropEmoji } from '../../lib/pagination';\n// import EmojiPicker from 'pagination-picker-react';\n// import OutsideClickHandler from 'react-outside-click-handler';\nimport Button from 'ui/elements/Button';\nimport styled from 'ui/themes/styled';\nimport { Trans } from '@lingui/macro';\n// const PickerWrap = styled.div`\n//   position: absolute;\n//   right: 10px;\n//   top: 45px;\n//   z-index: 999999999999999999;\n// `;\nconst Wrapper = styled(Flex)`\n  width: 100%;\n  position: relative;\n  height: 200px;\n  flex-direction: column;\n`;\nconst SocialTextDiv = styled(Flex)`\n  position: relative;\n  width: 100%;\n  align-items: center;\n  border: ${props => props.theme.colors.border};\n  border-radius: 4px;\n  margin-bottom: 8px;\n  background: white;\n  flex: 1;\n`;\n// const EmojiPickerTrigger = styled(Box)`\n//   cursor: pointer;\n//   &:hover {\n//     svg {\n//       stroke: ${props => props.theme.colors.primary}\n//     }\n//   }\n// `;\n\nconst SocialTextArea = styled(Textarea)`\n  height: 100%;\n  resize: none;\n  background: ${props => props.theme.colors.appInverse};\n  flex: 1;\n  border: 0 !important;\n  &:focus {\n    outline: none;\n  }\n  font-family: 'Barlow', 'Open Sans', sans-serif !important;\n`;\n\nconst SocialActions = styled(Flex)`\n  align-self: flex-end;\n`;\n\nexport interface Props {\n  submit(text: string): void;\n  defaultValue?: string;\n  keepTextOnSubmit?: boolean;\n  placeholder?: string;\n}\nexport const SocialText: React.FC<Props> = ({\n  submit,\n  defaultValue = '',\n  keepTextOnSubmit = false,\n  placeholder = ''\n}) => {\n  const ref = useRef<any>(null);\n  const [text, setText] = useState(defaultValue);\n  // const [isEmojiOpen, setEmojiOpen] = useState(false);\n  // const toggleEmoji = useCallback(() => setEmojiOpen(!isEmojiOpen), [\n  //   isEmojiOpen\n  // ]);\n  // const addEmoji = React.useCallback(\n  //   (code, obj) => {\n  //     // console.log(code, obj);\n  //     if (!ref.current) {\n  //       return;\n  //     }\n  //     const textarea = ref.current as HTMLTextAreaElement;\n  //     const selectionStart = textarea.selectionStart;\n  //     // const selectionEnd = textarea.selectionEnd\n  //     const offset = dropEmoji(textarea, obj.pagination);\n  //     const pos = selectionStart + offset;\n  //     textarea.focus();\n  //     // console.log([selectionStart,selectionEnd], offset, pos, [textarea.selectionStart, textarea.selectionEnd] )\n  //     textarea.selectionEnd = pos;\n  //   },\n  //   [ref.current]\n  // );\n  const handleSubmit = useCallback(() => {\n    if (!text) {\n      return;\n    }\n    submit(text);\n    if (!keepTextOnSubmit) {\n      setText('');\n    }\n  }, [text, keepTextOnSubmit, submit]);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    ref.current.value = text;\n  }, [text]);\n  const onChange = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const txt = ref.current.value;\n    setText(txt);\n  }, [setText]);\n  return (\n    <Wrapper>\n      <SocialTextDiv>\n        <SocialTextArea\n          placeholder={placeholder}\n          ref={ref}\n          defaultValue={defaultValue}\n          onInput={onChange}\n        />\n        {/* {isEmojiOpen && (\n          <OutsideClickHandler onOutsideClick={toggleEmoji}>\n            <PickerWrap>\n              <EmojiPicker preload onEmojiClick={addEmoji} />\n            </PickerWrap>\n          </OutsideClickHandler>\n        )} */}\n      </SocialTextDiv>\n      <SocialActions>\n        {/* <EmojiPickerTrigger onClick={toggleEmoji}>\n            <Smile color={'rgba(0,0,0,.4)'} size=\"24\" />\n          </EmojiPickerTrigger> */}\n        <Button\n          variant=\"primary\"\n          sx={{\n            cursor: text ? 'pointer' : 'default',\n            textTransform: 'capitalize'\n          }}\n          onClick={handleSubmit}\n        >\n          <Trans>Publish</Trans>\n        </Button>\n      </SocialActions>\n    </Wrapper>\n  );\n};\nexport default SocialText;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { ReactElement, useReducer } from 'react';\nimport { Plus } from 'react-feather';\nimport { Route, Switch } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Box, Flex, Text } from 'rebass/styled-components';\nimport { FormikHook } from 'ui/@types/types';\nimport { Button } from 'rebass/styled-components';\nimport {\n  ButtonIcon,\n  HomeBox,\n  List,\n  MainContainer,\n  MenuItem,\n  MenuList,\n  ObjectsList,\n  Wrapper,\n  WrapperCont\n} from 'ui/elements/Layout';\nimport { LoadMore } from 'ui/modules/Loadmore';\nimport SocialText from 'ui/modules/SocialText';\nimport styled from 'ui/themes/styled';\nimport { i18n } from '../../../context/global/localizationCtx';\nimport { useNotifyMustLogin } from '../../../HOC/lib/notifyMustLogin';\nimport { CreateLocationPanelHOC } from '../../../HOC/modules/CreateLocationPanel/CreateLocationPanelHOK';\nimport { CreateResourcePanelHOC } from '../../../HOC/modules/CreateResourcePanel/CreateResourcePanelHOC';\n// import { CreateIntentPanelHOC } from 'HOC/modules/CreateIntentPanel/createIntentPanelHOC';\nimport Modal from '../../modules/Modal';\nimport media from 'styled-media-query';\n\nexport interface Props {\n  isJoined: boolean;\n  communityId: string;\n  Activities: ReactElement[];\n  Members: ReactElement[];\n  Intents: ReactElement[];\n  // Inventory: ReactElement[];\n  // Collections: ReactElement[];\n  HeroCommunity: ReactElement;\n  Threads: ReactElement[];\n  newThreadFormik: null | FormikHook<{ text: string }>;\n  createCollection: () => unknown;\n  loadMoreActivities: FormikHook | null;\n  loadMoreCollections: FormikHook | null;\n  loadMoreThreads: FormikHook | null;\n  tabPaths: {\n    timeline: string;\n    members: string;\n    discussions: string;\n    // collections: string;\n    intents: string;\n    // inventory: string;\n  };\n}\n\nexport const Community: React.FC<Props> = ({\n  Activities,\n  HeroCommunity,\n  // Collections,\n  Members,\n  Intents,\n  // Inventory,\n  tabPaths,\n  newThreadFormik,\n  isJoined,\n  Threads,\n  loadMoreActivities,\n  communityId,\n  // loadMoreCollections,\n  loadMoreThreads\n  // createCollection\n}) => {\n  const notifiedMustJoin = (msg: string) => {\n    if (!isJoined) {\n      toast(msg, { type: 'warning' });\n      return true;\n    }\n    return false;\n  };\n  const notifiedMustLogin = useNotifyMustLogin();\n  const [showCreateResource, toggleShowCreateResource] = useReducer(\n    is =>\n      !notifiedMustJoin(i18n._(`You should join this community to create new resource`)) &&\n      !notifiedMustLogin() &&\n      !is,\n    false\n  );\n  const [showCreateLocation, toggleShowCreateLocation] = React.useState(false);\n  const [openIntent, setOpenIntent] = useReducer(\n    is =>\n      !notifiedMustJoin(i18n._(`You should join this community to create new intent`)) &&\n      !notifiedMustLogin() &&\n      !is,\n    false\n  );\n\n  const CreateResourceModal = showCreateResource ? (\n    <Modal closeModal={toggleShowCreateResource}>\n      {showCreateLocation ? (\n        <CreateLocationPanelHOC done={toggleShowCreateLocation} />\n      ) : (\n        <CreateResourcePanelHOC\n          done={toggleShowCreateResource}\n          toggleCreateLocation={toggleShowCreateLocation}\n        />\n      )}\n    </Modal>\n  ) : null;\n\n  const OpenIntentModal = openIntent ? (\n    <Modal\n      closeModal={() => {\n        setOpenIntent();\n      }}\n    >\n      <div>CreateIntentPanelHOC</div>\n      {/*<CreateIntentPanelHOC done={setOpenIntent} communityId={communityId} />*/}\n    </Modal>\n  ) : null;\n\n  return (\n    <MainContainer>\n      {CreateResourceModal}\n      {OpenIntentModal}\n      <HomeBox>\n        <WrapperCont>\n          <Wrapper>\n            {HeroCommunity}\n            <Menu tabPaths={tabPaths} />\n            <Switch>\n              <Route exact path={tabPaths.intents}>\n                <ButtonWrapper>\n                  <CreateItemButton variant=\"primary\" onClick={setOpenIntent}>\n                    <Plus size={16} color={'#fff'} />\n                    <Text variant=\"button\">\n                      <Trans>Create a new intent</Trans>\n                    </Text>\n                  </CreateItemButton>\n                </ButtonWrapper>\n                <ObjectsList>{Intents}</ObjectsList>\n              </Route>\n              <Route exact path={tabPaths.timeline}>\n                <>\n                  <List mt={2}>{Activities}</List>\n                  {loadMoreActivities && <LoadMore LoadMoreFormik={loadMoreActivities} />}\n                </>\n              </Route>\n              {/*<Route exact path={tabPaths.collections}>*/}\n              {/*  <>*/}\n              {/*    <Title px={3} mt={2}>*/}\n              {/*      <Text sx={{ flex: 1 }} variant=\"suptitle\">*/}\n              {/*        <Trans>All collections</Trans>*/}\n              {/*      </Text>*/}\n              {/*      <CreateCollectionButton variant=\"outline\" onClick={createCollection}>*/}\n              {/*        <Trans>Create a new collection</Trans>*/}\n              {/*      </CreateCollectionButton>*/}\n              {/*    </Title>*/}\n              {/*    <ObjectsList>*/}\n              {/*      <CollectionsBoxes>{Collections}</CollectionsBoxes>*/}\n              {/*    </ObjectsList>*/}\n              {/*    {loadMoreCollections && <LoadMore LoadMoreFormik={loadMoreCollections} />}*/}\n              {/*  </>*/}\n              {/*</Route>*/}\n              <Route exact path={tabPaths.discussions}>\n                <>\n                  <WrapSocialText p={3} mb={2}>\n                    {newThreadFormik && (\n                      <SocialText\n                        placeholder=\"Start a new thread...\"\n                        submit={text => {\n                          newThreadFormik.setValues({ text });\n                          newThreadFormik.submitForm();\n                        }}\n                      />\n                    )}\n                  </WrapSocialText>\n                  <Title px={3} mt={2}>\n                    <Text variant=\"suptitle\">All discussions</Text>\n                  </Title>\n                  <ObjectsList>{Threads}</ObjectsList>\n                  {loadMoreThreads && <LoadMore LoadMoreFormik={loadMoreThreads} />}\n                </>\n              </Route>\n              <Route path={tabPaths.members}>\n                <ObjectsList>{Members}</ObjectsList>\n              </Route>\n            </Switch>\n          </Wrapper>\n        </WrapperCont>\n      </HomeBox>\n    </MainContainer>\n  );\n};\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  height: 34px;\n  margin: 10px 0;\n  position: relative;\n\n  ${media.lessThan('medium')`\n      justify-content: space-between;\n      margin: 10px;\n  `};\n`;\nexport const CreateItemButton = styled(Button)`\n  margin: 0 10px;\n  height: 34px;\n  text-transform: capitalize;\n  line-height: 34px;\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  & > svg {\n    display: inline-block;\n    margin-right: 8px;\n    margin-left: 16px;\n  }\n  & > div {\n    color: #fff;\n    display: inline-block;\n  }\n\n  ${media.lessThan('medium')`\n      margin: 0 10px;\n  `};\n  &:hover {\n    background: ${props => props.theme.colors.primary};\n    color: ${props => props.theme.colors.appInverse};\n  }\n`;\n//\n// const CollectionsBoxes = styled(Box)`\n//   display: grid;\n//   grid-template-columns: 1fr 1fr;\n//   column-gap: 16px;\n//   row-gap: 16px;\n//   margin: 16px;\n//   margin-bottom: 24px !important;\n//   ${media.lessThan('medium')`\n//   grid-template-columns: 1fr;\n//   > div {\n//     margin: 0 auto;\n//     width: 300px;\n//   }\n//   `}\n// `;\n\n// const FollowersMenu = ({ basePath }: { basePath: string }) => (\n//   <MenuList m={2}>\n//     <NavLink exact to={`${basePath}`}>\n//       Members\n//     </NavLink>\n//   </MenuList>\n// );\n\nconst UsersIcon = require('react-feather/dist/icons/users').default;\nconst InboxIcon = require('react-feather/dist/icons/inbox').default;\nconst ActivityIcon = require('react-feather/dist/icons/activity').default;\nconst MessageIcon = require('react-feather/dist/icons/message-circle').default;\n\nconst Menu: React.FC<{ tabPaths: Props['tabPaths'] }> = ({ tabPaths }) => (\n  <MenuList p={3} pt={0}>\n    <MenuItem exact to={tabPaths.intents}>\n      <div className=\"text-holder\">\n        <Trans>Intents</Trans>\n      </div>\n      <ButtonIcon className=\"icon-holder\">\n        <InboxIcon size=\"24\" />\n      </ButtonIcon>\n    </MenuItem>\n    <MenuItem exact to={tabPaths.timeline}>\n      <div className=\"text-holder\">\n        <Trans>Recent activity</Trans>\n      </div>\n      <ButtonIcon className=\"icon-holder\">\n        <ActivityIcon size=\"24\" />\n      </ButtonIcon>\n    </MenuItem>\n    <MenuItem exact to={tabPaths.discussions}>\n      <div className=\"text-holder\">\n        <Trans>Discussions</Trans>\n      </div>\n      <ButtonIcon className=\"icon-holder\">\n        <MessageIcon size=\"24\" />\n      </ButtonIcon>\n    </MenuItem>\n    <MenuItem exact to={`${tabPaths.members}`}>\n      <div className=\"text-holder\">\n        <Trans>Members</Trans>\n      </div>\n      <ButtonIcon className=\"icon-holder\">\n        <UsersIcon size=\"24\" />\n      </ButtonIcon>\n    </MenuItem>\n  </MenuList>\n);\n\nconst Title = styled(Flex)`\n  background: ${props => props.theme.colors.appInverse};\n  height: 50px;\n  line-height: 50px;\n  align-items: center;\n  border-bottom: ${props => props.theme.colors.border};\n  button {\n    width: 190px;\n    text-transform: inherit;\n    letter-spacing: 0;\n    padding: 0;\n    height: 32px;\n    line-height: 32px;\n    background: #ffe5cd;\n    color: #ca6a11;\n    border: none;\n  }\n`;\n\n// const Container = styled(Box)`\n//   background: ${props => props.theme.colors.appInverse};\n// `;\n\nconst WrapSocialText = styled(Box)`\n  background: ${props => props.theme.colors.appInverse};\n`;\n\nexport default Community;\n","import { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PaginationComponent from 'react-reactstrap-pagination';\nimport { Plus } from 'react-feather';\nimport { NavLink } from 'react-router-dom';\nimport { Box, Text } from 'rebass/styled-components';\n// import { EconomicResource } from 'HOC/pages/inventory/InventoryPage';\n// import { EconomicResourcesFilteredQuery } from 'HOC/pages/inventory/InventoryPage.generated';\nimport { InventoryWrapper, InfoWrapper, ImageWrapper, Icon } from 'ui/pages/resource';\nimport { Wrapper } from 'ui/elements/Layout';\nimport { PAGE_LIMIT, PAGE_START, MAX_PAGINATION_NUMBERS } from 'util/constants/pagination';\nimport { typography } from '../../../mn-constants';\nimport styled from '../../themes/styled';\nimport { ButtonWrapper, CreateItemButton } from '../community';\nimport { useMe } from 'fe/session/useMe';\nimport { useEffect, useState } from 'react';\n\nconst BoxIcon = require('react-feather/dist/icons/box').default;\nconst PenIcon = require('react-feather/dist/icons/edit').default;\nconst UserIcon = require('react-feather/dist/icons/user').default;\n\nexport interface Props {\n  done: () => void;\n  inventory: any;\n  owner: string;\n}\n\nexport const Inventory: React.FC<Props> = ({ inventory, done, children, owner }) => {\n  const { me } = useMe();\n  const currentUser = me?.user?.id;\n  const [currentList, setCurrentList] = useState<any>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePagination = (page: number) => {\n    setCurrentPage(page);\n  };\n  useEffect(() => {\n    if (inventory.length) {\n      const newList = inventory.slice(\n        (currentPage - 1) * PAGE_LIMIT,\n        (currentPage - 1) * PAGE_LIMIT + PAGE_LIMIT\n      );\n      setCurrentList(newList);\n    } else {\n      setCurrentList([]);\n    }\n  }, [inventory, currentPage]);\n\n  useEffect(() => {\n    setCurrentPage(PAGE_START);\n  }, [inventory.length]);\n\n  return (\n    <>\n      <ButtonWrapper>\n        {me?.user?.id === owner && (\n          <CreateItemButton variant=\"primary\" onClick={done}>\n            <Plus size={16} color={'#fff'} />\n            <Text variant=\"button\">\n              <Trans>Create a new resource</Trans>\n            </Text>\n          </CreateItemButton>\n        )}\n      </ButtonWrapper>\n      <div style={{ position: 'relative' }}>{children}</div>\n      <Wrapper>\n        {!!currentList.length &&\n          currentList.map(({ id, name, note, image, onhandQuantity, primaryAccountable }: any) => (\n            <WrapperLink to={`/resource/${id}`} key={id}>\n              <InventoryWrapper key={id}>\n                <ImageWrapper>{image && <img src={image} alt={name} />}</ImageWrapper>\n                <InfoWrapper>\n                  <Title variant=\"subhead\">{name}</Title>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <Icon>\n                        <PenIcon size=\"16\" />\n                      </Icon>\n                      <b>\n                        <Trans>Note:</Trans>{' '}\n                      </b>{' '}\n                      <Trans>{note ? note : 'Not provided'}</Trans>\n                    </Text>\n                  </Box>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <Icon>\n                        <BoxIcon size=\"16\" />\n                      </Icon>\n                      <b>Quantity in stock:</b>{' '}\n                      <span\n                        style={{\n                          color:\n                            onhandQuantity && onhandQuantity.hasNumericalValue < 0\n                              ? 'red'\n                              : 'inherit'\n                        }}\n                      >\n                        {onhandQuantity\n                          ? `${onhandQuantity.hasNumericalValue} ${onhandQuantity.hasUnit.label}`\n                          : 'Not provided'}\n                      </span>\n                    </Text>\n                  </Box>\n                  <Box mr={1}>\n                    <Text variant=\"text\">\n                      <Icon>\n                        <UserIcon size=\"16\" />\n                      </Icon>\n                      <b>\n                        <Trans>Owner:</Trans>\n                      </b>{' '}\n                      {primaryAccountable?.id === currentUser ? 'Me' : primaryAccountable?.name}\n                    </Text>\n                  </Box>\n                </InfoWrapper>\n              </InventoryWrapper>\n            </WrapperLink>\n          ))}\n        {!!currentList.length && (\n          <PaginationWrapper>\n            <PaginationComponent\n              size=\"sm\"\n              totalItems={0}\n              pageSize={PAGE_LIMIT}\n              onSelect={handlePagination}\n              maxPaginationNumbers={MAX_PAGINATION_NUMBERS}\n              defaultActivePage={PAGE_START}\n              previousPageText=\"Prev\"\n            />\n          </PaginationWrapper>\n        )}\n        {!currentList.length && (\n          <p style={{ textAlign: 'center', fontWeight: 600, color: '#444444', paddingBottom: 40 }}>\n            No results\n          </p>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Inventory;\n\nconst PaginationWrapper = styled('div')`\n  text-align: center;\n\n  ul {\n    padding: 10px 0 20px;\n    margin: 0;\n  }\n\n  .page-link {\n    line-height: 30px;\n    border: 1px solid #999;\n    color: #999;\n    background-color: #fff;\n    border-radius: 4px;\n    margin: 2px;\n  }\n\n  .page-item.active .page-link {\n    border: 1px solid #02e379;\n    color: #02e379;\n  }\n`;\n\nconst WrapperLink = styled(NavLink)`\n  text-decoration: none !important;\n\n  * {\n    text-decoration: none !important;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: ${typography.size.m1};\n  color: ${props => props.theme.colors.dark};\n  text-decoration: none !important;\n  margin-bottom: 10px;\n\n  &:hover {\n    text-decoration: underline !important;\n  }\n`;\n","import React from 'react';\nimport styled from 'ui/themes/styled';\nimport { Input as InputStrap, Label } from 'reactstrap';\nimport { Button } from 'rebass/styled-components';\nimport media from 'styled-media-query';\nimport { i18nMark } from '@lingui/react';\nimport Input from '../../elements/Input';\n// import { FilterType } from 'HOC/pages/inventory/InventoryPage';\nimport { CollectionContainerForm } from '../CreateCollectionPanel/style';\nimport { FormGroup, FormLabel } from '../EconomicEventManager/styles';\nimport { ASC, DES, NAME } from '../../../util/constants/pagination';\n\ntype Props = {\n  isOpen: boolean;\n  filterSet: any;\n  triggerOpen: (value: boolean) => void;\n  onChange: (props: { [field: string]: string | boolean }, isClear?: boolean) => void;\n  onClear: () => void;\n};\nconst ArrowUp = require('react-feather/dist/icons/arrow-up').default;\nconst ArrowDown = require('react-feather/dist/icons/arrow-down').default;\nconst FilterIcon = require('react-feather/dist/icons/filter').default;\nconst ClearIcon = require('react-feather/dist/icons/x').default;\n\nexport const Filter: React.FC<Props> = ({ isOpen, filterSet, triggerOpen, onChange, onClear }) => {\n  const handleSorting = async (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    const buttonName = event.currentTarget.name;\n\n    onChange({ sort: buttonName, order: filterSet.order === DES ? ASC : DES });\n  };\n\n  return (\n    <div>\n      <FilterButton onClick={() => triggerOpen(!isOpen)} type=\"button\">\n        {isOpen ? <ClearIcon size=\"16\" /> : <FilterIcon size=\"16\" />}\n      </FilterButton>\n      {isOpen ? (\n        <>\n          <FilterWrapper>\n            <div className=\"d-flex\">\n              <div className=\"item_col-6 align-center\">\n                <SortButton\n                  onClick={handleSorting}\n                  name={NAME}\n                  className={filterSet.sort === NAME && 'active'}\n                >\n                  Sort by Name:\n                  {filterSet.sort === NAME && filterSet.order === ASC ? (\n                    <SortButtonInner>\n                      {' '}\n                      <ArrowUp size={16} /> {ASC}\n                    </SortButtonInner>\n                  ) : (\n                    <SortButtonInner>\n                      {' '}\n                      <ArrowDown size={16} /> {DES}\n                    </SortButtonInner>\n                  )}\n                </SortButton>\n              </div>\n            </div>\n            <FormGroup>\n              <FormLabel>Name</FormLabel>\n              <Input\n                type=\"text\"\n                id=\"name\"\n                name=\"search\"\n                onChange={({ currentTarget }: any) => onChange({ search: currentTarget.value })}\n                placeholder={i18nMark('Search query')}\n                value={filterSet.search}\n              />\n            </FormGroup>\n            <div className=\"d-flex\">\n              <div className=\"item_col-6\">\n                <FormGroupChek>\n                  <LabelCustom>\n                    <InputStrap\n                      style={{ width: 'auto' }}\n                      name=\"trace\"\n                      id=\"trace\"\n                      type=\"checkbox\"\n                      checked={filterSet.trace || false}\n                      onChange={() => onChange({ trace: !filterSet.trace })}\n                    />\n                    <span>Resulted from a previous resource</span>\n                  </LabelCustom>\n                </FormGroupChek>\n              </div>\n              <div className=\"item_col-6\">\n                <FormGroupChek>\n                  <LabelCustom>\n                    <InputStrap\n                      style={{ width: 'auto' }}\n                      name=\"track\"\n                      id=\"track\"\n                      type=\"checkbox\"\n                      checked={filterSet.track || false}\n                      onChange={() => onChange({ track: !filterSet.track })}\n                    />\n                    <span>Created further resources</span>\n                  </LabelCustom>\n                </FormGroupChek>\n              </div>\n            </div>\n            <div className=\"d-flex\">\n              <ClearButton\n                onClick={() => {\n                  onClear();\n                  triggerOpen(false);\n                }}\n                type=\"button\"\n              >\n                <ClearIcon size={16} />\n                Clear\n              </ClearButton>\n            </div>\n          </FilterWrapper>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nconst ClearButton = styled(Button)`\n  margin-left: auto;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nconst FilterWrapper = styled(CollectionContainerForm)`\n  padding: 10px;\n  background-color: #fff;\n  border: 1px solid #05244f;\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\n\nconst SortButtonInner = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  line-height: 40px;\n  margin: 0 20px;\n`;\n\nconst SortButton = styled(Button)`\n  background-color: transparent;\n  border: none;\n  color: #999;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &.active {\n    color: #05244f;\n  }\n`;\n\nconst FormGroupChek = styled.span`\n  text-transform: uppercase;\n  color: #999;\n  font-weight: 600;\n  letter-spacing: 1px;\n  padding: 0;\n\n  & > div {\n    display: flex;\n    padding: 10px 0;\n\n    input {\n      flex-basis: 20px;\n      height: 20px;\n    }\n  }\n`;\n\nconst LabelCustom = styled(Label)`\n  flex-basis: calc(100% - 30px);\n  font-family: Arial, sans-serif;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    display: inline-block;\n    margin-left: 20px;\n  }\n`;\nconst FilterButton = styled(Button)`\n  background-color: #fff;\n  border: 1px solid #05244f;\n  border-radius: 4px;\n  color: #05244f;\n  padding: 0;\n  margin: 0;\n  height: 34px;\n  width: 34px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: -44px;\n\n  ${media.lessThan('medium')`\n     margin: 0 15px 0 0;\n     left: 15px;\n  `};\n`;\n","import * as Types from '../../../graphql/types.generated';\n\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\nexport type EconomicResourceQueryVariables = {\n  id: Types.Scalars['ID']\n};\n\n\nexport type EconomicResourceQuery = (\n  { __typename: 'RootQueryType' }\n  & { economicResource: Types.Maybe<(\n    { __typename: 'EconomicResource' }\n    & Pick<Types.EconomicResource, 'id' | 'image' | 'trackingIdentifier' | 'name' | 'note'>\n    & { primaryAccountable: Types.Maybe<any>, stage: Types.Maybe<(\n      { __typename: 'ProcessSpecification' }\n      & Pick<Types.ProcessSpecification, 'id' | 'name' | 'note'>\n    )>, contains: Types.Maybe<Array<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'image'>\n    )>>, containedIn: Types.Maybe<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id' | 'name'>\n    )>, currentLocation: Types.Maybe<(\n      { __typename: 'SpatialThing' }\n      & Pick<Types.SpatialThing, 'id' | 'name' | 'lat' | 'long'>\n    )>, lot: Types.Maybe<(\n      { __typename: 'ProductBatch' }\n      & Pick<Types.ProductBatch, 'id' | 'expiryDate' | 'batchNumber'>\n    )>, track: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, trace: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, unitOfEffort: Types.Maybe<(\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label'>\n    )> }\n    & OnhandQuantityFragment\n  )> }\n);\n\nexport type OnhandQuantityFragment = (\n  { __typename: 'EconomicResource' }\n  & { onhandQuantity: Types.Maybe<(\n    { __typename: 'Measure' }\n    & Pick<Types.Measure, 'id' | 'hasNumericalValue'>\n    & { hasUnit: (\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label'>\n    ) }\n  )> }\n);\n\nexport type ResourceQuantityFragment = (\n  { __typename: 'EconomicEvent' }\n  & { resourceQuantity: Types.Maybe<(\n    { __typename: 'Measure' }\n    & Pick<Types.Measure, 'hasNumericalValue' | 'canonicalUrl'>\n    & { hasUnit: (\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label' | 'symbol'>\n    ) }\n  )> }\n);\n\nexport const OnhandQuantityFragmentDoc = gql`\n    fragment OnhandQuantity on EconomicResource {\n  onhandQuantity {\n    id\n    hasNumericalValue\n    hasUnit {\n      id\n      label\n    }\n  }\n}\n    `;\nexport const ResourceQuantityFragmentDoc = gql`\n    fragment ResourceQuantity on EconomicEvent {\n  resourceQuantity {\n    hasNumericalValue\n    canonicalUrl\n    hasUnit {\n      id\n      label\n      symbol\n    }\n  }\n}\n    `;\nexport const EconomicResourceDocument = gql`\n    query economicResource($id: ID!) {\n  economicResource(id: $id) {\n    id\n    image\n    trackingIdentifier\n    primaryAccountable {\n      id\n      name\n      image\n      relationshipsAsObject {\n        id\n        relationship {\n          id\n          inverseRoleLabel\n        }\n      }\n    }\n    name\n    note\n    image\n    stage {\n      id\n      name\n      note\n    }\n    contains {\n      image\n    }\n    stage {\n      id\n      name\n      note\n    }\n    containedIn {\n      id\n      name\n    }\n    currentLocation {\n      id\n      name\n      lat\n      long\n    }\n    lot {\n      id\n      expiryDate\n      batchNumber\n    }\n    track {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        action {\n          id\n          label\n        }\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        ...ResourceQuantity\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    trace {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        action {\n          id\n          label\n        }\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        ...ResourceQuantity\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    unitOfEffort {\n      id\n      label\n    }\n    ...OnhandQuantity\n  }\n}\n    ${ResourceQuantityFragmentDoc}\n${OnhandQuantityFragmentDoc}`;\n\n/**\n * __useEconomicResourceQuery__\n *\n * To run a query within a React component, call `useEconomicResourceQuery` and pass it any options that fit your needs.\n * When your component renders, `useEconomicResourceQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useEconomicResourceQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useEconomicResourceQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<EconomicResourceQuery, EconomicResourceQueryVariables>) {\n        return ApolloReactHooks.useQuery<EconomicResourceQuery, EconomicResourceQueryVariables>(EconomicResourceDocument, baseOptions);\n      }\nexport function useEconomicResourceLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<EconomicResourceQuery, EconomicResourceQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<EconomicResourceQuery, EconomicResourceQueryVariables>(EconomicResourceDocument, baseOptions);\n        }\nexport type EconomicResourceQueryHookResult = ReturnType<typeof useEconomicResourceQuery>;\nexport type EconomicResourceLazyQueryHookResult = ReturnType<typeof useEconomicResourceLazyQuery>;\nexport type EconomicResourceQueryResult = ApolloReactCommon.QueryResult<EconomicResourceQuery, EconomicResourceQueryVariables>;\n\n\nexport interface EconomicResourceQueryOperation {\n  operationName: 'economicResource'\n  result: EconomicResourceQuery\n  variables: EconomicResourceQueryVariables\n  type: 'query'\n}\nexport const EconomicResourceQueryName:EconomicResourceQueryOperation['operationName'] = 'economicResource'\n\nexport const EconomicResourceQueryRefetch = (\n  variables:EconomicResourceQueryVariables,\n  context?:any\n)=>({\n  query:EconomicResourceDocument,\n  variables,\n  context\n})\n\n","import * as Types from '../../../graphql/types.generated';\n\nimport { OnhandQuantityFragment } from '../resource/EconomicResource.generated';\nimport { ResourceQuantityFragment } from '../resource/EconomicResource.generated';\nimport gql from 'graphql-tag';\nimport { ResourceQuantityFragmentDoc } from '../resource/EconomicResource.generated';\nimport { OnhandQuantityFragmentDoc } from '../resource/EconomicResource.generated';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\n\n\n\nexport type EconomicResourcesFilteredQueryVariables = {\n  agent?: Types.Maybe<Array<Types.Maybe<Types.Scalars['ID']>>>\n};\n\n\nexport type EconomicResourcesFilteredQuery = (\n  { __typename: 'RootQueryType' }\n  & { economicResourcesFiltered: Types.Maybe<Array<Types.Maybe<(\n    { __typename: 'EconomicResource' }\n    & Pick<Types.EconomicResource, 'id' | 'image' | 'trackingIdentifier' | 'name' | 'note'>\n    & { primaryAccountable: Types.Maybe<any>, stage: Types.Maybe<(\n      { __typename: 'ProcessSpecification' }\n      & Pick<Types.ProcessSpecification, 'id' | 'name' | 'note'>\n    )>, contains: Types.Maybe<Array<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'image'>\n    )>>, containedIn: Types.Maybe<(\n      { __typename: 'EconomicResource' }\n      & Pick<Types.EconomicResource, 'id' | 'name'>\n    )>, currentLocation: Types.Maybe<(\n      { __typename: 'SpatialThing' }\n      & Pick<Types.SpatialThing, 'id' | 'name' | 'lat' | 'long'>\n    )>, lot: Types.Maybe<(\n      { __typename: 'ProductBatch' }\n      & Pick<Types.ProductBatch, 'id' | 'expiryDate' | 'batchNumber'>\n    )>, track: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, trace: Types.Maybe<Array<(\n      { __typename: 'EconomicEvent' }\n      & Pick<Types.EconomicEvent, 'id' | 'note' | 'hasPointInTime'>\n      & { toResourceInventoriedAs: Types.Maybe<(\n        { __typename: 'EconomicResource' }\n        & Pick<Types.EconomicResource, 'id' | 'name'>\n      )>, action: (\n        { __typename: 'Action' }\n        & Pick<Types.Action, 'id' | 'label'>\n      ), provider: any, receiver: any, atLocation: Types.Maybe<(\n        { __typename: 'SpatialThing' }\n        & Pick<Types.SpatialThing, 'id' | 'name'>\n      )> }\n      & ResourceQuantityFragment\n    ) | { __typename: 'EconomicResource' } | { __typename: 'Process' }>>, unitOfEffort: Types.Maybe<(\n      { __typename: 'Unit' }\n      & Pick<Types.Unit, 'id' | 'label'>\n    )> }\n    & OnhandQuantityFragment\n  )>>> }\n);\n\n\nexport const EconomicResourcesFilteredDocument = gql`\n    query economicResourcesFiltered($agent: [ID]) {\n  economicResourcesFiltered(agent: $agent) {\n    id\n    image\n    trackingIdentifier\n    primaryAccountable {\n      id\n      name\n      image\n      relationshipsAsObject {\n        id\n        relationship {\n          id\n          inverseRoleLabel\n        }\n      }\n    }\n    name\n    note\n    image\n    stage {\n      id\n      name\n      note\n    }\n    contains {\n      image\n    }\n    stage {\n      id\n      name\n      note\n    }\n    containedIn {\n      id\n      name\n    }\n    currentLocation {\n      id\n      name\n      lat\n      long\n    }\n    lot {\n      id\n      expiryDate\n      batchNumber\n    }\n    track {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        action {\n          id\n          label\n        }\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        ...ResourceQuantity\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    trace {\n      __typename\n      ... on EconomicEvent {\n        id\n        note\n        toResourceInventoriedAs {\n          id\n          name\n        }\n        hasPointInTime\n        action {\n          id\n          label\n        }\n        provider {\n          id\n          name\n        }\n        receiver {\n          id\n          name\n        }\n        ...ResourceQuantity\n        atLocation {\n          id\n          name\n        }\n      }\n    }\n    unitOfEffort {\n      id\n      label\n    }\n    ...OnhandQuantity\n  }\n}\n    ${ResourceQuantityFragmentDoc}\n${OnhandQuantityFragmentDoc}`;\n\n/**\n * __useEconomicResourcesFilteredQuery__\n *\n * To run a query within a React component, call `useEconomicResourcesFilteredQuery` and pass it any options that fit your needs.\n * When your component renders, `useEconomicResourcesFilteredQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useEconomicResourcesFilteredQuery({\n *   variables: {\n *      agent: // value for 'agent'\n *   },\n * });\n */\nexport function useEconomicResourcesFilteredQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>) {\n        return ApolloReactHooks.useQuery<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>(EconomicResourcesFilteredDocument, baseOptions);\n      }\nexport function useEconomicResourcesFilteredLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>(EconomicResourcesFilteredDocument, baseOptions);\n        }\nexport type EconomicResourcesFilteredQueryHookResult = ReturnType<typeof useEconomicResourcesFilteredQuery>;\nexport type EconomicResourcesFilteredLazyQueryHookResult = ReturnType<typeof useEconomicResourcesFilteredLazyQuery>;\nexport type EconomicResourcesFilteredQueryResult = ApolloReactCommon.QueryResult<EconomicResourcesFilteredQuery, EconomicResourcesFilteredQueryVariables>;\n\n\nexport interface EconomicResourcesFilteredQueryOperation {\n  operationName: 'economicResourcesFiltered'\n  result: EconomicResourcesFilteredQuery\n  variables: EconomicResourcesFilteredQueryVariables\n  type: 'query'\n}\nexport const EconomicResourcesFilteredQueryName:EconomicResourcesFilteredQueryOperation['operationName'] = 'economicResourcesFiltered'\n\nexport const EconomicResourcesFilteredQueryRefetch = (\n  variables:EconomicResourcesFilteredQueryVariables,\n  context?:any\n)=>({\n  query:EconomicResourcesFilteredDocument,\n  variables,\n  context\n})\n\n","// import { useUserOutboxActivities } from 'fe/activities/outbox/user/useUserOutboxActivities';\n// import { useUserFollowedCollections } from 'fe/collection/user/useUserFollowedCollections';\n// import { UserFollowedCollectionFragment } from 'fe/collection/user/useUserFollowedCollections.generated';\n// import { useUserFollowedCommunities } from 'fe/community/user/useUserFollowedCommunities';\n// import { UserFollowedCommunityFragment } from 'fe/community/user/useUserFollowedCommunities.generated';\n// import { getActivityActor } from 'fe/lib/activity/getActivityActor';\n// import { getEventStringByContext } from 'fe/lib/activity/getActivityEventString';\n// import { getCommunityInfoStrings } from 'fe/lib/activity/getContextCommunityInfo';\n// import { useUserLikes } from 'fe/likes/user/useUserLikes';\n// import { useUserFollowedUsers } from 'fe/user/followed/user/useUserFollowedUsers';\n// import { UserFollowedUserFragment } from 'fe/user/followed/user/useUserFollowedUsers.generated';\nimport { useUser } from 'fe/user/useUser';\n// import { ActivityVerb, User } from 'graphql/types.generated';\nimport { HeroUser } from 'HOC/modules/HeroUser/HeroUser';\n// import { ActivityPreviewHOC } from 'HOC/modules/previews/activity/ActivityPreview';\n// import { PreviewComponent } from 'HOC/modules/previews/activity/PreviewComponent';\n// import { CollectionPreviewHOC } from 'HOC/modules/previews/collection/CollectionPreview';\n// import { LikedCommentPreviewHOC } from 'HOC/modules/previews/commentLiked/CommentLikedPreview';\n// import { CommunityPreviewHOC } from 'HOC/modules/previews/community/CommunityPreview';\n// import { UserPreviewHOC } from 'HOC/modules/previews/user/UserPreview';\nimport React, { FC, useMemo } from 'react';\nimport { Props, User as UserPageUI } from 'ui/pages/user';\nimport { InventoryPage } from '../inventory/InventoryPage';\n// export interface UserPage {\n//   userId: User['id'];\n//   tab: UserPageTab;\n//   basePath: string;\n// }\nexport enum UserPageTab {\n  Starred,\n  Communities,\n  Collections,\n  Following,\n  Activities,\n  Inventory\n}\n// const userActivitiesPageTitle = t`User {name} - Activities`;\n// const userInventoryPageTitle = t`User {name} - Inventory`;\n\nexport const UserPage: FC<any> = ({ userId, basePath, tab }) => {\n  const userInfo = useUser(userId);\n  // const userPageTitle =\n  //   tab === UserPageTab.Activities\n  //     ? userActivitiesPageTitle\n  //     : tab === UserPageTab.Inventory\n  //     ? userInventoryPageTitle\n  //     : userInventoryPageTitle; //never\n  // usePageTitle(!!userInfo?.user?.name && userPageTitle, userInfo.user);\n\n  // const { likesPage } = useUserLikes(userId);\n  // const [loadMoreLikes] = likesPage.formiks;\n\n  // const { activitiesPage } = useUserOutboxActivities(userId);\n  // const [loadMoreActivities] = activitiesPage.formiks;\n\n  // const { followedCollectionsPage } = useUserFollowedCollections(userId);/\n  // const [loadMoreCollections] = followedCollectionsPage.formiks;\n\n  // const { followedCommunitiesPage } = useUserFollowedCommunities(userId);\n  // const [loadMoreCommunities] = followedCommunitiesPage.formiks;\n  //\n  // const { followedUsersPage } = useUserFollowedUsers(userId);\n  // const [loadMoreFollowing] = followedUsersPage.formiks;\n\n  const userPageProps = useMemo<Props>(() => {\n    // const { totalActivities, totalCollections, totalCommunities, totalUsers } = userInfo;\n    const LikesBoxes = (\n      <>\n        {/*{likesPage.edges.map((like: any) => {*/}\n        {/*  const likeContext =*/}\n        {/*    like.context.__typename !== 'Category' &&*/}\n        {/*    like.context.__typename !== 'Flag' &&*/}\n        {/*    like.context.__typename !== 'Follow' &&*/}\n        {/*    like.context.__typename !== 'Like' &&*/}\n        {/*    like.context.__typename !== 'SpatialThing' &&*/}\n        {/*    like.context.__typename !== 'Organisation' &&*/}\n        {/*    like.context.__typename !== 'Taggable' &&*/}\n        {/*    like.context.__typename !== 'Intent'*/}\n        {/*      ? like.context*/}\n        {/*      : null;*/}\n        {/*  const { communityLink, communityName } = getCommunityInfoStrings(likeContext);*/}\n        const actor = userInfo.user ? getActivityActor(userInfo.user) : null; const activityContext\n        = like; // const event = getEventStringByContext(activityContext, ActivityVerb.Created);\n        const preview = like.context.__typename === 'Comment' ? (\n        {/*<LikedCommentPreviewHOC key={like.id} commentId={like.context.id} />*/}) : (\n        {/*<PreviewComponent context={activityContext} />*/}\n        ); // const activityProps: ActivityPreviewProps ={' '}\n        {\n          //   actor,\n          //   communityLink,\n          //   communityName,\n          //   createdAt: like.createdAt,\n          //   event,\n          //   status: Status.Loaded,\n          //   preview\n          // };\n          // return <ActivityPreview {...activityProps} key={activityContext.id} />;\n        }\n        )}\n      </>\n    );\n    const ActivityBoxes = (\n      <>\n        {userInfo.user?.userActivities?.map((activity: any) => (\n          <>\n            <div>\n              <b>ID: </b> <span>{activity?.id}</span>\n            </div>\n            <div>\n              <b>Verb: </b> <span>{activity?.verb?.verb}</span>\n            </div>\n            <div>\n              <b>verbDisplay: </b> <span>{activity?.verb?.verbDisplay}</span>\n            </div>\n          </>\n        ))}\n      </>\n    );\n    const CollectionsBoxes = (\n      <>\n        {/*{followedCollectionsPage.edges*/}\n        {/*  .map(follow => follow.context)*/}\n        {/*  .filter(*/}\n        {/*    (context): context is UserFollowedCollectionFragment =>*/}\n        {/*      context.__typename === 'Collection'*/}\n        {/*  )*/}\n        {/*  .map(followedCollection => (*/}\n        {/*    <Box m={2} mb={0} key={followedCollection.id}>*/}\n        {/*      <CollectionPreviewHOC*/}\n        {/*        collectionId={followedCollection.id}*/}\n        {/*        key={followedCollection.id}*/}\n        {/*      />*/}\n        {/*    </Box>*/}\n        {/*  ))}*/}\n      </>\n    );\n    const CommunityBoxes = (\n      <>\n        {/*{followedCommunitiesPage.edges*/}\n        {/*  .map(follow => follow.context)*/}\n        {/*  .filter(*/}\n        {/*    (context): context is UserFollowedCommunityFragment =>*/}\n        {/*      context.__typename === 'Community'*/}\n        {/*  )*/}\n        {/*  .map(followedCommunity => (*/}\n        {/*    <CommunityPreviewHOC communityId={followedCommunity.id} key={followedCommunity.id} />*/}\n        {/*  ))}*/}\n      </>\n    );\n\n    const InventoryBoxes = <InventoryPage />;\n\n    const UserBoxes = (\n      <>\n        {/*{followedUsersPage.edges*/}\n        {/*  .map(follow => follow.context)*/}\n        {/*  .filter((context): context is UserFollowedUserFragment => context.__typename === 'User')*/}\n        {/*  .map(followedUser => (*/}\n        {/*    <UserPreviewHOC userId={followedUser.userId} key={followedUser.userId} />*/}\n        {/*  ))}*/}\n      </>\n    );\n\n    // @ts-ignore\n    const HeroUserBox = <HeroUser userName={userInfo.user?.character?.username || ''} />;\n\n    const props: any = {\n      basePath,\n      userInfo,\n      ActivityBoxes,\n      LikesBoxes,\n      HeroUserBox,\n      CollectionsBoxes,\n      CommunityBoxes,\n      InventoryBoxes,\n      UserBoxes\n      // userName: userInfo.user?.name || '',\n      // totalActivities: `${totalActivities || '0'}`,\n      // totalCollections: `${totalCollections || '0'}`,\n      // totalCommunities: `${totalCommunities || '0'}`,\n      // totalUsers: `${totalUsers || '0'}`,\n      // userLink: userInfo.user?.website || '',\n      // loadMoreActivities,\n      // loadMoreCollections,\n      // loadMoreCommunities,\n      // loadMoreFollowing,\n      // loadMoreLikes\n    };\n    return props;\n  }, [\n    userInfo,\n    // likesPage,\n    // activitiesPage.edges,\n    // followedCollectionsPage.edges,\n    // followedCommunitiesPage.edges,\n    // followedUsersPage.edges,\n    basePath\n    // loadMoreActivities,\n    // loadMoreCollections,\n    // loadMoreCommunities,\n    // loadMoreFollowing,\n    // loadMoreLikes\n  ]);\n  return <UserPageUI {...userPageProps} />;\n};\n","import React, { FC, useEffect, useReducer, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Modal from 'ui/modules/Modal';\nimport { Inventory } from 'ui/pages/inventory';\nimport { Filter } from 'ui/modules/Filter';\nimport { useNotifyMustLogin } from '../../lib/notifyMustLogin';\nimport { CreateLocationPanelHOC } from '../../modules/CreateLocationPanel/CreateLocationPanelHOK';\nimport { CreateResourcePanelHOC } from '../../modules/CreateResourcePanel/CreateResourcePanelHOC';\nimport { useEconomicResourcesFilteredQuery } from './InventoryPage.generated';\nimport { ASC } from 'util/constants/pagination';\nimport { notEmptyValue } from 'util/main';\n\nconst queryString = require('query-string');\n\nexport interface PrimaryAccountable {\n  id: string;\n  name: string;\n  image: string;\n  relationshipsAsObject?: any;\n  intents: {\n    id: string;\n    name: string;\n    note?: string;\n    image?: string | null;\n  }[];\n  onhandQuantity?: {\n    hasNumericalValue: string;\n    hasUnit?: {\n      label: string;\n      symbol: string;\n    };\n  };\n  accountingQuantity?: {\n    hasNumericalValue: number;\n    hasUnit?: {\n      label: string;\n      symbol: string;\n    };\n  };\n}\n\nexport interface EconomicResource {\n  id: string;\n  name: string;\n  note: string;\n  eventNote?: string;\n  hasPointInTime?: string;\n  image?: string;\n  primaryAccountable: PrimaryAccountable;\n  currentLocation?: {\n    id: string;\n    name: string;\n    lat: string;\n    long: string;\n  };\n  unitOfEffort: any;\n  containedIn: any;\n  contains: any;\n  lot: any;\n  stage: any;\n  trackingIdentifier?: string | null;\n  onhandQuantity?: {\n    id: string;\n    hasNumericalValue: number;\n    hasUnit: {\n      id: string;\n      label: string;\n    };\n  };\n  trace?: {\n    id: string;\n    hasTimePoint?: string;\n  };\n  track?: {\n    id: string;\n    note: string;\n    hasTimePoint?: string;\n    resourceQuantity: {\n      hasNumericalValue: number;\n      hasUnit: {\n        id: string;\n        label: string;\n      };\n    };\n    action?: {\n      id: string;\n      label: string;\n    };\n    provider: {\n      id: string;\n      name: string;\n    };\n    receiver: {\n      id: string;\n      name: string;\n    };\n  }[];\n}\n\nconst INITIAL_FILTER = {\n  sort: '',\n  order: '',\n  search: '',\n  trace: false,\n  track: false\n};\n\nexport type FilterType = {\n  sort?: string;\n  order?: string;\n  search?: string;\n  trace?: boolean;\n  track?: boolean;\n};\n\nexport const InventoryPage: FC<{ triggerTab?: boolean }> = ({\n  triggerTab\n}: {\n  triggerTab?: boolean;\n}) => {\n  const location = useLocation();\n  let history = useHistory();\n  const currentUser = location.pathname.split('/')[2];\n  const [showCreateLocation, toggleShowCreateLocation] = React.useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState(INITIAL_FILTER);\n\n  useEffect(() => {\n    const query = location.search;\n    const queryStringGetter = queryString.parse(query);\n\n    query?.length && setIsOpen(true);\n    setFilter(queryStringGetter);\n    // eslint-disable-next-line\n  }, []);\n\n  const notifiedMustLogin = useNotifyMustLogin();\n  const [showCreateResource, toggleShowCreateResource] = useReducer(\n    is => !notifiedMustLogin() && !is,\n    false\n  );\n  const CreateResourceModal = showCreateResource ? (\n    <Modal closeModal={toggleShowCreateResource}>\n      {showCreateLocation ? (\n        <CreateLocationPanelHOC done={toggleShowCreateLocation} />\n      ) : (\n        <CreateResourcePanelHOC\n          done={toggleShowCreateResource}\n          toggleCreateLocation={toggleShowCreateLocation}\n        />\n      )}\n    </Modal>\n  ) : null;\n\n  const { data } = useEconomicResourcesFilteredQuery({\n    variables: { agent: currentUser ? [currentUser] : [] }\n  });\n\n  const inventory = data?.economicResourcesFiltered || [];\n  const [filteredInventory, setFilteredInventory] = useState<Array<any>>([...inventory]);\n  useEffect(() => {\n    if (inventory.length) {\n      const query = location.search;\n      if (query.length) {\n        let newList = [...inventory];\n        if (filter.trace === true) {\n          newList = newList.filter((item: any) => item.trace.length);\n        }\n        if (filter.track === true) {\n          newList = newList.filter((item: any) => item.track.length);\n        }\n        if (filter.search) {\n          newList = newList.filter(item =>\n            item?.name?.toLowerCase().includes(filter.search.toLowerCase())\n          );\n        }\n        if (filter.order) {\n          newList = newList.sort(function(a: any, b: any) {\n            if (a[filter.sort] > b[filter.sort]) {\n              return 1;\n            }\n            if (a[filter.sort] < b[filter.sort]) {\n              return -1;\n            }\n            return 0;\n          });\n        }\n\n        if (filter.order && filter.order !== ASC) {\n          setFilteredInventory(newList);\n        } else {\n          setFilteredInventory(newList.reverse());\n        }\n        setFilteredInventory(newList);\n      } else {\n        setFilteredInventory(inventory);\n      }\n    }\n    // eslint-disable-next-line\n  }, [inventory]);\n\n  const triggerOpen = (value: boolean) => {\n    setIsOpen(value);\n  };\n\n  useEffect(() => {\n    checkFilter(filter.trace);\n    // eslint-disable-next-line\n  }, [filter.trace]);\n\n  useEffect(() => {\n    checkFilter(filter.track);\n    // eslint-disable-next-line\n  }, [filter.track]);\n\n  useEffect(() => {\n    setFilteredInventory(\n      inventory.filter(item =>\n        item?.name?.toLowerCase()?.includes(filter?.search?.toLowerCase() || '')\n      )\n    );\n    // eslint-disable-next-line\n  }, [filter.search, inventory]);\n\n  useEffect(() => {\n    let newInventory = [...filteredInventory];\n    newInventory = newInventory.sort(function(a: any, b: any) {\n      if (a[filter.sort] > b[filter.sort]) {\n        return 1;\n      }\n      if (a[filter.sort] < b[filter.sort]) {\n        return -1;\n      }\n\n      return 0;\n    });\n\n    if (filter.order !== ASC) {\n      setFilteredInventory(newInventory);\n    } else {\n      setFilteredInventory(newInventory.reverse());\n    }\n    // eslint-disable-next-line\n  }, [filter.order]);\n\n  useEffect(() => {\n    const queryStringSetter = queryString.stringify(notEmptyValue(filter));\n    history.push({\n      search: queryStringSetter\n    });\n    checkFilter(true);\n    // eslint-disable-next-line\n  }, [filter]);\n\n  const handleFilterChange = (prop: FilterType, isClear?: boolean) => {\n    if (isClear) {\n      setFilter(INITIAL_FILTER);\n      return;\n    }\n    setFilter(prev => ({\n      ...prev,\n      ...prop\n    }));\n  };\n\n  const handleClear = () => {\n    setFilter(INITIAL_FILTER);\n    setFilteredInventory(inventory);\n  };\n\n  const checkFilter = (data: any) => {\n    const query = location.search;\n\n    if (query.length || data) {\n      let newList = [...inventory];\n      if (filter.trace) {\n        newList = newList.filter((item: any) => item.trace.length);\n      }\n      if (filter.track) {\n        newList = newList.filter((item: any) => item.track.length);\n      }\n      if (filter.search) {\n        newList = newList.filter(item =>\n          item?.name?.toLowerCase().includes(filter.search.toLowerCase())\n        );\n      }\n      if (filter.order) {\n        newList = newList.sort(function(a: any, b: any) {\n          if (a[filter.sort] > b[filter.sort]) {\n            return 1;\n          }\n          if (a[filter.sort] < b[filter.sort]) {\n            return -1;\n          }\n\n          return 0;\n        });\n      }\n\n      if (filter.order && filter.order !== ASC) {\n        setFilteredInventory(newList);\n      } else {\n        setFilteredInventory(newList.reverse());\n      }\n\n      setFilteredInventory(newList);\n    } else {\n      setFilteredInventory(inventory);\n    }\n  };\n\n  return (\n    <>\n      {CreateResourceModal}\n      <Inventory inventory={filteredInventory} done={toggleShowCreateResource} owner={currentUser}>\n        <Filter\n          isOpen={isOpen}\n          triggerOpen={triggerOpen}\n          onChange={handleFilterChange}\n          onClear={handleClear}\n          filterSet={filter}\n        />\n      </Inventory>\n    </>\n  );\n};\n","type objectWithEmptyFields = { [field: string]: boolean | string | number };\n\nexport const notEmptyValue = (obj: objectWithEmptyFields) => {\n  const notEmptyObj: objectWithEmptyFields = {};\n  Object.keys(obj).forEach(key => {\n    if (\n      (typeof obj[key] === 'boolean' && obj[key] === true) ||\n      typeof obj[key] === 'number' ||\n      (typeof obj[key] === 'string' && obj[key] !== '')\n    ) {\n      notEmptyObj[key] = obj[key];\n    }\n  });\n\n  return notEmptyObj;\n};\n","import React, { FC, useMemo } from 'react';\nimport { UserPage, UserPageTab } from 'HOC/pages/user/UserPage';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { locationHelper } from './lib/helper';\n\ninterface UserPageRouter {\n  userId: string;\n  tab?: string;\n}\nconst UserPageRouter: FC<RouteComponentProps<UserPageRouter>> = ({ match }) => {\n  const userId = match.params.userId;\n  const maybeTabStr = match.params.tab as Tab;\n  const tab =\n    maybeTabStr === 'starred'\n      ? UserPageTab.Starred\n      : maybeTabStr === 'communities'\n      ? UserPageTab.Communities\n      : maybeTabStr === 'collections'\n      ? UserPageTab.Collections\n      : maybeTabStr === 'following'\n      ? UserPageTab.Following\n      : maybeTabStr === 'inventory'\n      ? UserPageTab.Inventory\n      : !maybeTabStr\n      ? UserPageTab.Activities\n      : null;\n\n  const props = useMemo<any | null>(\n    () =>\n      tab === null\n        ? null\n        : {\n            tab,\n            userId,\n            basePath: userLocation.getPath({ tab: undefined, userId }, undefined)\n          },\n    [tab, userId]\n  );\n  if (!props) {\n    return <NotFoundHOC />;\n  }\n  return (\n    <WithSidebarTemplate>\n      <UserPage {...props} />\n    </WithSidebarTemplate>\n  );\n};\n\nexport const UserPageRoute: RouteProps = {\n  exact: true,\n  path: '/user/:userId/:tab(starred|communities|collections|inventory|following)?',\n  component: UserPageRouter\n};\n\ntype Tab = undefined | 'starred' | 'communities' | 'collections' | 'inventory' | 'following';\ntype Params = {\n  userId: string;\n  tab: Tab;\n};\n\nexport const userLocation = locationHelper<Params, undefined>(UserPageRoute);\n","import { useMe } from 'fe/session/useMe';\nimport { MainHeaderHOC } from 'HOC/modules/Header/Header';\nimport { SidebarHOC } from 'HOC/modules/Sidebar/Sidebar';\nimport React, { FC, useMemo } from 'react';\nimport { SidebarProps, WithSidebar } from 'ui/templates/withSidebar';\nimport { GuestTemplate } from '../Guest/Guest';\nimport { ProvideSideBarContext } from 'HOC/context/SideBar';\nimport { SearchBox } from 'HOC/modules/SearchBox/SearchBox';\nimport { userLocation } from 'routes/UserPageRoute';\n\nexport interface WithSidebarTemplate {}\nexport const WithSidebarTemplate: FC<WithSidebarTemplate> = ({ children }) => {\n  const { loading, me } = useMe();\n\n  const withSidebarProps = useMemo<null | SidebarProps>(() => {\n    const user = me?.user;\n    if (!user || loading) {\n      return null;\n    }\n    const userLink = userLocation.getPath({ tab: undefined, userId: user.id || '' }, undefined);\n    const props: any = {\n      SidebarBox: <SidebarHOC />,\n      HeaderBox: <MainHeaderHOC />,\n      SearchBox: <SearchBox />,\n      // userImage,\n      userLink\n      // signout: logout,\n      // username: user.displayUsername || '',\n      // name: user.preferredUsername || ''\n    };\n    return props;\n  }, [loading, me]);\n\n  return withSidebarProps ? (\n    <ProvideSideBarContext>\n      <WithSidebar {...withSidebarProps}>{children}</WithSidebar>\n    </ProvideSideBarContext>\n  ) : (\n    <GuestTemplate>{children}</GuestTemplate>\n  );\n};\n","import { DiscoverPage, DiscoverPageTabs } from 'HOC/pages/discover/DiscoverPage';\nimport React, { FC, useMemo } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { WithSidebarTemplate } from 'HOC/templates/WithSidebar/WithSidebar';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\nimport { locationHelper } from './lib/helper';\n\ninterface DiscoverPageRouter {\n  tab?: string;\n}\nconst DiscoverPageRouter: FC<RouteComponentProps<DiscoverPageRouter>> = ({ match }) => {\n  const maybeTabStr = match.params.tab;\n  const tab =\n    maybeTabStr === 'collections'\n      ? DiscoverPageTabs.Collections\n      : maybeTabStr === 'communities'\n      ? DiscoverPageTabs.Communities\n      : !maybeTabStr\n      ? DiscoverPageTabs.Activities\n      : null;\n  const props = useMemo<DiscoverPage | null>(() => {\n    return tab === null\n      ? null\n      : {\n          basePath: '/discover',\n          tab\n        };\n  }, [tab]);\n  if (!props) {\n    return <NotFoundHOC />;\n  }\n\n  return (\n    <WithSidebarTemplate>\n      <DiscoverPage {...props} />\n    </WithSidebarTemplate>\n  );\n};\n\nexport const DiscoverPageRoute: RouteProps = {\n  exact: true,\n  path: '/discover/:tab(collections|communities)?',\n  component: DiscoverPageRouter\n};\n\ntype Tab = undefined | 'collections' | 'communities';\ntype Params = {\n  tab: Tab;\n};\n\nexport const discoverLocation = locationHelper<Params, undefined>(DiscoverPageRoute);\n","import React, { FC, useReducer } from 'react';\nimport { ResourceItem } from 'ui/pages/resource';\nimport Modal from '../../../ui/modules/Modal';\nimport { useNotifyMustLogin } from '../../lib/notifyMustLogin';\n// import { CreateEconomicEventOnResourcePanelHOC } from '../../modules/EconomicEventOnResourcePanel/CreateEconomicEventOnResourcePanelHOC';\n// import { UpdateEconomicResourceHOC } from '../../modules/EconomicEventOnResourcePanel/UpdateEconomicResourceHOC';\n// import { DeleteEconomicResourceHOC } from '../../modules/EconomicEventOnResourcePanel/DeleteEconomicResourceHOC';\nimport * as GQL from './EconomicResource.generated';\n\ntype ResourcePageProps = {\n  resourceId: string;\n};\n\nexport const EconomicResourceHOK: FC<ResourcePageProps> = ({ resourceId }) => {\n  const { data, loading, error } = GQL.useEconomicResourceQuery({\n    variables: { id: resourceId.trim() }\n  });\n\n  const resource = data?.economicResource;\n\n  console.log({ data, loading, resource });\n  const notifiedMustLogin = useNotifyMustLogin();\n  const [showCreateResource, toggleShowCreateResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const [showUpdateResource, toggleShowUpdateResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const [showDeleteResource, toggleShowDeleteResource] = useReducer(\n    is => (notifiedMustLogin() ? false : !is),\n    false\n  );\n\n  const PerformEventModal = showCreateResource ? (\n    <Modal closeModal={toggleShowCreateResource}>\n      <div>CreateEconomicEventOnResourcePanelHOC</div>\n      {/*<CreateEconomicEventOnResourcePanelHOC done={toggleShowCreateResource} resource={resource} />*/}\n    </Modal>\n  ) : null;\n\n  const EditResourceModal = showUpdateResource ? (\n    <Modal closeModal={toggleShowUpdateResource}>\n      <div>UpdateEconomicResourceHOC</div>\n      {/*<UpdateEconomicResourceHOC done={toggleShowUpdateResource} resource={resource} />*/}\n    </Modal>\n  ) : null;\n\n  const DeleteResourceModal = showDeleteResource ? (\n    <Modal closeModal={toggleShowDeleteResource}>\n      <div>DeleteEconomicResourceHOC</div>\n      {/*<DeleteEconomicResourceHOC done={toggleShowDeleteResource} resource={resource} />*/}\n    </Modal>\n  ) : null;\n\n  const props: any = {\n    openEditModal: toggleShowCreateResource,\n    openUpdateResourceModal: toggleShowUpdateResource,\n    openDeleteResourceModal: toggleShowDeleteResource,\n    resource,\n    loading,\n    error\n  };\n\n  return (\n    <>\n      {DeleteResourceModal}\n      {EditResourceModal}\n      {PerformEventModal}\n      <ResourceItem {...props} />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { EconomicResourceHOK } from 'HOC/pages/resource/EconomicResourceHOK';\nimport { WithSidebarTemplate } from '../HOC/templates/WithSidebar/WithSidebar';\n\ninterface InventoryResourceItemRouteProps {\n  resourceId: string;\n}\n\nconst InventoryResourceItemRoute: FC<RouteComponentProps<InventoryResourceItemRouteProps>> = ({\n  match\n}) => {\n  const resourceId = match.params.resourceId;\n\n  const props = {\n    resourceId: resourceId\n  };\n\n  return (\n    <WithSidebarTemplate>\n      <EconomicResourceHOK {...props} />\n    </WithSidebarTemplate>\n  );\n};\n\nexport const InventoryResourceItemRouter: RouteProps = {\n  exact: false,\n  path: '/resource/:resourceId',\n  component: InventoryResourceItemRoute\n};\n","import * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { i18nMark } from '@lingui/react';\nimport { FormikHook } from 'ui/@types/types';\nimport Alert from '../../elements/Alert';\nimport { Input } from '@rebass/forms';\nimport Button from 'ui/elements/Button';\nimport { Box, Text, Flex } from 'rebass/styled-components';\nimport styled from '../../themes/styled';\nimport { AlertCircle } from 'react-feather';\nimport { AlertWrapper } from 'ui/modules/Modal';\nimport { INVITE_ONLY_TEXT } from 'mn-constants';\nimport media from 'styled-media-query';\nimport { Link } from 'react-router-dom';\nimport LogoContainer from 'ui/elements/Logo';\n\nlet tt = {\n  login: i18nMark('Sign in'),\n  placeholders: {\n    email: i18nMark('eg. mary@moodlers.org'),\n    password: i18nMark('Choose your password'),\n    passwordConfirm: i18nMark('Confirm your password')\n  }\n};\n\nexport interface Props {\n  formik: FormikHook<SignUpFormValues>;\n  registeredUserID?: string;\n  registeredEmail?: string;\n}\n\nexport interface SignUpFormValues {\n  email: string;\n  password: string;\n  passwordConfirm: string;\n}\n\nexport const SignUpPage: React.FC<Props> = ({ formik, registeredUserID, registeredEmail }) => {\n  return (\n    <Container>\n      {!formik.isSubmitting && formik.submitCount && registeredUserID ? (\n        <Box mt={3}>\n          <LogoContainer />\n          <Wrapper>\n            <Box>\n              <Text variant=\"suptitle\">\n                <Trans>Welcome</Trans> <b>{registeredUserID}</b>\n              </Text>\n              <Text mt={2} variant=\"text\">\n                <Trans>Please confirm your email address</Trans>\n                <b>{' ' + registeredEmail + ' '}</b>\n                <Trans>\n                  by clicking on the link we emailed you (check your spam folder if necessary).\n                </Trans>\n              </Text>\n            </Box>\n            <Browse>\n              <Link to={'/'}>\n                <Button mt={3} variant=\"primary\">\n                  <Trans>Sign in</Trans>\n                </Button>\n              </Link>\n            </Browse>\n          </Wrapper>\n          {/* <Alert variant=\"negative\">{formik.errors.email}</Alert> */}\n        </Box>\n      ) : (\n        <LoginWrapper>\n          <LogoContainer />\n          <Header>\n            <Aware p={3}>\n              <Box mr={2}>\n                <AlertCircle size=\"20\" color=\"white\" />\n              </Box>\n              <Text variant=\"suptitle\">{INVITE_ONLY_TEXT}</Text>\n            </Aware>\n          </Header>\n          <Flex mt={2}>\n            <FormWrapper onSubmit={formik.handleSubmit}>\n              <Box>\n                <label>\n                  <Trans>Email</Trans>\n                </label>\n                <Input\n                  placeholder={tt.placeholders.email}\n                  name=\"email\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                />\n                {formik.errors.email && (\n                  <AlertWrapper>\n                    <Alert variant=\"negative\">{formik.errors.email}</Alert>\n                  </AlertWrapper>\n                )}\n              </Box>\n              <Box mt={3}>\n                <label>\n                  <Trans>Password</Trans>\n                </label>\n                <Input\n                  placeholder={tt.placeholders.password}\n                  name=\"password\"\n                  type=\"password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                />\n                {formik.errors.password && (\n                  <AlertWrapper>\n                    <Alert variant=\"negative\">{formik.errors.password}</Alert>\n                  </AlertWrapper>\n                )}\n              </Box>\n              <Box mt={3}>\n                <label>\n                  <Trans>Confirm password</Trans>\n                </label>\n                <Input\n                  placeholder={tt.placeholders.passwordConfirm}\n                  name=\"passwordConfirm\"\n                  type=\"password\"\n                  value={formik.values.passwordConfirm}\n                  onChange={formik.handleChange}\n                />\n                {formik.errors.passwordConfirm && (\n                  <AlertWrapper>\n                    <Alert variant=\"negative\">{formik.errors.passwordConfirm}</Alert>\n                  </AlertWrapper>\n                )}\n              </Box>\n              <Box mt={3}>\n                <Button\n                  variant=\"primary\"\n                  isSubmitting={formik.isSubmitting}\n                  isDisabled={formik.isSubmitting}\n                  type=\"submit\"\n                >\n                  <Trans>Sign up</Trans>\n                </Button>\n              </Box>\n            </FormWrapper>\n          </Flex>\n        </LoginWrapper>\n      )}\n    </Container>\n  );\n};\nexport default SignUpPage;\n\nconst Browse = styled(Box)`\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst Wrapper = styled.div`\n  background: #fff;\n  border-radius: 4px;\n  height: inherit;\n  padding: 30px 20px;\n  text-align: center;\n  height: fit-content;\n`;\n\nconst LoginWrapper = styled(Box)`\n  ${media.lessThan('medium')`\n    // display: grid;\n    // grid-template-columns: 1fr;\n    padding: 16px\n  `};\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 900px;\n  padding-bottom: 50px;\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n`;\n\nconst FormWrapper = styled.form`\n  margin: 0;\n  flex: 1;\n  input {\n    height: 50px;\n    color: inherit;\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #dadada;\n  }\n  background: ${props => props.theme.colors.appInverse};\n  border-radius: 4px;\n  height: inherit;\n  border: 1px solid #dddfe2;\n  text-align: left;\n  height: fit-content;\n  padding: 16px;\n`;\n\n// const Right = styled(Box)`\n//   .extra {\n//     width: 100%;\n//     margin-right: 0;\n//   }\n// `;\n\n// const Footer = styled(Box)`\n//   border-top: ${props => props.theme.colors.border};\n//   padding-top: 24px;\n//   & ul {\n//     list-style-type: none;\n//     margin: 0;\n//     padding: 0;\n//     text-align: center;\n//     margin: 0 auto;\n//     justify-content: center;\n//     align-items: center;\n//     display: flex;\n//     flex: 1;\n//     ${clearFix()}\n//     & li {\n//       float: left;\n//       margin-right: 16px;\n//       & a {\n//         color: rgba(0, 0, 0, 0.45);\n//         text-decoration: none;\n//         &:hover {\n//           text-decoration: underline;\n//         }\n//       }\n//     }\n//   }\n// `;\n\nconst Aware = styled(Flex)<{ green: boolean }>`\n  background: ${props => (props.green ? '#546d4f' : props.theme.colors.secondary)};\n  border-radius: 4px;\n  align-items: center;\n  div {\n    color: white;\n  }\n`;\n","import { useFormik } from 'formik';\nimport React, { FC, useMemo } from 'react';\nimport SignUpPage, { SignUpFormValues, Props } from 'ui/pages/signUp';\nimport * as Yup from 'yup';\nimport { useAnon } from 'fe/session/useAnon';\nimport { t } from '@lingui/macro';\nimport { usePageTitle } from 'context/global/pageCtx';\n\nconst initialValues: SignUpFormValues = {\n  email: '',\n  password: '',\n  passwordConfirm: ''\n};\nexport interface SignUpPageHOC {}\nconst signUpPageTitle = t`Sign Up`;\n\nexport const SignUpPageHOC: FC<SignUpPageHOC> = () => {\n  usePageTitle(signUpPageTitle);\n  const { signUp, signUpStatus } = useAnon();\n  const validationSchema: Yup.ObjectSchema<SignUpFormValues> = Yup.object<SignUpFormValues>({\n    email: Yup.string()\n      .max(50)\n      .required(),\n    password: Yup.string()\n      .min(10)\n      .max(50)\n      .required(),\n    passwordConfirm: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required()\n  });\n\n  const formik = useFormik<SignUpFormValues>({\n    initialValues,\n    enableReinitialize: true,\n    validateOnChange: false,\n    validateOnBlur: false,\n    validationSchema,\n    onSubmit: regInput =>\n      signUp({\n        email: regInput.email,\n        password: regInput.password\n      })\n  });\n\n  const props = useMemo<Props>(\n    () =>\n      // @ts-ignore\n      signUpStatus.called && signUpStatus.data?.signup\n        ? {\n            formik,\n            registeredUserID: signUpStatus.data?.signup,\n            registeredEmail: formik.values.email\n          }\n        : {\n            formik\n          },\n    [formik, signUpStatus.called, signUpStatus.data]\n  );\n\n  return <SignUpPage {...props} />;\n};\n","import { SignUpPageHOC } from 'HOC/pages/signUp/SignUpPage';\nimport React, { FC } from 'react';\nimport { RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { GuestTemplate } from 'HOC/templates/Guest/Guest';\n\ninterface SignupPageRouter {}\nconst SignupPageRouter: FC<RouteComponentProps<SignupPageRouter>> = ({\n  match\n}) => {\n  return (\n    <GuestTemplate withoutHeader>\n      <SignUpPageHOC />\n    </GuestTemplate>\n  );\n};\n\nexport const SignupPageRoute: RouteProps = {\n  exact: true,\n  path: '/signup',\n  component: SignupPageRouter\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// import { AllCollectionsPageRoute } from 'routes/AllCollectionsPageRoute';\n// import { AllCommunitiesPageRoute } from 'routes/AllCommunitiesPageRoute';\n// import { CollectionPageRoute } from 'routes/CollectionPageRoute';\n// import { CommunityPageRoute } from 'routes/CommunityPageRoute';\n// import { ConfirmEmailRoute } from 'routes/ConfirmEmailPageRoute';\n// import { CreateNewPasswordPageRoute } from 'routes/CreateNewPasswordPageRoute';\nimport { DiscoverPageRoute } from 'routes/DiscoverPageRoute';\nimport { InventoryResourceItemRouter } from 'routes/InventoryResourceItemRouter';\n// import { ActivityPageRouter } from 'routes/ActivityPageRoute';\nimport { HomePageRoute } from 'routes/HomePageRoute';\nimport { LoginPageRoute } from 'routes/LoginPageRoute';\n// import { MapsPageRoute } from 'routes/MapsPageRoute';\n// import { ResetPasswordPageRoute } from 'routes/ResetPasswordPageRoute';\n// import { SearchPageRoute } from 'routes/SearchPageRoute';\n// import { SettingsPageRoute } from 'routes/SettingsPageRoute';\nimport { SignupPageRoute } from 'routes/SignupPageRoute';\n// import { ThreadPageRoute } from 'routes/ThreadPageRoute';\nimport { UserPageRoute } from 'routes/UserPageRoute';\n// import { LMSMoodleSearchRoute } from 'routes/LMSMoodleSearchRoute';\n// import { TermsAndConditionsPageRoute } from 'routes/TermsAndConditionsPage';\nimport { NotFoundHOC } from 'HOC/pages/not-found/NotFound';\n\nexport const Router: React.FC = () => {\n  return (\n    <Switch>\n      <Route {...UserPageRoute} />\n      {/*<Route {...CommunityPageRoute} />*/}\n      {/*<Route {...CollectionPageRoute} />*/}\n      {/*<Route {...SettingsPageRoute} />*/}\n      {/*<Route {...AllCollectionsPageRoute} />*/}\n      {/*<Route {...AllCommunitiesPageRoute} />*/}\n      {/*<Route {...ThreadPageRoute} />*/}\n      <Route {...InventoryResourceItemRouter} />\n      {/*<Route {...ActivityPageRouter} />*/}\n      <Route {...DiscoverPageRoute} />\n      {/*<Route {...SearchPageRoute} />*/}\n      {/*<Route {...CreateNewPasswordPageRoute} />*/}\n      {/*<Route {...ResetPasswordPageRoute} />*/}\n      <Route {...LoginPageRoute} />\n      <Route {...SignupPageRoute} />\n      {/*<Route {...ConfirmEmailRoute} />*/}\n      {/*<Route {...TermsAndConditionsPageRoute} />*/}\n      {/*<Route {...LMSMoodleSearchRoute} />*/}\n      <Route {...HomePageRoute} />\n      {/*<Route {...MapsPageRoute} />*/}\n      <Route component={NotFoundHOC} />\n    </Switch>\n  );\n};\n","import * as React from 'react';\nimport Alert from 'ui/elements/Alert/index';\nimport { X } from 'react-feather';\nimport styled from 'ui/themes/styled';\nimport { Box } from 'rebass';\n\nexport const TopMessage: React.FC = () => {\n  const [show, setShow] = React.useState(true);\n  return show ? (\n    <AlertWrap>\n      <Alert variant=\"warning\">\n        <div style={{ textAlign: 'center' }}>\n          This site is currently in active development. We are looking forward to reading your\n          feedback and ideas in our{' '}\n          <a\n            href=\"https://github.com/reflow-project/weloop/issues\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Issues Tracker\n          </a>\n          <span\n            style={{\n              cursor: 'pointer',\n              position: 'absolute',\n              top: '10px',\n              right: '10px'\n            }}\n            onClick={() => setShow(false)}\n          >\n            <X size={16} />\n          </span>\n        </div>\n      </Alert>\n    </AlertWrap>\n  ) : null;\n};\n\nconst AlertWrap = styled(Box)`\n  position: relative;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 4010;\n`;\n","import * as React from 'react';\nimport ThemeProvider from 'ui/styleguide/Wrapper';\nimport { Router } from './Router';\nimport { TopMessage } from './topMessage';\n\nexport const App: React.FC = () => {\n  return (\n    <ThemeProvider>\n      <>\n        <TopMessage />\n        <Router />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import algoliasearch from 'algoliasearch/lite';\nimport qs from 'qs';\nimport React from 'react';\nimport { InstantSearch } from 'react-instantsearch-dom';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { LocationDescriptorObject } from 'history';\nimport { mothershipCreds } from '../../mn-constants';\nconst createURL = (searchState: any) => `?${qs.stringify(searchState)}`;\n\nconst searchStateToUrl = (searchState: any) => `/search/${createURL(searchState)}`;\n\nconst urlToSearchState = (search: string) => qs.parse(search.slice(1));\nconst DEBOUNCE_TIME = 500;\nconst searchClient =\n  mothershipCreds &&\n  mothershipCreds.appId &&\n  mothershipCreds.apiKey &&\n  algoliasearch(mothershipCreds.appId, mothershipCreds.apiKey);\n\nexport const ProvideAlgoliaContext: React.FC = ({ children }) => {\n  const { push } = useHistory();\n  const location = useLocation();\n  const backLoc = React.useRef<LocationDescriptorObject | undefined>();\n  const searching = React.useRef(isSearchLocation(location.pathname));\n  const [searchState, setSearchState] = React.useState(urlToSearchState(location.search));\n  React.useEffect(() => {\n    // console.log(\n    //   '\\nsearchState',\n    //   searchState,\n    //   '\\nlocation:',\n    //   location,\n    //   '\\nbackLoc:',\n    //   backLoc.current,\n    //   '\\nisInSearch:',\n    //   searching.current\n    // );\n    const setUrlTO = setTimeout(() => {\n      if (searching.current && !isSearchLocation(location.pathname)) {\n        backLoc.current = undefined;\n        searching.current = false;\n        setSearchState(EMPTY_QUERY);\n      } else if (searchState.query) {\n        backLoc.current =\n          backLoc.current || (isSearchLocation(location.pathname) ? undefined : location);\n        searching.current = true;\n        push(searchStateToUrl(searchState));\n      } else if (isSearchLocation(location.pathname)) {\n        if (backLoc.current) {\n          push(backLoc.current);\n        } else {\n          push('/');\n        }\n        backLoc.current = undefined;\n      }\n    }, DEBOUNCE_TIME);\n    return () => {\n      clearTimeout(setUrlTO);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchState, location.pathname, location.hash, location.search, push]);\n  const handleSetSearchState = React.useCallback(\n    newSearchState => {\n      // console.table({ newSearchState, searchState });\n      if (\n        'query' in newSearchState &&\n        // eslint-disable-next-line eqeqeq\n        (newSearchState?.query != searchState?.query ||\n          // eslint-disable-next-line eqeqeq\n          newSearchState?.refinementList?.index_type != searchState?.refinementList?.index_type ||\n          // eslint-disable-next-line eqeqeq\n          newSearchState?.page != searchState?.page)\n      ) {\n        setSearchState(newSearchState);\n      }\n    },\n    [searchState]\n  );\n  return searchClient && mothershipCreds ? (\n    <InstantSearch\n      searchState={searchState}\n      onSearchStateChange={handleSetSearchState}\n      searchClient={searchClient}\n      refresh={true}\n      indexName={mothershipCreds.indexName || ''}\n      createURL={createURL}\n    >\n      {children}\n    </InstantSearch>\n  ) : (\n    <>{children}</>\n  );\n};\nconst isSearchLocation = (locationPathname: string) => locationPathname === '/search/';\nconst EMPTY_QUERY = { query: '' };\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ProvideAlgoliaContext } from './algolia';\nimport { ProvideLocalizationCtx } from './localizationCtx';\nimport { ProvidePageCtx } from './pageCtx';\n\ninterface Props {\n  children: React.ReactNode;\n}\nexport const ProvideContexts: React.FC<Props> = ({ children }) => {\n  return (\n    <ProvideLocalizationCtx>\n      <ProvidePageCtx>\n        <BrowserRouter>\n          <ProvideAlgoliaContext>{children}</ProvideAlgoliaContext>\n        </BrowserRouter>\n      </ProvidePageCtx>\n    </ProvideLocalizationCtx>\n  );\n};\n","import { IS_DEV, PUBLIC_URL } from './mn-constants';\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (!IS_DEV && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Sentry from '@sentry/browser';\n// import { MngErrorLink } from 'fe/lib/graphql/ctx';\nimport * as React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport ReactDOM from 'react-dom';\nimport { Slide, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { createGlobalStyle } from 'styled-components';\nimport media from 'styled-media-query';\nimport getApolloClient from './apollo/client';\nimport App from './containers/App/App';\nimport { ProvideContexts } from './context/global';\nimport * as K from './mn-constants';\nimport { colors, typography } from './mn-constants';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createLocalSessionKVStorage } from './util/keyvaluestore/localSessionStorage';\n\nK.SENTRY_KEY &&\n  Sentry.init({\n    dsn: K.SENTRY_KEY\n  });\n\nrun();\nasync function run() {\n  const Global = createGlobalStyle`\n      body, html {\n          border: 0;\n          margin: 0;\n          padding: 0;\n          width: 100%;\n          height: 100%;\n          font-family: ${typography.type.primary} !important;\n      }\n\n      * {\n        box-sizing: border-box;\n      }\n      input, textarea {\n        ::placeholder {\n          font-family: ${typography.type.primary} !important;\n        }\n      }\n      h1 {\n        font-size: 50px;\n      }\n      h2 {\n        font-size: 30px;\n      }\n      h3 {\n        font-size: 18px;\n      }\n      p {\n        font-size: 18px;\n      }\n\n      body {\n        background: ${colors.app};\n        .ais-SearchBox {\n          border-radius: 4px;\n          border: ${colors.border}\n          height: 34px;\n          width: 380px;\n          background: ${colors.app}\n          input {\n            border: none;\n            margin: 0 !important; \n            border-radius: 4px;\n            text-indent: 30px;\n            padding: 0;\n            height: 32px;\n            background: ${colors.app};\n          }\n        }\n        .ais-InstantSearch__root { \n          display: flex;\n        width: 100%;\n        }\n      }\n\n      .Toastify__toast--success{\n        background-color: ${colors.secondary};\n      }\n\n      .Toastify__toast-container--top-right{\n        top:60px !important;\n        ${media.lessThan('480px')` \n          width: 90vw !important;\n          margin: 0 auto; \n        `}; \n    }\n\n    input, textarea{\n      &:focus::placeholder{\n        color: transparent;\n      }\n    }\n\n    input:focus::-webkit-input-placeholder, textarea:focus::-webkit-input-placeholder { color:transparent; }\n    input:focus:-moz-placeholder, textarea:focus:-moz-placeholder { color:transparent; } /* FF 4-18 */\n    input:focus::-moz-placeholder, textarea:focus::-moz-placeholder { color:transparent; } /* FF 19+ */\n    input:focus:-ms-input-placeholder, textarea:focus:-ms-input-placeholder { color:transparent; } /* IE 10+ */\n  `;\n  const createLocalKVStore = createLocalSessionKVStorage('local');\n\n  const apolloClient = await getApolloClient({\n    localKVStore: createLocalKVStore('APOLLO#'),\n    appLinks: []\n  });\n\n  const ApolloApp = () => (\n    <ApolloProvider client={apolloClient.client}>\n      <ProvideContexts>\n        <Global />\n        <ToastContainer hideProgressBar transition={Slide} autoClose={3000} newestOnTop />\n        <App />\n      </ProvideContexts>\n    </ApolloProvider>\n  );\n\n  ReactDOM.render(<ApolloApp />, document.getElementById('root'));\n\n  registerServiceWorker();\n}\n"],"sourceRoot":""}